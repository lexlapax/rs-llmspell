[package]
name = "llmspell-kernel"
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true
description = "Jupyter-compatible execution kernel for LLMSpell"

[dependencies]
# Core dependencies
anyhow = "1.0"
tokio = { version = "1.41", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.11", features = ["v4", "serde"] }
async-trait = "0.1"
clap = { version = "4.0", features = ["derive"] }
chrono = { version = "0.4", features = ["serde"] }
glob = "0.3"
dirs = "5.0"
hex = "0.4"

# Internal crates (minimal initial dependencies)
llmspell-bridge = { path = "../llmspell-bridge" }
llmspell-config = { path = "../llmspell-config" }
llmspell-core = { path = "../llmspell-core" }
llmspell-debug = { path = "../llmspell-debug" }
llmspell-sessions = { path = "../llmspell-sessions" }
llmspell-state-persistence = { path = "../llmspell-state-persistence" }
llmspell-utils = { path = "../llmspell-utils" }

# Temporary dependency - will be removed after Jupyter implementation
llmspell-engine = { path = "../llmspell-engine" }

# ZeroMQ and Jupyter dependencies  
zmq = "0.10"
hmac = "0.12"
sha2 = "0.10"
subtle = "2.6"
rand = "0.8"
futures = "0.3"
# Note: hex already included above, jupyter-protocol types implemented manually

[[bin]]
name = "llmspell-kernel"
path = "src/bin/llmspell-kernel.rs"

[dev-dependencies]
tempfile = "3.14"
tokio-test = "0.4"
futures = "0.3"
pretty_assertions = "1.4"

# Test target definitions
[[test]]
name = "transport"
path = "tests/unit/transport.rs"

[[test]]
name = "protocol"
path = "tests/unit/protocol.rs"

[[test]]
name = "hmac_verification"
path = "tests/security/hmac_verification.rs"

[[test]]
name = "jupyter_compatibility"
path = "tests/integration/jupyter_compatibility.rs"

[[test]]
name = "kernel_lifecycle"
path = "tests/integration/kernel_lifecycle.rs"

[lints]
workspace = true
