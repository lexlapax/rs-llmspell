# Session-enabled configuration for testing session and artifact examples
# This configuration enables the Session and Artifact globals

# Default script engine to use
default_engine = "lua"

# Engine-specific configurations
[engines.lua]
stdlib_level = "full"
sandbox_mode = false
memory_limit = 52428800
max_instructions = 1000000

[engines.javascript]
module_resolution = "node"
allow_eval = false
allow_timers = true
allow_console = true
memory_limit = 52428800
max_event_loop_ticks = 10000
typescript = false
jsx = false

# No providers configured - session examples don't need LLM access for basic operations
[providers]
# Empty section - no providers needed

# Runtime settings
[runtime]
max_concurrent_scripts = 10
script_timeout_seconds = 300
enable_streaming = true

[runtime.security]
allow_file_access = true
allow_network_access = true
allow_process_spawn = true
max_memory_bytes = 52428800
max_execution_time_ms = 300000

# State persistence configuration - REQUIRED for Session global (sessions use state)
[runtime.state_persistence]
enabled = true
backend_type = "memory"  # Use memory backend for examples
migration_enabled = false
backup_enabled = false
max_state_size_bytes = 10000000  # 10MB per key

# Session configuration
[runtime.sessions]
enabled = true
max_sessions = 100
max_artifacts_per_session = 1000
artifact_compression_threshold = 10240  # 10KB
session_timeout_seconds = 3600  # 1 hour
storage_backend = "memory"  # Uses same backend as state

# Hook system (optional, but used by sessions)
[runtime.hooks]
enabled = true
max_hooks = 100
circuit_breaker_threshold = 0.05  # 5% overhead max

# Event system (optional, but used by sessions)
[runtime.events]
enabled = true
max_subscribers = 100
event_buffer_size = 1000