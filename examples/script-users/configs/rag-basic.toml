# Basic RAG Configuration Template
# This configuration provides a simple setup for RAG functionality
# Suitable for getting started with vector search and document ingestion

[rag]
# Enable RAG functionality
enabled = true

# Multi-tenant support (set to true if you need tenant isolation)
multi_tenant = false

[rag.vector_storage]
# Vector dimensions (depends on your embedding model)
# Common values: 384 (all-MiniLM-L6-v2), 768 (bert-base), 1536 (OpenAI ada-002)
dimensions = 384

# Storage backend: "hnsw" for production, "mock" for testing
backend = "hnsw"

# Optional: Persistence path for vector storage
# persistence_path = "/path/to/vector/storage"

# HNSW algorithm parameters (defaults are usually good)
[rag.vector_storage.hnsw]
m = 16                    # Number of bi-directional links per node
ef_construction = 200     # Size of dynamic candidate list for construction
ef_search = 50           # Size of search candidate list
max_elements = 1000000   # Maximum number of vectors
metric = "cosine"        # Distance metric: "cosine", "euclidean", "innerproduct"
allow_replace_deleted = true
# num_threads = 4        # Number of threads for parallel operations

[rag.embedding]
# Default embedding provider
default_provider = "openai"

# Enable caching to avoid re-computing embeddings
cache_enabled = true
cache_size = 10000       # Number of embeddings to cache
cache_ttl_seconds = 3600 # Cache TTL (1 hour)

# Batch processing settings
batch_size = 32
timeout_seconds = 30
max_retries = 3

[rag.chunking]
# Document chunking strategy
strategy = "sliding_window"  # Options: "sliding_window", "sentence", "semantic"
chunk_size = 512             # Size of each chunk in tokens
overlap = 64                 # Overlap between chunks
max_chunk_size = 2048
min_chunk_size = 100

[rag.cache]
# Search result caching
search_cache_enabled = true
search_cache_size = 1000        # Number of queries to cache
search_cache_ttl_seconds = 300  # 5 minutes

# Document caching
document_cache_enabled = true
document_cache_size_mb = 100    # Maximum cache size in MB