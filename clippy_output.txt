warning: item in documentation is missing backticks
 --> llmspell-core/src/lib.rs:2:41
  |
2 | //! ABOUTME: Foundation layer providing BaseAgent, Agent, Tool, and Workflow traits
  |                                         ^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
2 - //! ABOUTME: Foundation layer providing BaseAgent, Agent, Tool, and Workflow traits
2 + //! ABOUTME: Foundation layer providing `BaseAgent`, Agent, Tool, and Workflow traits
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/lib.rs:6:54
  |
6 | //! `llmspell-core` is the foundational crate of the LLMSpell system, providing:
  |                                                      ^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
6 - //! `llmspell-core` is the foundational crate of the LLMSpell system, providing:
6 + //! `llmspell-core` is the foundational crate of the `LLMSpell` system, providing:
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/error.rs:2:23
  |
2 | //! ABOUTME: Provides LLMSpellError enum and Result type alias
  |                       ^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides LLMSpellError enum and Result type alias
2 + //! ABOUTME: Provides `LLMSpellError` enum and Result type alias
  |

warning: item in documentation is missing backticks
  --> llmspell-core/src/error.rs:71:38
   |
71 | /// Comprehensive error enum for all LLMSpell operations.
   |                                      ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
71 - /// Comprehensive error enum for all LLMSpell operations.
71 + /// Comprehensive error enum for all `LLMSpell` operations.
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/error.rs:227:5
    |
227 |     pub fn category(&self) -> ErrorCategory {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn category(&self) -> ErrorCategory`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/error.rs:246:5
    |
246 |     pub fn severity(&self) -> ErrorSeverity {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn severity(&self) -> ErrorSeverity`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/error.rs:252:13
    |
252 |             Self::Timeout { .. } => ErrorSeverity::Warning,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
248 ~             Self::Configuration { .. } => ErrorSeverity::Error,
249 |             Self::Security { .. } => ErrorSeverity::Critical,
250 |             Self::Internal { .. } => ErrorSeverity::Fatal,
251 ~             Self::Timeout { .. } | Self::Validation { .. } => ErrorSeverity::Warning,
    |

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-core/src/error.rs:249:13
    |
249 | /             Self::Configuration { .. } => ErrorSeverity::Error,
250 | |             Self::Security { .. } => ErrorSeverity::Critical,
    | |____________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-core/src/error.rs:253:13
    |
253 |             _ => ErrorSeverity::Error,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/error.rs:258:5
    |
258 |     pub fn is_retryable(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_retryable(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/error.rs:264:13
    |
264 |             Self::Resource { .. } => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
260 ~             Self::Resource { .. } | Self::Network { .. }
261 +             | Self::Timeout { .. }
262 +             | Self::Provider { .. }
263 ~             | Self::RateLimit { .. } => true,
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/error.rs:271:13
    |
271 |             Self::Security { .. } | Self::Configuration { .. } | Self::Validation { .. } => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
271 ~             Self::Security { .. } | Self::Configuration { .. } | Self::Validation { .. } | Self::Internal { .. } => false,
272 ~             Self::ResourceLimit { .. } => false, // Resource limits are not retryable
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/error.rs:271:13
    |
271 |             Self::Security { .. } | Self::Configuration { .. } | Self::Validation { .. } => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
271 ~             Self::Security { .. } | Self::Configuration { .. } | Self::Validation { .. } | Self::ResourceLimit { .. } => false,
272 |             Self::Internal { .. } => false,
273 ~             // Resource limits are not retryable
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/error.rs:272:13
    |
272 |             Self::Internal { .. } => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
272 ~             Self::Internal { .. } | Self::ResourceLimit { .. } => false,
273 ~             // Resource limits are not retryable
    |

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-core/src/error.rs:271:13
    |
271 | /             Self::Security { .. } | Self::Configuration { .. } | Self::Validation { .. } => false,
272 | |             Self::Internal { .. } => false,
    | |____________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-core/src/error.rs:274:13
    |
274 |             _ => false,
    |             ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-core/src/error.rs:272:13
    |
272 | /             Self::Internal { .. } => false,
273 | |             Self::ResourceLimit { .. } => false, // Resource limits are not retryable
    | |____________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-core/src/error.rs:274:13
    |
274 |             _ => false,
    |             ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-core/src/error.rs:273:13
    |
273 |             Self::ResourceLimit { .. } => false, // Resource limits are not retryable
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-core/src/error.rs:274:13
    |
274 |             _ => false,
    |             ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/error.rs:279:5
    |
279 |     pub fn retry_delay_ms(&self) -> Option<u64> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn retry_delay_ms(&self) -> Option<u64>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-core/src/error.rs:285:13
    |
285 |             Self::Network { .. } => Some(1000), // 1 second
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-core/src/error.rs:293:13
    |
293 |             _ => Some(1000),                     // Default 1 second
    |             ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/error.rs:298:5
    |
298 | /     pub fn with_source<E>(mut self, source: E) -> Self
299 | |     where
300 | |         E: std::error::Error + Send + Sync + 'static,
...   |
317 | |         self
318 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
    = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/error.rs:328:22
    |
328 |             message: format!("IO error: {}", err),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
328 -             message: format!("IO error: {}", err),
328 +             message: format!("IO error: {err}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/error.rs:338:22
    |
338 |             message: format!("JSON serialization error: {}", err),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
338 -             message: format!("JSON serialization error: {}", err),
338 +             message: format!("JSON serialization error: {err}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/error.rs:347:22
    |
347 |             message: format!("Formatting error: {}", err),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
347 -             message: format!("Formatting error: {}", err),
347 +             message: format!("Formatting error: {err}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/events/artifact_events.rs:315:5
    |
315 |     pub fn new(event_type: ArtifactEventType, source: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(event_type: ArtifactEventType, source: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/events/artifact_events.rs:325:5
    |
325 | /     pub fn with_context(mut self, key: impl Into<String>, value: serde_json::Value) -> Self {
326 | |         self.context.insert(key.into(), value);
327 | |         self
328 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/events/artifact_events.rs:331:5
    |
331 |     pub fn event_name(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn event_name(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/events/artifact_events.rs:354:5
    |
354 |     pub fn new(source: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(source: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/events/artifact_events.rs:362:5
    |
362 | /     pub fn with_context(mut self, key: impl Into<String>, value: serde_json::Value) -> Self {
363 | |         self.context.insert(key.into(), value);
364 | |         self
365 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/events/artifact_events.rs:368:5
    |
368 | /     pub fn created(
369 | |         self,
370 | |         artifact: ArtifactMetadata,
371 | |         location: Option<StorageLocation>,
372 | |     ) -> ArtifactEvent {
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
368 ~     #[must_use] pub fn created(
369 +         self,
370 +         artifact: ArtifactMetadata,
371 +         location: Option<StorageLocation>,
372 ~     ) -> ArtifactEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/events/artifact_events.rs:386:5
    |
386 | /     pub fn modified(
387 | |         self,
388 | |         artifact_id: ArtifactId,
389 | |         modifications: Vec<Modification>,
390 | |     ) -> ArtifactEvent {
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
386 ~     #[must_use] pub fn modified(
387 +         self,
388 +         artifact_id: ArtifactId,
389 +         modifications: Vec<Modification>,
390 ~     ) -> ArtifactEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/events/artifact_events.rs:406:5
    |
406 | /     pub fn deleted(
407 | |         self,
408 | |         artifact_id: ArtifactId,
409 | |         metadata: ArtifactMetadata,
410 | |         permanent: bool,
411 | |     ) -> ArtifactEvent {
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
406 ~     #[must_use] pub fn deleted(
407 +         self,
408 +         artifact_id: ArtifactId,
409 +         metadata: ArtifactMetadata,
410 +         permanent: bool,
411 ~     ) -> ArtifactEvent {
    |

warning: item in documentation is missing backticks
 --> llmspell-core/src/execution_context.rs:1:23
  |
1 | //! ABOUTME: Enhanced ExecutionContext with hierarchical support and service bundle architecture
  |                       ^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: Enhanced ExecutionContext with hierarchical support and service bundle architecture
1 + //! ABOUTME: Enhanced `ExecutionContext` with hierarchical support and service bundle architecture
  |

warning: variables can be used directly in the `format!` string
  --> llmspell-core/src/execution_context.rs:43:42
   |
43 |             ContextScope::Session(id) => write!(f, "session:{}", id),
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
43 -             ContextScope::Session(id) => write!(f, "session:{}", id),
43 +             ContextScope::Session(id) => write!(f, "session:{id}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-core/src/execution_context.rs:44:43
   |
44 |             ContextScope::Workflow(id) => write!(f, "workflow:{}", id),
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
44 -             ContextScope::Workflow(id) => write!(f, "workflow:{}", id),
44 +             ContextScope::Workflow(id) => write!(f, "workflow:{id}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-core/src/execution_context.rs:45:40
   |
45 |             ContextScope::Agent(id) => write!(f, "agent:{}", id),
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
45 -             ContextScope::Agent(id) => write!(f, "agent:{}", id),
45 +             ContextScope::Agent(id) => write!(f, "agent:{id}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-core/src/execution_context.rs:46:39
   |
46 |             ContextScope::User(id) => write!(f, "user:{}", id),
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
46 -             ContextScope::User(id) => write!(f, "user:{}", id),
46 +             ContextScope::User(id) => write!(f, "user:{id}"),
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/execution_context.rs:60:5
   |
60 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-core/src/execution_context.rs:67:5
   |
67 |     pub fn get(&self, scope: &ContextScope, key: &str) -> Option<Value> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-core/src/execution_context.rs:68:9
   |
68 | /         self.regions
69 | |             .read()
70 | |             .unwrap()
   | |_____________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/execution_context.rs:67:5
   |
67 |     pub fn get(&self, scope: &ContextScope, key: &str) -> Option<Value> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, scope: &ContextScope, key: &str) -> Option<Value>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-core/src/execution_context.rs:76:5
   |
76 |     pub fn set(&self, scope: ContextScope, key: String, value: Value) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-core/src/execution_context.rs:77:27
   |
77 |         let mut regions = self.regions.write().unwrap();
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-core/src/execution_context.rs:82:5
   |
82 |     pub fn remove(&self, scope: &ContextScope, key: &str) -> Option<Value> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-core/src/execution_context.rs:83:27
   |
83 |         let mut regions = self.regions.write().unwrap();
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/execution_context.rs:82:5
   |
82 |     pub fn remove(&self, scope: &ContextScope, key: &str) -> Option<Value> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn remove(&self, scope: &ContextScope, key: &str) -> Option<Value>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-core/src/execution_context.rs:88:5
   |
88 |     pub fn clear_scope(&self, scope: &ContextScope) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-core/src/execution_context.rs:89:27
   |
89 |         let mut regions = self.regions.write().unwrap();
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-core/src/execution_context.rs:94:5
   |
94 |     pub fn keys(&self, scope: &ContextScope) -> Vec<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-core/src/execution_context.rs:95:9
   |
95 | /         self.regions
96 | |             .read()
97 | |             .unwrap()
   | |_____________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/execution_context.rs:94:5
   |
94 |     pub fn keys(&self, scope: &ContextScope) -> Vec<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn keys(&self, scope: &ContextScope) -> Vec<String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:159:5
    |
159 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:176:5
    |
176 |     pub fn with_conversation(conversation_id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_conversation(conversation_id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:183:5
    |
183 |     pub fn create_child(&self, scope: ContextScope, inheritance: InheritancePolicy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_child(&self, scope: ContextScope, inheritance: InheritancePolicy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:183:5
    |
183 | /     pub fn create_child(&self, scope: ContextScope, inheritance: InheritancePolicy) -> Self {
184 | |         let mut child = Self {
185 | |             id: uuid::Uuid::new_v4().to_string(),
186 | |             parent_id: Some(self.id.clone()),
...   |
221 | |         child
222 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/execution_context.rs:213:13
    |
213 | /             InheritancePolicy::Isolate => {
214 | |                 // Start fresh, no data copied
215 | |             }
    | |_____________^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
213 ~             InheritancePolicy::Isolate | InheritancePolicy::Share => {
214 |                 // Start fresh, no data copied
215 |             }
216 ~             }
    |

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-core/src/execution_context.rs:202:17
    |
202 |                 child.data = self.data.clone();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `child.data.clone_from(&self.data)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones
    = note: `-W clippy::assigning-clones` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::assigning_clones)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:225:5
    |
225 |     pub fn get(&self, key: &str) -> Option<Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, key: &str) -> Option<Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:253:5
    |
253 |     pub fn get_shared(&self, scope: &ContextScope, key: &str) -> Option<Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_shared(&self, scope: &ContextScope, key: &str) -> Option<Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:258:5
    |
258 |     pub fn with_data(mut self, key: String, value: Value) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_data(mut self, key: String, value: Value) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:258:5
    |
258 | /     pub fn with_data(mut self, key: String, value: Value) -> Self {
259 | |         self.data.insert(key, value);
260 | |         self
261 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:264:5
    |
264 |     pub fn with_scope(mut self, scope: ContextScope) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_scope(mut self, scope: ContextScope) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:264:5
    |
264 | /     pub fn with_scope(mut self, scope: ContextScope) -> Self {
265 | |         self.scope = scope;
266 | |         self
267 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:270:5
    |
270 |     pub fn with_inheritance(mut self, inheritance: InheritancePolicy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_inheritance(mut self, inheritance: InheritancePolicy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:270:5
    |
270 | /     pub fn with_inheritance(mut self, inheritance: InheritancePolicy) -> Self {
271 | |         self.inheritance = inheritance;
272 | |         self
273 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:276:5
    |
276 |     pub fn has_capability(&self, capability: &str) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_capability(&self, capability: &str) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: called `map(<f>).unwrap_or(false)` on an `Option` value
   --> llmspell-core/src/execution_context.rs:277:9
    |
277 | /         self.get("capabilities")
278 | |             .as_ref()
279 | |             .and_then(|v| v.as_array())
280 | |             .map(|caps| caps.iter().any(|c| c.as_str() == Some(capability)))
281 | |             .unwrap_or(false)
    | |_____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`
help: use `is_some_and(<f>)` instead
    |
280 -             .map(|caps| caps.iter().any(|c| c.as_str() == Some(capability)))
280 +             .is_some_and(|caps| caps.iter().any(|c| c.as_str() == Some(capability)))
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:285:5
    |
285 |     pub fn root(&self) -> &ExecutionContext {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn root(&self) -> &ExecutionContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:292:5
    |
292 |     pub fn depth(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn depth(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: boolean to int conversion using if
   --> llmspell-core/src/execution_context.rs:295:9
    |
295 | /         if self.parent_id.is_some() {
296 | |             1
297 | |         } else {
298 | |             0
299 | |         }
    | |_________^ help: replace with from: `usize::from(self.parent_id.is_some())`
    |
    = note: `self.parent_id.is_some() as usize` or `self.parent_id.is_some().into()` can also be valid options
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_to_int_with_if
    = note: `-W clippy::bool-to-int-with-if` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::bool_to_int_with_if)]`

warning: item in documentation is missing backticks
   --> llmspell-core/src/execution_context.rs:316:17
    |
316 | /// Builder for ExecutionContext
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
316 - /// Builder for ExecutionContext
316 + /// Builder for `ExecutionContext`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:323:5
    |
323 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:330:5
    |
330 |     pub fn conversation_id(mut self, id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn conversation_id(mut self, id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:330:5
    |
330 | /     pub fn conversation_id(mut self, id: String) -> Self {
331 | |         self.context.conversation_id = Some(id);
332 | |         self
333 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:336:5
    |
336 |     pub fn user_id(mut self, id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn user_id(mut self, id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:336:5
    |
336 | /     pub fn user_id(mut self, id: String) -> Self {
337 | |         self.context.user_id = Some(id);
338 | |         self
339 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:342:5
    |
342 |     pub fn session_id(mut self, id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn session_id(mut self, id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:342:5
    |
342 | /     pub fn session_id(mut self, id: String) -> Self {
343 | |         self.context.session_id = Some(id);
344 | |         self
345 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:348:5
    |
348 |     pub fn scope(mut self, scope: ContextScope) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn scope(mut self, scope: ContextScope) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:348:5
    |
348 | /     pub fn scope(mut self, scope: ContextScope) -> Self {
349 | |         self.context.scope = scope;
350 | |         self
351 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:354:5
    |
354 |     pub fn parent_id(mut self, parent_id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parent_id(mut self, parent_id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:354:5
    |
354 | /     pub fn parent_id(mut self, parent_id: String) -> Self {
355 | |         self.context.parent_id = Some(parent_id);
356 | |         self
357 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:360:5
    |
360 |     pub fn inheritance(mut self, policy: InheritancePolicy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn inheritance(mut self, policy: InheritancePolicy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:360:5
    |
360 | /     pub fn inheritance(mut self, policy: InheritancePolicy) -> Self {
361 | |         self.context.inheritance = policy;
362 | |         self
363 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:366:5
    |
366 |     pub fn data(mut self, key: String, value: Value) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn data(mut self, key: String, value: Value) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:366:5
    |
366 | /     pub fn data(mut self, key: String, value: Value) -> Self {
367 | |         self.context.data.insert(key, value);
368 | |         self
369 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:372:5
    |
372 |     pub fn security(mut self, security: SecurityContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn security(mut self, security: SecurityContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/execution_context.rs:372:5
    |
372 | /     pub fn security(mut self, security: SecurityContext) -> Self {
373 | |         self.context.security_context = Some(security);
374 | |         self
375 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/execution_context.rs:378:5
    |
378 |     pub fn build(self) -> ExecutionContext {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> ExecutionContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-core/src/logging.rs:12:35
   |
12 | /// Logging configuration for the LLMSpell system.
   |                                   ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
12 - /// Logging configuration for the LLMSpell system.
12 + /// Logging configuration for the `LLMSpell` system.
   |

warning: more than 3 bools in a struct
  --> llmspell-core/src/logging.rs:44:1
   |
44 | / pub struct LoggingConfig {
45 | |     /// Default log level
46 | |     pub default_level: Level,
47 | |     /// Whether to use JSON formatting
...  |
58 | |     pub with_span_events: bool,
59 | | }
   | |_^
   |
   = help: consider using a state machine or refactoring bools into two-variant enums
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
   = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/logging.rs:77:5
   |
77 |     pub fn development() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn development() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/logging.rs:90:5
   |
90 |     pub fn production() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn production() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-core/src/logging.rs:117:1
    |
117 | pub fn init_logging(config: LoggingConfig) -> Result<(), Box<dyn std::error::Error>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-core/src/logging.rs:117:29
    |
117 | pub fn init_logging(config: LoggingConfig) -> Result<(), Box<dyn std::error::Error>> {
    |                             ^^^^^^^^^^^^^ help: consider taking a reference instead: `&LoggingConfig`
    |
help: or consider marking this type as `Copy`
   --> llmspell-core/src/logging.rs:44:1
    |
44  | pub struct LoggingConfig {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-core/src/logging.rs:163:1
    |
163 | pub fn init_from_env() -> Result<(), Box<dyn std::error::Error>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-core/src/logging.rs:174:1
    |
174 | pub fn update_log_filter(filter: &str) -> Result<(), Box<dyn std::error::Error>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/state/artifact_correlation.rs:22:5
   |
22 |     pub fn generate() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/state/artifact_correlation.rs:72:5
   |
72 | /     pub fn new(
73 | |         id: ArtifactId,
74 | |         artifact_type: String,
75 | |         name: String,
76 | |         created_by: ComponentId,
77 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
72 ~     #[must_use] pub fn new(
73 +         id: ArtifactId,
74 +         artifact_type: String,
75 +         name: String,
76 +         created_by: ComponentId,
77 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/state/artifact_correlation.rs:189:5
    |
189 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/mod.rs:2:23
  |
2 | //! ABOUTME: Provides ComponentId, Version, ComponentMetadata and streaming types
  |                       ^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides ComponentId, Version, ComponentMetadata and streaming types
2 + //! ABOUTME: Provides `ComponentId`, Version, ComponentMetadata and streaming types
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/mod.rs:2:45
  |
2 | //! ABOUTME: Provides ComponentId, Version, ComponentMetadata and streaming types
  |                                             ^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides ComponentId, Version, ComponentMetadata and streaming types
2 + //! ABOUTME: Provides ComponentId, Version, `ComponentMetadata` and streaming types
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/agent_io.rs:2:23
  |
2 | //! ABOUTME: Provides AgentInput, AgentOutput, and related types for agent communication
  |                       ^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides AgentInput, AgentOutput, and related types for agent communication
2 + //! ABOUTME: Provides `AgentInput`, AgentOutput, and related types for agent communication
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/agent_io.rs:2:35
  |
2 | //! ABOUTME: Provides AgentInput, AgentOutput, and related types for agent communication
  |                                   ^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides AgentInput, AgentOutput, and related types for agent communication
2 + //! ABOUTME: Provides AgentInput, `AgentOutput`, and related types for agent communication
  |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/types/agent_io.rs:80:5
   |
80 |     pub fn with_media(mut self, media: MediaContent) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_media(mut self, media: MediaContent) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/types/agent_io.rs:80:5
   |
80 | /     pub fn with_media(mut self, media: MediaContent) -> Self {
81 | |         self.media.push(media);
82 | |         self
83 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/types/agent_io.rs:86:5
   |
86 |     pub fn with_media_vec(mut self, media: Vec<MediaContent>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_media_vec(mut self, media: Vec<MediaContent>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/types/agent_io.rs:86:5
   |
86 | /     pub fn with_media_vec(mut self, media: Vec<MediaContent>) -> Self {
87 | |         self.media.extend(media);
88 | |         self
89 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/types/agent_io.rs:92:5
   |
92 |     pub fn with_context(mut self, context: ExecutionContext) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_context(mut self, context: ExecutionContext) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/types/agent_io.rs:92:5
   |
92 | /     pub fn with_context(mut self, context: ExecutionContext) -> Self {
93 | |         self.context = Some(context);
94 | |         self
95 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:98:5
    |
98  | /     pub fn with_parameter(mut self, key: impl Into<String>, value: impl Into<Value>) -> Self {
99  | |         self.parameters.insert(key.into(), value.into());
100 | |         self
101 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:104:5
    |
104 |     pub fn with_output_modalities(mut self, modalities: Vec<MediaType>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_output_modalities(mut self, modalities: Vec<MediaType>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:104:5
    |
104 | /     pub fn with_output_modalities(mut self, modalities: Vec<MediaType>) -> Self {
105 | |         self.output_modalities = modalities;
106 | |         self
107 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:110:5
    |
110 |     pub fn builder() -> AgentInputBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> AgentInputBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:115:5
    |
115 |     pub fn has_media(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_media(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:120:5
    |
120 |     pub fn get_media_by_type(&self, media_type: MediaType) -> Vec<&MediaContent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_media_by_type(&self, media_type: MediaType) -> Vec<&MediaContent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/agent_io.rs:147:17
    |
147 | /// Builder for AgentInput
    |                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
147 - /// Builder for AgentInput
147 + /// Builder for `AgentInput`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:158:5
    |
158 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:169:5
    |
169 | /     pub fn text(mut self, text: impl Into<String>) -> Self {
170 | |         self.text = text.into();
171 | |         self
172 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:175:5
    |
175 |     pub fn add_media(mut self, media: MediaContent) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_media(mut self, media: MediaContent) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:175:5
    |
175 | /     pub fn add_media(mut self, media: MediaContent) -> Self {
176 | |         self.media.push(media);
177 | |         self
178 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:181:5
    |
181 |     pub fn context(mut self, context: ExecutionContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn context(mut self, context: ExecutionContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:181:5
    |
181 | /     pub fn context(mut self, context: ExecutionContext) -> Self {
182 | |         self.context = Some(context);
183 | |         self
184 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:187:5
    |
187 | /     pub fn parameter(mut self, key: impl Into<String>, value: impl Into<Value>) -> Self {
188 | |         self.parameters.insert(key.into(), value.into());
189 | |         self
190 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:193:5
    |
193 |     pub fn output_modalities(mut self, modalities: Vec<MediaType>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn output_modalities(mut self, modalities: Vec<MediaType>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:193:5
    |
193 | /     pub fn output_modalities(mut self, modalities: Vec<MediaType>) -> Self {
194 | |         self.output_modalities = modalities;
195 | |         self
196 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/agent_io.rs:198:19
    |
198 |     /// Build the AgentInput
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
198 -     /// Build the AgentInput
198 +     /// Build the `AgentInput`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:199:5
    |
199 |     pub fn build(self) -> AgentInput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> AgentInput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:244:5
    |
244 |     pub fn with_media(mut self, media: MediaContent) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_media(mut self, media: MediaContent) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:244:5
    |
244 | /     pub fn with_media(mut self, media: MediaContent) -> Self {
245 | |         self.media.push(media);
246 | |         self
247 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:250:5
    |
250 |     pub fn with_tool_call(mut self, tool_call: ToolCall) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_tool_call(mut self, tool_call: ToolCall) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:250:5
    |
250 | /     pub fn with_tool_call(mut self, tool_call: ToolCall) -> Self {
251 | |         self.tool_calls.push(tool_call);
252 | |         self
253 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:256:5
    |
256 |     pub fn with_metadata(mut self, metadata: OutputMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_metadata(mut self, metadata: OutputMetadata) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:256:5
    |
256 | /     pub fn with_metadata(mut self, metadata: OutputMetadata) -> Self {
257 | |         self.metadata = metadata;
258 | |         self
259 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:262:5
    |
262 |     pub fn with_transfer(mut self, agent_id: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_transfer(mut self, agent_id: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:262:5
    |
262 | /     pub fn with_transfer(mut self, agent_id: ComponentId) -> Self {
263 | |         self.transfer_to = Some(agent_id);
264 | |         self
265 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:268:5
    |
268 |     pub fn builder() -> AgentOutputBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> AgentOutputBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:273:5
    |
273 |     pub fn has_media(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_media(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:278:5
    |
278 |     pub fn has_tool_calls(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_tool_calls(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:283:5
    |
283 |     pub fn is_transfer(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_transfer(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/agent_io.rs:304:13
    |
304 |             write!(f, ", transfer_to: {}", agent_id)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
304 -             write!(f, ", transfer_to: {}", agent_id)?;
304 +             write!(f, ", transfer_to: {agent_id}")?;
    |

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/agent_io.rs:310:17
    |
310 | /// Builder for AgentOutput
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
310 - /// Builder for AgentOutput
310 + /// Builder for `AgentOutput`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:321:5
    |
321 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:332:5
    |
332 | /     pub fn text(mut self, text: impl Into<String>) -> Self {
333 | |         self.text = text.into();
334 | |         self
335 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:338:5
    |
338 |     pub fn add_media(mut self, media: MediaContent) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_media(mut self, media: MediaContent) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:338:5
    |
338 | /     pub fn add_media(mut self, media: MediaContent) -> Self {
339 | |         self.media.push(media);
340 | |         self
341 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:344:5
    |
344 |     pub fn add_tool_call(mut self, tool_call: ToolCall) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_tool_call(mut self, tool_call: ToolCall) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:344:5
    |
344 | /     pub fn add_tool_call(mut self, tool_call: ToolCall) -> Self {
345 | |         self.tool_calls.push(tool_call);
346 | |         self
347 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:350:5
    |
350 |     pub fn metadata(mut self, metadata: OutputMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn metadata(mut self, metadata: OutputMetadata) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:350:5
    |
350 | /     pub fn metadata(mut self, metadata: OutputMetadata) -> Self {
351 | |         self.metadata = metadata;
352 | |         self
353 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:356:5
    |
356 |     pub fn transfer_to(mut self, agent_id: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn transfer_to(mut self, agent_id: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/agent_io.rs:356:5
    |
356 | /     pub fn transfer_to(mut self, agent_id: ComponentId) -> Self {
357 | |         self.transfer_to = Some(agent_id);
358 | |         self
359 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/agent_io.rs:361:19
    |
361 |     /// Build the AgentOutput
    |                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
361 -     /// Build the AgentOutput
361 +     /// Build the `AgentOutput`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/agent_io.rs:362:5
    |
362 |     pub fn build(self) -> AgentOutput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> AgentOutput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/media.rs:2:23
  |
2 | //! ABOUTME: Provides MediaContent enum, format types, metadata structures, and validation helpers
  |                       ^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides MediaContent enum, format types, metadata structures, and validation helpers
2 + //! ABOUTME: Provides `MediaContent` enum, format types, metadata structures, and validation helpers
  |

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/media.rs:123:9
    |
123 |     /// WebM format
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
123 -     /// WebM format
123 +     /// `WebM` format
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/media.rs:262:21
    |
262 |                     write!(f, ", {}", mime)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
262 -                     write!(f, ", {}", mime)?;
262 +                     write!(f, ", {mime}")?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/media.rs:265:21
    |
265 |                     write!(f, ", {}", name)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
265 -                     write!(f, ", {}", name)?;
265 +                     write!(f, ", {name}")?;
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:337:5
    |
337 |     pub fn size_bytes(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn size_bytes(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/types/media.rs:340:13
    |
340 |             MediaContent::Image { data, .. } => data.len(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
340 ~             MediaContent::Image { data, .. } | MediaContent::Audio { data, .. } => data.len(),
341 ~             MediaContent::Video { data, .. } => data.len(),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/types/media.rs:340:13
    |
340 |             MediaContent::Image { data, .. } => data.len(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
340 ~             MediaContent::Image { data, .. } | MediaContent::Video { data, .. } => data.len(),
341 |             MediaContent::Audio { data, .. } => data.len(),
342 ~             MediaContent::Binary { data, .. } => data.len(),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/types/media.rs:341:13
    |
341 |             MediaContent::Audio { data, .. } => data.len(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
341 ~             MediaContent::Audio { data, .. } | MediaContent::Video { data, .. } => data.len(),
342 ~             MediaContent::Binary { data, .. } => data.len(),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/types/media.rs:340:13
    |
340 |             MediaContent::Image { data, .. } => data.len(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
340 ~             MediaContent::Image { data, .. } | MediaContent::Binary { data, .. } => data.len(),
341 |             MediaContent::Audio { data, .. } => data.len(),
342 |             MediaContent::Video { data, .. } => data.len(),
343 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/types/media.rs:341:13
    |
341 |             MediaContent::Audio { data, .. } => data.len(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
341 ~             MediaContent::Audio { data, .. } | MediaContent::Binary { data, .. } => data.len(),
342 |             MediaContent::Video { data, .. } => data.len(),
343 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-core/src/types/media.rs:342:13
    |
342 |             MediaContent::Video { data, .. } => data.len(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
342 ~             MediaContent::Video { data, .. } | MediaContent::Binary { data, .. } => data.len(),
343 ~             }
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:348:5
    |
348 |     pub fn media_type(&self) -> MediaType {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn media_type(&self) -> MediaType`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-core/src/types/media.rs:359:5
    |
359 |     pub fn validate_size(&self) -> Result<(), String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/media.rs:370:17
    |
370 |               Err(format!(
    |  _________________^
371 | |                 "{} size {} bytes exceeds maximum {} bytes",
372 | |                 type_name, size, max_size
373 | |             ))
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:382:5
    |
382 |     pub fn mime_type(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn mime_type(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:394:5
    |
394 |     pub fn extensions(&self) -> &'static [&'static str] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn extensions(&self) -> &'static [&'static str]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:408:5
    |
408 |     pub fn mime_type(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn mime_type(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:419:5
    |
419 |     pub fn extensions(&self) -> &'static [&'static str] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn extensions(&self) -> &'static [&'static str]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:432:5
    |
432 |     pub fn mime_type(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn mime_type(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/media.rs:443:5
    |
443 |     pub fn extensions(&self) -> &'static [&'static str] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn extensions(&self) -> &'static [&'static str]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/media.rs:467:22
    |
467 |             _ => Err(format!("Unknown image format: {}", ext)),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
467 -             _ => Err(format!("Unknown image format: {}", ext)),
467 +             _ => Err(format!("Unknown image format: {ext}")),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/media.rs:482:22
    |
482 |             _ => Err(format!("Unknown audio format: {}", ext)),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
482 -             _ => Err(format!("Unknown audio format: {}", ext)),
482 +             _ => Err(format!("Unknown audio format: {ext}")),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/media.rs:497:22
    |
497 |             _ => Err(format!("Unknown video format: {}", ext)),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
497 -             _ => Err(format!("Unknown video format: {}", ext)),
497 +             _ => Err(format!("Unknown video format: {ext}")),
    |

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/streaming.rs:2:23
  |
2 | //! ABOUTME: Provides AgentStream, AgentChunk, and related types for streaming LLM interactions
  |                       ^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides AgentStream, AgentChunk, and related types for streaming LLM interactions
2 + //! ABOUTME: Provides `AgentStream`, AgentChunk, and related types for streaming LLM interactions
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/types/streaming.rs:2:36
  |
2 | //! ABOUTME: Provides AgentStream, AgentChunk, and related types for streaming LLM interactions
  |                                    ^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides AgentStream, AgentChunk, and related types for streaming LLM interactions
2 + //! ABOUTME: Provides AgentStream, `AgentChunk`, and related types for streaming LLM interactions
  |

warning: item in documentation is missing backticks
  --> llmspell-core/src/types/streaming.rs:16:26
   |
16 | /// containing either an AgentChunk or an error.
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
16 - /// containing either an AgentChunk or an error.
16 + /// containing either an `AgentChunk` or an error.
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:143:41
    |
143 |             ChunkContent::Text(text) => write!(f, "Text: {}", text),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
143 -             ChunkContent::Text(text) => write!(f, "Text: {}", text),
143 +             ChunkContent::Text(text) => write!(f, "Text: {text}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:145:17
    |
145 |                 write!(f, "ToolCallProgress: {}", tool_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
145 -                 write!(f, "ToolCallProgress: {}", tool_name)
145 +                 write!(f, "ToolCallProgress: {tool_name}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:148:17
    |
148 |                 write!(f, "ToolCallComplete: {}", tool_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
148 -                 write!(f, "ToolCallComplete: {}", tool_name)
148 +                 write!(f, "ToolCallComplete: {tool_name}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:159:34
    |
159 |                         .map(|c| format!(": {}", c))
    |                                  ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
159 -                         .map(|c| format!(": {}", c))
159 +                         .map(|c| format!(": {c}"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:163:43
    |
163 |             ChunkContent::Control(msg) => write!(f, "Control: {}", msg),
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
163 -             ChunkContent::Control(msg) => write!(f, "Control: {}", msg),
163 +             ChunkContent::Control(msg) => write!(f, "Control: {msg}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:196:24
    |
196 |             parts.push(format!("{} tokens", count));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
196 -             parts.push(format!("{} tokens", count));
196 +             parts.push(format!("{count} tokens"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:200:24
    |
200 |             parts.push(format!("model={}", model));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
200 -             parts.push(format!("model={}", model));
200 +             parts.push(format!("model={model}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:284:34
    |
284 |                         .map(|n| format!(" (expecting {} chunks)", n))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
284 -                         .map(|n| format!(" (expecting {} chunks)", n))
284 +                         .map(|n| format!(" (expecting {n} chunks)"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:293:17
    |
293 | /                 write!(
294 | |                     f,
295 | |                     "StreamEnd ({} chunks in {}ms)",
296 | |                     total_chunks, duration_ms
297 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:300:17
    |
300 |                 write!(f, "StreamCancelled: {}", reason)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
300 -                 write!(f, "StreamCancelled: {}", reason)
300 +                 write!(f, "StreamCancelled: {reason}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:304:17
    |
304 |                 write!(f, "RateLimit ({} remaining)", remaining)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
304 -                 write!(f, "RateLimit ({} remaining)", remaining)
304 +                 write!(f, "RateLimit ({remaining} remaining)")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/types/streaming.rs:307:17
    |
307 |                 write!(f, "Custom[{}]", message_type)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
307 -                 write!(f, "Custom[{}]", message_type)
307 +                 write!(f, "Custom[{message_type}]")
    |

warning: item in documentation is missing backticks
  --> llmspell-core/src/types/mod.rs:25:45
   |
25 | /// Unique identifier for components in the LLMSpell system.
   |                                             ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
25 - /// Unique identifier for components in the LLMSpell system.
25 + /// Unique identifier for components in the `LLMSpell` system.
   |

warning: item in documentation is missing backticks
  --> llmspell-core/src/types/mod.rs:50:31
   |
50 |     /// Generate a new random ComponentId
   |                               ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
50 -     /// Generate a new random ComponentId
50 +     /// Generate a new random `ComponentId`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/types/mod.rs:51:5
   |
51 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-core/src/types/mod.rs:55:16
   |
55 |     /// Create ComponentId from name (deterministic)
   |                ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
55 -     /// Create ComponentId from name (deterministic)
55 +     /// Create `ComponentId` from name (deterministic)
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/types/mod.rs:56:5
   |
56 |     pub fn from_name(name: &str) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_name(name: &str) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/types/mod.rs:62:5
   |
62 |     pub fn uuid(&self) -> Uuid {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn uuid(&self) -> Uuid`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:109:5
    |
109 |     pub fn new(major: u32, minor: u32, patch: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(major: u32, minor: u32, patch: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:118:5
    |
118 |     pub fn is_compatible_with(&self, other: &Version) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_compatible_with(&self, other: &Version) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:123:5
    |
123 |     pub fn is_newer_than(&self, other: &Version) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_newer_than(&self, other: &Version) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/mod.rs:134:36
    |
134 | /// Metadata for components in the LLMSpell system.
    |                                    ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
134 - /// Metadata for components in the LLMSpell system.
134 + /// Metadata for components in the `LLMSpell` system.
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:167:5
    |
167 |     pub fn new(name: String, description: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, description: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/mod.rs:179:32
    |
179 |     /// Update the version and updated_at timestamp
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
179 -     /// Update the version and updated_at timestamp
179 +     /// Update the version and `updated_at` timestamp
    |

warning: item in documentation is missing backticks
   --> llmspell-core/src/types/mod.rs:186:32
    |
186 | /// Metadata for events in the LLMSpell system.
    |                                ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
186 - /// Metadata for events in the LLMSpell system.
186 + /// Metadata for events in the `LLMSpell` system.
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:230:5
    |
230 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:238:5
    |
238 |     pub fn with_trace(trace_id: String, span_id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_trace(trace_id: String, span_id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:248:5
    |
248 |     pub fn trace_id(&self) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn trace_id(&self) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:258:5
    |
258 |     pub fn span_id(&self) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn span_id(&self) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:268:5
    |
268 |     pub fn parent_span_id(&self) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parent_span_id(&self) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:278:5
    |
278 |     pub fn correlation_id(&self) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn correlation_id(&self) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:288:5
    |
288 |     pub fn source(&self) -> Option<&ComponentId> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn source(&self) -> Option<&ComponentId>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:303:5
    |
303 |     pub fn get_attribute(&self, key: &str) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_attribute(&self, key: &str) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: redundant closure
   --> llmspell-core/src/types/mod.rs:304:38
    |
304 |         self.attributes.get(key).map(|s| s.as_str())
    |                                      ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:308:5
    |
308 |     pub fn attributes(&self) -> &HashMap<String, String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn attributes(&self) -> &HashMap<String, String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/types/mod.rs:313:5
    |
313 |     pub fn create_child(&self, span_id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_child(&self, span_id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/types/mod.rs:313:5
    |
313 | /     pub fn create_child(&self, span_id: String) -> Self {
314 | |         Self {
315 | |             trace_id: self.trace_id.clone(),
316 | |             span_id: Some(span_id),
...   |
323 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
 --> llmspell-core/src/traits/agent.rs:2:22
  |
2 | //! ABOUTME: Extends BaseAgent with conversation management and LLM provider integration
  |                      ^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Extends BaseAgent with conversation management and LLM provider integration
2 + //! ABOUTME: Extends `BaseAgent` with conversation management and LLM provider integration
  |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/agent.rs:68:5
   |
68 |     pub fn new(role: MessageRole, content: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(role: MessageRole, content: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/agent.rs:77:5
   |
77 |     pub fn system(content: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn system(content: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/agent.rs:82:5
   |
82 |     pub fn user(content: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn user(content: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/agent.rs:87:5
   |
87 |     pub fn assistant(content: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn assistant(content: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
 --> llmspell-core/src/traits/base_agent.rs:1:14
  |
1 | //! ABOUTME: BaseAgent trait - foundation for all components
  |              ^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: BaseAgent trait - foundation for all components
1 + //! ABOUTME: `BaseAgent` trait - foundation for all components
  |

warning: item in documentation is missing backticks
 --> llmspell-core/src/traits/tool.rs:2:22
  |
2 | //! ABOUTME: Extends BaseAgent with parameter validation and tool categorization
  |                      ^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Extends BaseAgent with parameter validation and tool categorization
2 + //! ABOUTME: Extends `BaseAgent` with parameter validation and tool categorization
  |

warning: variables can be used directly in the `format!` string
  --> llmspell-core/src/traits/tool.rs:54:43
   |
54 |             ToolCategory::Custom(name) => write!(f, "{}", name),
   |                                           ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
54 -             ToolCategory::Custom(name) => write!(f, "{}", name),
54 +             ToolCategory::Custom(name) => write!(f, "{name}"),
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/tool.rs:87:5
   |
87 |     pub fn allows(&self, required: &SecurityLevel) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn allows(&self, required: &SecurityLevel) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:121:5
    |
121 |     pub fn safe() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn safe() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:126:5
    |
126 |     pub fn restricted() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn restricted() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:134:5
    |
134 |     pub fn privileged() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn privileged() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:145:5
    |
145 | /     pub fn with_file_access(mut self, path: impl Into<String>) -> Self {
146 | |         self.file_permissions.push(path.into());
147 | |         self
148 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:151:5
    |
151 | /     pub fn with_network_access(mut self, domain: impl Into<String>) -> Self {
152 | |         self.network_permissions.push(domain.into());
153 | |         self
154 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:157:5
    |
157 | /     pub fn with_env_access(mut self, var: impl Into<String>) -> Self {
158 | |         self.env_permissions.push(var.into());
159 | |         self
160 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:192:5
    |
192 |     pub fn unlimited() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn unlimited() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:203:5
    |
203 |     pub fn strict() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn strict() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:214:5
    |
214 |     pub fn with_memory_limit(mut self, bytes: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_memory_limit(mut self, bytes: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:214:5
    |
214 | /     pub fn with_memory_limit(mut self, bytes: u64) -> Self {
215 | |         self.max_memory_bytes = Some(bytes);
216 | |         self
217 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:220:5
    |
220 |     pub fn with_cpu_limit(mut self, milliseconds: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_cpu_limit(mut self, milliseconds: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:220:5
    |
220 | /     pub fn with_cpu_limit(mut self, milliseconds: u64) -> Self {
221 | |         self.max_cpu_time_ms = Some(milliseconds);
222 | |         self
223 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:226:5
    |
226 |     pub fn with_network_limit(mut self, bytes_per_second: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_network_limit(mut self, bytes_per_second: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:226:5
    |
226 | /     pub fn with_network_limit(mut self, bytes_per_second: u64) -> Self {
227 | |         self.max_network_bps = Some(bytes_per_second);
228 | |         self
229 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:301:5
    |
301 |     pub fn new(name: String, description: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, description: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:311:5
    |
311 |     pub fn with_parameter(mut self, param: ParameterDef) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_parameter(mut self, param: ParameterDef) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:311:5
    |
311 | /     pub fn with_parameter(mut self, param: ParameterDef) -> Self {
312 | |         self.parameters.push(param);
313 | |         self
314 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:317:5
    |
317 |     pub fn with_returns(mut self, returns: ParameterType) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_returns(mut self, returns: ParameterType) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool.rs:317:5
    |
317 | /     pub fn with_returns(mut self, returns: ParameterType) -> Self {
318 | |         self.returns = Some(returns);
319 | |         self
320 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:323:5
    |
323 |     pub fn required_parameters(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn required_parameters(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool.rs:332:5
    |
332 |     pub fn to_json_schema(&self) -> serde_json::Value {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_json_schema(&self) -> serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-core/src/traits/tool.rs:539:30
    |
539 |                     message: format!("Missing required parameter: {}", required),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
539 -                     message: format!("Missing required parameter: {}", required),
539 +                     message: format!("Missing required parameter: {required}"),
    |

warning: item in documentation is missing backticks
 --> llmspell-core/src/traits/tool_capable.rs:1:14
  |
1 | //! ABOUTME: ToolCapable trait for components that can interact with tools
  |              ^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: ToolCapable trait for components that can interact with tools
1 + //! ABOUTME: `ToolCapable` trait for components that can interact with tools
  |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/tool_capable.rs:47:5
   |
47 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/tool_capable.rs:52:5
   |
52 | /     pub fn with_category(mut self, category: impl Into<String>) -> Self {
53 | |         self.categories.push(category.into());
54 | |         self
55 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/tool_capable.rs:58:5
   |
58 | /     pub fn with_capability(mut self, capability: impl Into<String>) -> Self {
59 | |         self.capabilities.push(capability.into());
60 | |         self
61 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/tool_capable.rs:64:5
   |
64 | /     pub fn with_max_security_level(mut self, level: impl Into<String>) -> Self {
65 | |         self.max_security_level = Some(level.into());
66 | |         self
67 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/tool_capable.rs:70:5
   |
70 | /     pub fn with_min_security_level(mut self, level: impl Into<String>) -> Self {
71 | |         self.min_security_level = Some(level.into());
72 | |         self
73 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/tool_capable.rs:76:5
   |
76 | /     pub fn with_text_search(mut self, text: impl Into<String>) -> Self {
77 | |         self.text_search = Some(text.into());
78 | |         self
79 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/tool_capable.rs:82:5
   |
82 | /     pub fn with_custom_filter(mut self, key: impl Into<String>, value: JsonValue) -> Self {
83 | |         self.custom_filters.insert(key.into(), value);
84 | |         self
85 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-core/src/traits/tool_capable.rs:135:22
    |
135 |     /// Create a new ToolInfo
    |                      ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
135 -     /// Create a new ToolInfo
135 +     /// Create a new `ToolInfo`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool_capable.rs:154:5
    |
154 |     pub fn with_schema(mut self, schema: JsonValue) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_schema(mut self, schema: JsonValue) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool_capable.rs:154:5
    |
154 | /     pub fn with_schema(mut self, schema: JsonValue) -> Self {
155 | |         self.schema = schema;
156 | |         self
157 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool_capable.rs:160:5
    |
160 | /     pub fn with_capability(mut self, capability: impl Into<String>) -> Self {
161 | |         self.capabilities.push(capability.into());
162 | |         self
163 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool_capable.rs:166:5
    |
166 |     pub fn with_requirements(mut self, requirements: JsonValue) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_requirements(mut self, requirements: JsonValue) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool_capable.rs:166:5
    |
166 | /     pub fn with_requirements(mut self, requirements: JsonValue) -> Self {
167 | |         self.requirements = requirements;
168 | |         self
169 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool_capable.rs:267:5
    |
267 |     pub fn with_step(mut self, step: ToolCompositionStep) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_step(mut self, step: ToolCompositionStep) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool_capable.rs:267:5
    |
267 | /     pub fn with_step(mut self, step: ToolCompositionStep) -> Self {
268 | |         self.steps.push(step);
269 | |         self
270 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/tool_capable.rs:273:5
    |
273 |     pub fn with_parallel(mut self, parallel: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_parallel(mut self, parallel: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-core/src/traits/tool_capable.rs:273:5
    |
273 | /     pub fn with_parallel(mut self, parallel: bool) -> Self {
274 | |         self.parallel = parallel;
275 | |         self
276 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
 --> llmspell-core/src/traits/workflow.rs:2:22
  |
2 | //! ABOUTME: Extends BaseAgent with step management and execution planning
  |                      ^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Extends BaseAgent with step management and execution planning
2 + //! ABOUTME: Extends `BaseAgent` with step management and execution planning
  |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/workflow.rs:49:5
   |
49 |     pub fn new(name: String, component_id: ComponentId) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, component_id: ComponentId) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/workflow.rs:61:5
   |
61 |     pub fn with_dependency(mut self, dep: ComponentId) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_dependency(mut self, dep: ComponentId) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/workflow.rs:61:5
   |
61 | /     pub fn with_dependency(mut self, dep: ComponentId) -> Self {
62 | |         self.dependencies.push(dep);
63 | |         self
64 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/workflow.rs:67:5
   |
67 |     pub fn with_retry(mut self, policy: RetryPolicy) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_retry(mut self, policy: RetryPolicy) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/workflow.rs:67:5
   |
67 | /     pub fn with_retry(mut self, policy: RetryPolicy) -> Self {
68 | |         self.retry_policy = Some(policy);
69 | |         self
70 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-core/src/traits/workflow.rs:73:5
   |
73 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-core/src/traits/workflow.rs:73:5
   |
73 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
74 | |         self.timeout = Some(timeout);
75 | |         self
76 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/workflow.rs:130:5
    |
130 |     pub fn success(step_id: ComponentId, output: AgentOutput, duration: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success(step_id: ComponentId, output: AgentOutput, duration: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-core/src/traits/workflow.rs:142:5
    |
142 | /     pub fn failure(
143 | |         step_id: ComponentId,
144 | |         error: String,
145 | |         duration: Duration,
146 | |         retry_count: u32,
147 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
142 ~     #[must_use] pub fn failure(
143 +         step_id: ComponentId,
144 +         error: String,
145 +         duration: Duration,
146 +         retry_count: u32,
147 ~     ) -> Self {
    |

warning: `llmspell-core` (lib) generated 269 warnings (run `cargo clippy --fix --lib -p llmspell-core` to apply 182 suggestions)
    Checking llmspell-utils v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-utils)
    Checking llmspell-storage v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-storage)
warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/error.rs:158:5
    |
158 |     pub fn is_not_found(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_not_found(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/error.rs:163:5
    |
163 |     pub fn is_retryable(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_retryable(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/error.rs:171:5
    |
171 |     pub fn is_permanent(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_permanent(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-traits/src/scope.rs:83:5
   |
83 |     pub fn is_global(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_global(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-traits/src/scope.rs:88:5
   |
88 |     pub fn is_user_scope(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_user_scope(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-traits/src/scope.rs:93:5
   |
93 |     pub fn is_session_scope(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_session_scope(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-traits/src/scope.rs:98:5
   |
98 |     pub fn is_agent_scope(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_agent_scope(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:103:5
    |
103 |     pub fn is_tool_scope(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_tool_scope(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:108:5
    |
108 |     pub fn is_workflow_scope(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_workflow_scope(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:113:5
    |
113 |     pub fn is_hook_scope(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_hook_scope(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:118:5
    |
118 |     pub fn is_custom_scope(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_custom_scope(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:123:5
    |
123 |     pub fn identifier(&self) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn identifier(&self) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:126:13
    |
126 |             StateScope::User(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
126 ~             StateScope::User(id) | StateScope::Session(id) => Some(id),
127 ~             StateScope::Agent(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:126:13
    |
126 |             StateScope::User(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
126 ~             StateScope::User(id) | StateScope::Agent(id) => Some(id),
127 |             StateScope::Session(id) => Some(id),
128 ~             StateScope::Tool(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:127:13
    |
127 |             StateScope::Session(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
127 ~             StateScope::Session(id) | StateScope::Agent(id) => Some(id),
128 ~             StateScope::Tool(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:126:13
    |
126 |             StateScope::User(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
126 ~             StateScope::User(id) | StateScope::Tool(id) => Some(id),
127 |             StateScope::Session(id) => Some(id),
128 |             StateScope::Agent(id) => Some(id),
129 ~             StateScope::Workflow(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:127:13
    |
127 |             StateScope::Session(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
127 ~             StateScope::Session(id) | StateScope::Tool(id) => Some(id),
128 |             StateScope::Agent(id) => Some(id),
129 ~             StateScope::Workflow(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:128:13
    |
128 |             StateScope::Agent(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
128 ~             StateScope::Agent(id) | StateScope::Tool(id) => Some(id),
129 ~             StateScope::Workflow(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:126:13
    |
126 |             StateScope::User(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
126 ~             StateScope::User(id) | StateScope::Workflow(id) => Some(id),
127 |             StateScope::Session(id) => Some(id),
128 |             StateScope::Agent(id) => Some(id),
129 |             StateScope::Tool(id) => Some(id),
130 ~             StateScope::Hook(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:127:13
    |
127 |             StateScope::Session(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
127 ~             StateScope::Session(id) | StateScope::Workflow(id) => Some(id),
128 |             StateScope::Agent(id) => Some(id),
129 |             StateScope::Tool(id) => Some(id),
130 ~             StateScope::Hook(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:128:13
    |
128 |             StateScope::Agent(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
128 ~             StateScope::Agent(id) | StateScope::Workflow(id) => Some(id),
129 |             StateScope::Tool(id) => Some(id),
130 ~             StateScope::Hook(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:129:13
    |
129 |             StateScope::Tool(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
129 ~             StateScope::Tool(id) | StateScope::Workflow(id) => Some(id),
130 ~             StateScope::Hook(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:126:13
    |
126 |             StateScope::User(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
126 ~             StateScope::User(id) | StateScope::Hook(id) => Some(id),
127 |             StateScope::Session(id) => Some(id),
...
130 |             StateScope::Workflow(id) => Some(id),
131 ~             StateScope::Custom(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:127:13
    |
127 |             StateScope::Session(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
127 ~             StateScope::Session(id) | StateScope::Hook(id) => Some(id),
128 |             StateScope::Agent(id) => Some(id),
129 |             StateScope::Tool(id) => Some(id),
130 |             StateScope::Workflow(id) => Some(id),
131 ~             StateScope::Custom(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:128:13
    |
128 |             StateScope::Agent(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
128 ~             StateScope::Agent(id) | StateScope::Hook(id) => Some(id),
129 |             StateScope::Tool(id) => Some(id),
130 |             StateScope::Workflow(id) => Some(id),
131 ~             StateScope::Custom(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:129:13
    |
129 |             StateScope::Tool(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
129 ~             StateScope::Tool(id) | StateScope::Hook(id) => Some(id),
130 |             StateScope::Workflow(id) => Some(id),
131 ~             StateScope::Custom(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:130:13
    |
130 |             StateScope::Workflow(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
130 ~             StateScope::Workflow(id) | StateScope::Hook(id) => Some(id),
131 ~             StateScope::Custom(id) => Some(id),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:126:13
    |
126 |             StateScope::User(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
126 ~             StateScope::User(id) | StateScope::Custom(id) => Some(id),
127 |             StateScope::Session(id) => Some(id),
...
131 |             StateScope::Hook(id) => Some(id),
132 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:127:13
    |
127 |             StateScope::Session(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
127 ~             StateScope::Session(id) | StateScope::Custom(id) => Some(id),
128 |             StateScope::Agent(id) => Some(id),
...
131 |             StateScope::Hook(id) => Some(id),
132 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:128:13
    |
128 |             StateScope::Agent(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
128 ~             StateScope::Agent(id) | StateScope::Custom(id) => Some(id),
129 |             StateScope::Tool(id) => Some(id),
130 |             StateScope::Workflow(id) => Some(id),
131 |             StateScope::Hook(id) => Some(id),
132 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:129:13
    |
129 |             StateScope::Tool(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
129 ~             StateScope::Tool(id) | StateScope::Custom(id) => Some(id),
130 |             StateScope::Workflow(id) => Some(id),
131 |             StateScope::Hook(id) => Some(id),
132 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:130:13
    |
130 |             StateScope::Workflow(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
130 ~             StateScope::Workflow(id) | StateScope::Custom(id) => Some(id),
131 |             StateScope::Hook(id) => Some(id),
132 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:131:13
    |
131 |             StateScope::Hook(id) => Some(id),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
131 ~             StateScope::Hook(id) | StateScope::Custom(id) => Some(id),
132 ~             }
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:137:5
    |
137 |     pub fn scope_type(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn scope_type(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:157:5
    |
157 |     pub fn can_access(&self, target_scope: &StateScope) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn can_access(&self, target_scope: &StateScope) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:189:5
    |
189 |     pub fn storage_key(&self, key: &str) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn storage_key(&self, key: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:191:35
    |
191 |             StateScope::Global => format!("global:{}", key),
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
191 -             StateScope::Global => format!("global:{}", key),
191 +             StateScope::Global => format!("global:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:192:37
    |
192 |             StateScope::User(id) => format!("user:{}:{}", id, key),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
192 -             StateScope::User(id) => format!("user:{}:{}", id, key),
192 +             StateScope::User(id) => format!("user:{id}:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:193:40
    |
193 |             StateScope::Session(id) => format!("session:{}:{}", id, key),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
193 -             StateScope::Session(id) => format!("session:{}:{}", id, key),
193 +             StateScope::Session(id) => format!("session:{id}:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:194:38
    |
194 |             StateScope::Agent(id) => format!("agent:{}:{}", id, key),
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
194 -             StateScope::Agent(id) => format!("agent:{}:{}", id, key),
194 +             StateScope::Agent(id) => format!("agent:{id}:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:195:37
    |
195 |             StateScope::Tool(id) => format!("tool:{}:{}", id, key),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
195 -             StateScope::Tool(id) => format!("tool:{}:{}", id, key),
195 +             StateScope::Tool(id) => format!("tool:{id}:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:196:41
    |
196 |             StateScope::Workflow(id) => format!("workflow:{}:{}", id, key),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
196 -             StateScope::Workflow(id) => format!("workflow:{}:{}", id, key),
196 +             StateScope::Workflow(id) => format!("workflow:{id}:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:197:37
    |
197 |             StateScope::Hook(id) => format!("hook:{}:{}", id, key),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
197 -             StateScope::Hook(id) => format!("hook:{}:{}", id, key),
197 +             StateScope::Hook(id) => format!("hook:{id}:{key}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:198:39
    |
198 |             StateScope::Custom(id) => format!("custom:{}:{}", id, key),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
198 -             StateScope::Custom(id) => format!("custom:{}:{}", id, key),
198 +             StateScope::Custom(id) => format!("custom:{id}:{key}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:203:5
    |
203 |     pub fn parse_storage_key(storage_key: &str) -> Option<(StateScope, String)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_storage_key(storage_key: &str) -> Option<(StateScope, String)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:207:58
    |
207 |             ["global", key] => Some((StateScope::Global, key.to_string())),
    |                                                          ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string
    = note: `-W clippy::inefficient-to-string` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::inefficient_to_string)]`

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:208:57
    |
208 |             ["user", id, key] => Some((StateScope::User(id.to_string()), key.to_string())),
    |                                                         ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:208:74
    |
208 |             ["user", id, key] => Some((StateScope::User(id.to_string()), key.to_string())),
    |                                                                          ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:209:63
    |
209 |             ["session", id, key] => Some((StateScope::Session(id.to_string()), key.to_string())),
    |                                                               ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:209:80
    |
209 |             ["session", id, key] => Some((StateScope::Session(id.to_string()), key.to_string())),
    |                                                                                ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:210:59
    |
210 |             ["agent", id, key] => Some((StateScope::Agent(id.to_string()), key.to_string())),
    |                                                           ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:210:76
    |
210 |             ["agent", id, key] => Some((StateScope::Agent(id.to_string()), key.to_string())),
    |                                                                            ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:211:57
    |
211 |             ["tool", id, key] => Some((StateScope::Tool(id.to_string()), key.to_string())),
    |                                                         ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:211:74
    |
211 |             ["tool", id, key] => Some((StateScope::Tool(id.to_string()), key.to_string())),
    |                                                                          ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:212:65
    |
212 |             ["workflow", id, key] => Some((StateScope::Workflow(id.to_string()), key.to_string())),
    |                                                                 ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:212:82
    |
212 |             ["workflow", id, key] => Some((StateScope::Workflow(id.to_string()), key.to_string())),
    |                                                                                  ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:213:57
    |
213 |             ["hook", id, key] => Some((StateScope::Hook(id.to_string()), key.to_string())),
    |                                                         ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:213:74
    |
213 |             ["hook", id, key] => Some((StateScope::Hook(id.to_string()), key.to_string())),
    |                                                                          ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:214:61
    |
214 |             ["custom", id, key] => Some((StateScope::Custom(id.to_string()), key.to_string())),
    |                                                             ^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*id).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: calling `to_string` on `&&str`
   --> llmspell-state-traits/src/scope.rs:214:78
    |
214 |             ["custom", id, key] => Some((StateScope::Custom(id.to_string()), key.to_string())),
    |                                                                              ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: item in documentation is missing backticks
   --> llmspell-state-traits/src/scope.rs:219:48
    |
219 |     /// Get the prefix for this scope (used by KeyManager)
    |                                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
219 -     /// Get the prefix for this scope (used by KeyManager)
219 +     /// Get the prefix for this scope (used by `KeyManager`)
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:220:5
    |
220 |     pub fn prefix(&self) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn prefix(&self) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:223:37
    |
223 |             StateScope::User(id) => format!("user:{}:", id),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
223 -             StateScope::User(id) => format!("user:{}:", id),
223 +             StateScope::User(id) => format!("user:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:224:40
    |
224 |             StateScope::Session(id) => format!("session:{}:", id),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
224 -             StateScope::Session(id) => format!("session:{}:", id),
224 +             StateScope::Session(id) => format!("session:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:225:38
    |
225 |             StateScope::Agent(id) => format!("agent:{}:", id),
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
225 -             StateScope::Agent(id) => format!("agent:{}:", id),
225 +             StateScope::Agent(id) => format!("agent:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:226:37
    |
226 |             StateScope::Tool(id) => format!("tool:{}:", id),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
226 -             StateScope::Tool(id) => format!("tool:{}:", id),
226 +             StateScope::Tool(id) => format!("tool:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:227:41
    |
227 |             StateScope::Workflow(id) => format!("workflow:{}:", id),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
227 -             StateScope::Workflow(id) => format!("workflow:{}:", id),
227 +             StateScope::Workflow(id) => format!("workflow:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:228:37
    |
228 |             StateScope::Hook(id) => format!("hook:{}:", id),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
228 -             StateScope::Hook(id) => format!("hook:{}:", id),
228 +             StateScope::Hook(id) => format!("hook:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:229:39
    |
229 |             StateScope::Custom(id) => format!("custom:{}:", id),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
229 -             StateScope::Custom(id) => format!("custom:{}:", id),
229 +             StateScope::Custom(id) => format!("custom:{id}:"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/scope.rs:234:5
    |
234 |     pub fn parent(&self) -> Option<StateScope> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parent(&self) -> Option<StateScope>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:237:13
    |
237 |             StateScope::User(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
237 ~             StateScope::User(_) | StateScope::Agent(_) => Some(StateScope::Global),
238 |             StateScope::Session(session_id) => {
...
245 |             }
246 ~             StateScope::Tool(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:237:13
    |
237 |             StateScope::User(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
237 ~             StateScope::User(_) | StateScope::Tool(_) => Some(StateScope::Global),
238 |             StateScope::Session(session_id) => {
...
246 |             StateScope::Agent(_) => Some(StateScope::Global),
247 ~             StateScope::Workflow(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:246:13
    |
246 |             StateScope::Agent(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
246 ~             StateScope::Agent(_) | StateScope::Tool(_) => Some(StateScope::Global),
247 ~             StateScope::Workflow(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:237:13
    |
237 |             StateScope::User(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
237 ~             StateScope::User(_) | StateScope::Workflow(_) => Some(StateScope::Global),
238 |             StateScope::Session(session_id) => {
...
247 |             StateScope::Tool(_) => Some(StateScope::Global),
248 ~             StateScope::Hook(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:246:13
    |
246 |             StateScope::Agent(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
246 ~             StateScope::Agent(_) | StateScope::Workflow(_) => Some(StateScope::Global),
247 |             StateScope::Tool(_) => Some(StateScope::Global),
248 ~             StateScope::Hook(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:247:13
    |
247 |             StateScope::Tool(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
247 ~             StateScope::Tool(_) | StateScope::Workflow(_) => Some(StateScope::Global),
248 ~             StateScope::Hook(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:237:13
    |
237 |             StateScope::User(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
237 ~             StateScope::User(_) | StateScope::Hook(_) => Some(StateScope::Global),
238 |             StateScope::Session(session_id) => {
...
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
249 ~             StateScope::Custom(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:246:13
    |
246 |             StateScope::Agent(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
246 ~             StateScope::Agent(_) | StateScope::Hook(_) => Some(StateScope::Global),
247 |             StateScope::Tool(_) => Some(StateScope::Global),
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
249 ~             StateScope::Custom(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:247:13
    |
247 |             StateScope::Tool(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
247 ~             StateScope::Tool(_) | StateScope::Hook(_) => Some(StateScope::Global),
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
249 ~             StateScope::Custom(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:248:13
    |
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
248 ~             StateScope::Workflow(_) | StateScope::Hook(_) => Some(StateScope::Global),
249 ~             StateScope::Custom(_) => Some(StateScope::Global),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:237:13
    |
237 |             StateScope::User(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
237 ~             StateScope::User(_) | StateScope::Custom(_) => Some(StateScope::Global),
238 |             StateScope::Session(session_id) => {
...
249 |             StateScope::Hook(_) => Some(StateScope::Global),
250 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:246:13
    |
246 |             StateScope::Agent(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
246 ~             StateScope::Agent(_) | StateScope::Custom(_) => Some(StateScope::Global),
247 |             StateScope::Tool(_) => Some(StateScope::Global),
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
249 |             StateScope::Hook(_) => Some(StateScope::Global),
250 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:247:13
    |
247 |             StateScope::Tool(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
247 ~             StateScope::Tool(_) | StateScope::Custom(_) => Some(StateScope::Global),
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
249 |             StateScope::Hook(_) => Some(StateScope::Global),
250 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:248:13
    |
248 |             StateScope::Workflow(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
248 ~             StateScope::Workflow(_) | StateScope::Custom(_) => Some(StateScope::Global),
249 |             StateScope::Hook(_) => Some(StateScope::Global),
250 ~             }
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-traits/src/scope.rs:249:13
    |
249 |             StateScope::Hook(_) => Some(StateScope::Global),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
249 ~             StateScope::Hook(_) | StateScope::Custom(_) => Some(StateScope::Global),
250 ~             }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:259:37
    |
259 |             StateScope::User(id) => write!(f, "user:{}", id),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
259 -             StateScope::User(id) => write!(f, "user:{}", id),
259 +             StateScope::User(id) => write!(f, "user:{id}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:260:40
    |
260 |             StateScope::Session(id) => write!(f, "session:{}", id),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
260 -             StateScope::Session(id) => write!(f, "session:{}", id),
260 +             StateScope::Session(id) => write!(f, "session:{id}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:261:38
    |
261 |             StateScope::Agent(id) => write!(f, "agent:{}", id),
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
261 -             StateScope::Agent(id) => write!(f, "agent:{}", id),
261 +             StateScope::Agent(id) => write!(f, "agent:{id}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:262:37
    |
262 |             StateScope::Tool(id) => write!(f, "tool:{}", id),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
262 -             StateScope::Tool(id) => write!(f, "tool:{}", id),
262 +             StateScope::Tool(id) => write!(f, "tool:{id}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:263:41
    |
263 |             StateScope::Workflow(id) => write!(f, "workflow:{}", id),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
263 -             StateScope::Workflow(id) => write!(f, "workflow:{}", id),
263 +             StateScope::Workflow(id) => write!(f, "workflow:{id}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:264:37
    |
264 |             StateScope::Hook(id) => write!(f, "hook:{}", id),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
264 -             StateScope::Hook(id) => write!(f, "hook:{}", id),
264 +             StateScope::Hook(id) => write!(f, "hook:{id}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-traits/src/scope.rs:265:39
    |
265 |             StateScope::Custom(id) => write!(f, "custom:{}", id),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
265 -             StateScope::Custom(id) => write!(f, "custom:{}", id),
265 +             StateScope::Custom(id) => write!(f, "custom:{id}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-traits/src/traits.rs:390:5
    |
390 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: `llmspell-state-traits` (lib) generated 93 warnings (run `cargo clippy --fix --lib -p llmspell-state-traits` to apply 57 suggestions)
    Checking llmspell-security v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-security)
    Checking llmspell-providers v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-providers)
    Checking llmspell-config v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-config)
warning: unused `self` argument
   --> llmspell-state-traits/src/traits.rs:523:23
    |
523 |         fn scoped_key(&self, scope: &StateScope, key: &str) -> String {
    |                       ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: redundant closure
   --> llmspell-state-traits/src/traits.rs:556:22
    |
556 |                 .map(|s| s.to_string())
    |                      ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-state-traits/src/traits.rs:651:9
    |
651 | /         struct TestData {
652 | |             name: String,
653 | |             value: i32,
654 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: `llmspell-state-traits` (lib test) generated 96 warnings (93 duplicates) (run `cargo clippy --fix --lib -p llmspell-state-traits --tests` to apply 1 suggestion)
warning: long literal lacking separators
  --> llmspell-providers/src/rig.rs:96:48
   |
96 |                     "gpt-4" | "gpt-4-turbo" => 128000,
   |                                                ^^^^^^ help: consider: `128_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
   --> llmspell-providers/src/rig.rs:101:60
    |
101 |                     "claude-3-opus" | "claude-3-sonnet" => 200000,
    |                                                            ^^^^^^ help: consider: `200_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-providers/src/rig.rs:102:37
    |
102 |                     "claude-2.1" => 100000,
    |                                     ^^^^^^ help: consider: `100_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-providers/src/rig.rs:103:26
    |
103 |                     _ => 100000,
    |                          ^^^^^^ help: consider: `100_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-providers/src/rig.rs:320:54
    |
320 |             assert_eq!(caps.max_context_tokens, Some(128000)); // GPT-4 context size
    |                                                      ^^^^^^ help: consider: `128_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-providers/src/rig.rs:333:54
    |
333 |             assert_eq!(caps.max_context_tokens, Some(200000)); // Claude 3 Opus context size
    |                                                      ^^^^^^ help: consider: `200_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: this method could have a `#[must_use]` attribute
  --> llmspell-storage/src/backends/memory.rs:18:5
   |
18 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-storage/src/backends/sled_backend.rs:19:5
   |
19 |     pub fn new() -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-storage/src/backends/sled_backend.rs:25:5
   |
25 |     pub fn new_with_path<P: AsRef<Path>>(path: P) -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-storage/src/backends/sled_backend.rs:31:5
   |
31 |     pub fn new_temporary() -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
  --> llmspell-storage/src/traits.rs:18:9
   |
18 |     /// RocksDB embedded database
   |         ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
   = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
   |
18 -     /// RocksDB embedded database
18 +     /// `RocksDB` embedded database
   |

warning: more than 3 bools in a struct
  --> llmspell-storage/src/traits.rs:24:1
   |
24 | / pub struct StorageCharacteristics {
25 | |     /// Whether the backend persists data
26 | |     pub persistent: bool,
...  |
41 | |     pub avg_write_latency_us: u64,
42 | | }
   | |_^
   |
   = help: consider using a state machine or refactoring bools into two-variant enums
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
   = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-storage/src/traits.rs:83:5
   |
83 |     fn to_storage_bytes(&self) -> Result<Vec<u8>>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-storage/src/traits.rs:84:5
   |
84 |     fn from_storage_bytes(bytes: &[u8]) -> Result<Self>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `llmspell-storage` (lib) generated 8 warnings (run `cargo clippy --fix --lib -p llmspell-storage` to apply 2 suggestions)
warning: `llmspell-storage` (lib test) generated 8 warnings (8 duplicates)
warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-security/src/sandbox/file_sandbox.rs:19:5
   |
19 |     pub fn new(context: SandboxContext) -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-security/src/sandbox/file_sandbox.rs:27:5
   |
27 |     pub fn validate_path(&self, path: &Path) -> Result<PathBuf> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:107:5
    |
107 |     pub async fn read_file(&mut self, path: &Path) -> Result<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:116:25
    |
116 |                 reason: format!("IO error: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
116 -                 reason: format!("IO error: {}", e),
116 +                 reason: format!("IO error: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:127:5
    |
127 |     pub async fn write_file(&mut self, path: &Path, contents: &[u8]) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:138:34
    |
138 |                         message: format!("Cannot create parent directory: {}", e),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
138 -                         message: format!("Cannot create parent directory: {}", e),
138 +                         message: format!("Cannot create parent directory: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:148:25
    |
148 |                 reason: format!("IO error: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
148 -                 reason: format!("IO error: {}", e),
148 +                 reason: format!("IO error: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:159:5
    |
159 |     pub async fn append_file(&mut self, path: &Path, contents: &[u8]) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:179:5
    |
179 |     pub async fn create_dir(&mut self, path: &Path) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:188:25
    |
188 |                 reason: format!("IO error: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
188 -                 reason: format!("IO error: {}", e),
188 +                 reason: format!("IO error: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:199:5
    |
199 |     pub async fn delete_file(&mut self, path: &Path) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:208:25
    |
208 |                 reason: format!("IO error: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
208 -                 reason: format!("IO error: {}", e),
208 +                 reason: format!("IO error: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:219:5
    |
219 |     pub async fn list_dir(&mut self, path: &Path) -> Result<Vec<PathBuf>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:229:25
    |
229 |                 reason: format!("IO error: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
229 -                 reason: format!("IO error: {}", e),
229 +                 reason: format!("IO error: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:243:30
    |
243 |                     message: format!("Error reading directory entry: {}", e),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
243 -                     message: format!("Error reading directory entry: {}", e),
243 +                     message: format!("Error reading directory entry: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:254:5
    |
254 |     pub async fn file_exists(&mut self, path: &Path) -> Result<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/file_sandbox.rs:260:5
    |
260 |     pub async fn file_metadata(&mut self, path: &Path) -> Result<fs::Metadata> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/file_sandbox.rs:269:25
    |
269 |                 reason: format!("IO error: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
269 -                 reason: format!("IO error: {}", e),
269 +                 reason: format!("IO error: {e}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-security/src/sandbox/file_sandbox.rs:280:5
    |
280 |     pub fn get_violations(&self) -> &[SandboxViolation] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_violations(&self) -> &[SandboxViolation]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: unchecked subtraction of a 'Duration' from an 'Instant'
  --> llmspell-security/src/sandbox/network_sandbox.rs:57:28
   |
57 |         let window_start = now - Duration::from_secs(self.config.window_seconds);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `now.checked_sub(Duration::from_secs(self.config.window_seconds)).unwrap()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unchecked_duration_subtraction
   = note: `-W clippy::unchecked-duration-subtraction` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unchecked_duration_subtraction)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-security/src/sandbox/network_sandbox.rs:84:5
   |
84 |     pub fn new(context: SandboxContext) -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-security/src/sandbox/network_sandbox.rs:94:5
   |
94 |     pub fn with_rate_limit(mut self, config: RateLimitConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_rate_limit(mut self, config: RateLimitConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-security/src/sandbox/network_sandbox.rs:94:5
   |
94 | /     pub fn with_rate_limit(mut self, config: RateLimitConfig) -> Self {
95 | |         self.default_rate_limit = config;
96 | |         self
97 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
   = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/network_sandbox.rs:100:5
    |
100 |     pub async fn validate_request(&mut self, url: &str, method: &str) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unused `self` argument
   --> llmspell-security/src/sandbox/network_sandbox.rs:127:23
    |
127 |     fn extract_domain(&self, url: &str) -> Result<String> {
    |                       ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/network_sandbox.rs:140:26
    |
140 |                 message: format!("Invalid URL format: {}", url),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
140 -                 message: format!("Invalid URL format: {}", url),
140 +                 message: format!("Invalid URL format: {url}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/network_sandbox.rs:160:25
    |
160 |                 reason: format!("Rate limit exceeded for domain: {}", domain),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
160 -                 reason: format!("Rate limit exceeded for domain: {}", domain),
160 +                 reason: format!("Rate limit exceeded for domain: {domain}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/network_sandbox.rs:174:5
    |
174 |     pub async fn get(&mut self, url: &str) -> Result<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/network_sandbox.rs:185:5
    |
185 |     pub async fn post(&mut self, url: &str, body: &str) -> Result<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/network_sandbox.rs:199:5
    |
199 |     pub async fn put(&mut self, url: &str, body: &str) -> Result<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/network_sandbox.rs:212:5
    |
212 |     pub async fn delete(&mut self, url: &str) -> Result<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/network_sandbox.rs:226:12
    |
226 |           Ok(format!(
    |  ____________^
227 | |             "{{\"mock_response\": true, \"url\": \"{}\", \"method\": \"{}\", \"status\": 200}}",
228 | |             url, method
229 | |         ))
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers
   --> llmspell-security/src/sandbox/network_sandbox.rs:241:38
    |
241 |                     recent_requests: limiter.requests.len() as u32,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
241 -                     recent_requests: limiter.requests.len() as u32,
241 +                     recent_requests: u32::try_from(limiter.requests.len()),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-security/src/sandbox/network_sandbox.rs:255:5
    |
255 |     pub fn get_violations(&self) -> &[SandboxViolation] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_violations(&self) -> &[SandboxViolation]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-security/src/sandbox/resource_monitor.rs:54:5
   |
54 |     pub fn new(context: SandboxContext) -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-security/src/sandbox/resource_monitor.rs:65:5
   |
65 |     pub async fn start(&mut self) -> Result<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: casts from `u32` to `f64` can be expressed infallibly using `From`
   --> llmspell-security/src/sandbox/resource_monitor.rs:127:37
    |
127 |                     let limit_f64 = limit as f64;
    |                                     ^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `f64::from` instead
    |
127 -                     let limit_f64 = limit as f64;
127 +                     let limit_f64 = f64::from(limit);
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/resource_monitor.rs:145:5
    |
145 |     pub async fn stop(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/resource_monitor.rs:169:5
    |
169 |     pub async fn record_network_usage(&self, bytes: u64) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/resource_monitor.rs:205:5
    |
205 |     pub async fn record_file_operation(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: casts from `u32` to `f64` can be expressed infallibly using `From`
   --> llmspell-security/src/sandbox/resource_monitor.rs:219:29
    |
219 |             let limit_f64 = limit as f64;
    |                             ^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: use `f64::from` instead
    |
219 -             let limit_f64 = limit as f64;
219 +             let limit_f64 = f64::from(limit);
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/resource_monitor.rs:240:5
    |
240 |     pub async fn record_custom_usage(&self, resource: &str, amount: u64) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/resource_monitor.rs:256:33
    |
256 |                         reason: format!("Custom resource '{}' exceeded limit", resource),
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
256 -                         reason: format!("Custom resource '{}' exceeded limit", resource),
256 +                         reason: format!("Custom resource '{resource}' exceeded limit"),
    |

warning: redundant closure
   --> llmspell-security/src/sandbox/resource_monitor.rs:294:36
    |
294 |         self.violations.iter().map(|v| v.to_string()).collect()
    |                                    ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/resource_monitor.rs:353:5
    |
353 |     pub async fn reset_counters(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-security/src/sandbox/mod.rs:40:5
   |
40 | /     pub fn new(
41 | |         id: String,
42 | |         security_requirements: SecurityRequirements,
43 | |         resource_limits: ResourceLimits,
44 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
40 ~     #[must_use] pub fn new(
41 +         id: String,
42 +         security_requirements: SecurityRequirements,
43 +         resource_limits: ResourceLimits,
44 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-security/src/sandbox/mod.rs:60:5
   |
60 |     pub fn is_path_allowed(&self, path: &Path) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_path_allowed(&self, path: &Path) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-security/src/sandbox/mod.rs:79:5
   |
79 |     pub fn is_domain_allowed(&self, domain: &str) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_domain_allowed(&self, domain: &str) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-security/src/sandbox/mod.rs:96:5
   |
96 |     pub fn is_env_var_allowed(&self, var: &str) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_env_var_allowed(&self, var: &str) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/mod.rs:117:5
    |
117 |     pub fn new(context: SandboxContext) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-security/src/sandbox/mod.rs:131:5
    |
131 |     pub fn context(&self) -> &SandboxContext {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn context(&self) -> &SandboxContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-security/src/sandbox/mod.rs:136:5
    |
136 |     pub fn file_sandbox(&self) -> &FileSandbox {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn file_sandbox(&self) -> &FileSandbox`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-security/src/sandbox/mod.rs:141:5
    |
141 |     pub fn network_sandbox(&self) -> &NetworkSandbox {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn network_sandbox(&self) -> &NetworkSandbox`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-security/src/sandbox/mod.rs:146:5
    |
146 |     pub fn resource_monitor(&self) -> &ResourceMonitor {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn resource_monitor(&self) -> &ResourceMonitor`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/mod.rs:151:5
    |
151 |     pub async fn start_monitoring(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-security/src/sandbox/mod.rs:156:5
    |
156 |     pub async fn stop_monitoring(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/mod.rs:205:17
    |
205 | /                 write!(
206 | |                     f,
207 | |                     "File access violation: {} on '{}' - {}",
208 | |                     operation, path, reason
209 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/mod.rs:216:17
    |
216 | /                 write!(
217 | |                     f,
218 | |                     "Network access violation: {} to '{}' - {}",
219 | |                     operation, domain, reason
220 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/mod.rs:228:17
    |
228 | /                 write!(
229 | |                     f,
230 | |                     "Resource limit violation: {} exceeded limit {} with {} - {}",
231 | |                     resource, limit, actual, reason
232 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-security/src/sandbox/mod.rs:235:17
    |
235 | /                 write!(
236 | |                     f,
237 | |                     "Environment access violation: '{}' - {}",
238 | |                     variable, reason
239 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/file_sandbox.rs:254:5
    |
254 | /     pub async fn file_exists(&mut self, path: &Path) -> Result<bool> {
255 | |         let safe_path = self.validate_path(path)?;
256 | |         Ok(safe_path.exists())
257 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/resource_monitor.rs:271:5
    |
271 | /     async fn collect_system_usage() -> ResourceUsage {
272 | |         // In a real implementation, this would use system APIs to get actual usage
273 | |         // For testing, we'll simulate some usage
274 | |         let now = Instant::now();
...   |
285 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/resource_monitor.rs:288:5
    |
288 | /     pub async fn has_violations(&self) -> bool {
289 | |         !self.violations.is_empty()
290 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/resource_monitor.rs:293:5
    |
293 | /     pub async fn get_violations(&self) -> Vec<String> {
294 | |         self.violations.iter().map(|v| v.to_string()).collect()
295 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/resource_monitor.rs:317:5
    |
317 | /     async fn calculate_memory_efficiency(&self, usage: &ResourceUsage) -> f64 {
318 | |         if let Some(limit) = self.context.resource_limits.max_memory_bytes {
319 | |             #[allow(clippy::cast_precision_loss)]
320 | |             let efficiency = 1.0 - (usage.memory_bytes as f64 / limit as f64).min(1.0);
...   |
325 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/resource_monitor.rs:328:5
    |
328 | /     async fn calculate_cpu_efficiency(&self, usage: &ResourceUsage) -> f64 {
329 | |         if let Some(limit) = self.context.resource_limits.max_cpu_time_ms {
330 | |             #[allow(clippy::cast_precision_loss)]
331 | |             let efficiency = 1.0 - (usage.cpu_time_ms as f64 / limit as f64).min(1.0);
...   |
336 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/resource_monitor.rs:339:5
    |
339 | /     async fn calculate_network_efficiency(&self, usage: &ResourceUsage) -> f64 {
340 | |         if let Some(limit) = self.context.resource_limits.max_network_bps {
341 | |             let duration = self.start_time.elapsed().as_secs_f64().max(1.0);
342 | |             #[allow(clippy::cast_precision_loss)]
...   |
350 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: this match arm has an identical body to the `_` wildcard arm
  --> llmspell-providers/src/abstraction.rs:73:13
   |
73 | /             "openai" | "anthropic" | "cohere" => name_str.clone(),
74 | |             _ => name_str.clone(), // Default to name for unknown providers
   | |____________^ help: try removing the arm
   |
   = help: or try changing either arm body
note: `_` wildcard arm here
  --> llmspell-providers/src/abstraction.rs:74:13
   |
74 |             _ => name_str.clone(), // Default to name for unknown providers
   |             ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
   = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`

warning: item in documentation is missing backticks
   --> llmspell-providers/src/abstraction.rs:108:19
    |
108 |     /// Format: "{name}/{provider_type}/{model}"
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
108 -     /// Format: "{name}/{provider_type}/{model}"
108 +     /// Format: "{`name}/{provider_type}/{model`}"
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/abstraction.rs:110:5
    |
110 |     pub fn instance_name(&self) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn instance_name(&self) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:115:5
    |
115 |     pub fn from_env(name: &str) -> Result<Self, LLMSpellError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:119:37
    |
119 |         let api_key = std::env::var(format!("{}API_KEY", env_prefix))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
119 -         let api_key = std::env::var(format!("{}API_KEY", env_prefix))
119 +         let api_key = std::env::var(format!("{env_prefix}API_KEY"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:138:38
    |
138 |         let endpoint = std::env::var(format!("{}ENDPOINT", env_prefix)).ok();
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
138 -         let endpoint = std::env::var(format!("{}ENDPOINT", env_prefix)).ok();
138 +         let endpoint = std::env::var(format!("{env_prefix}ENDPOINT")).ok();
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:140:27
    |
140 |             std::env::var(format!("{}MODEL", env_prefix)).unwrap_or_else(|_| "default".to_string());
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
140 -             std::env::var(format!("{}MODEL", env_prefix)).unwrap_or_else(|_| "default".to_string());
140 +             std::env::var(format!("{env_prefix}MODEL")).unwrap_or_else(|_| "default".to_string());
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:143:43
    |
143 |         let provider_type = std::env::var(format!("{}PROVIDER_TYPE", env_prefix))
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
143 -         let provider_type = std::env::var(format!("{}PROVIDER_TYPE", env_prefix))
143 +         let provider_type = std::env::var(format!("{env_prefix}PROVIDER_TYPE"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:152:41
    |
152 |             timeout_secs: std::env::var(format!("{}TIMEOUT", env_prefix))
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
152 -             timeout_secs: std::env::var(format!("{}TIMEOUT", env_prefix))
152 +             timeout_secs: std::env::var(format!("{env_prefix}TIMEOUT"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:155:40
    |
155 |             max_retries: std::env::var(format!("{}MAX_RETRIES", env_prefix))
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
155 -             max_retries: std::env::var(format!("{}MAX_RETRIES", env_prefix))
155 +             max_retries: std::env::var(format!("{env_prefix}MAX_RETRIES"))
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/abstraction.rs:206:5
    |
206 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:224:5
    |
224 | /     pub fn create(
225 | |         &self,
226 | |         config: ProviderConfig,
227 | |     ) -> Result<Box<dyn ProviderInstance>, LLMSpellError> {
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/abstraction.rs:240:5
    |
240 |     pub fn available_providers(&self) -> Vec<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn available_providers(&self) -> Vec<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: redundant closure
   --> llmspell-providers/src/abstraction.rs:241:35
    |
241 |         self.factories.keys().map(|s| s.as_str()).collect()
    |                                   ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/abstraction.rs:260:5
    |
260 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:281:5
    |
281 |     pub async fn init_provider(&self, config: ProviderConfig) -> Result<(), LLMSpellError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:304:5
    |
304 | /     pub async fn get_provider(
305 | |         &self,
306 | |         name: Option<&str>,
307 | |     ) -> Result<Arc<Box<dyn ProviderInstance>>, LLMSpellError> {
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:327:26
    |
327 |                 message: format!("Provider not found: {}", provider_name),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
327 -                 message: format!("Provider not found: {}", provider_name),
327 +                 message: format!("Provider not found: {provider_name}"),
    |

warning: item in documentation is missing backticks
   --> llmspell-providers/src/abstraction.rs:332:49
    |
332 |     /// Create and initialize a provider from a ModelSpecifier
    |                                                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
332 -     /// Create and initialize a provider from a ModelSpecifier
332 +     /// Create and initialize a provider from a `ModelSpecifier`
    |

warning: item in documentation is missing backticks
   --> llmspell-providers/src/abstraction.rs:335:22
    |
335 |     /// - Parses the ModelSpecifier to determine provider and model
    |                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
335 -     /// - Parses the ModelSpecifier to determine provider and model
335 +     /// - Parses the `ModelSpecifier` to determine provider and model
    |

warning: item in documentation is missing backticks
   --> llmspell-providers/src/abstraction.rs:341:20
    |
341 |     /// * `spec` - ModelSpecifier containing provider/model information
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
341 -     /// * `spec` - ModelSpecifier containing provider/model information
341 +     /// * `spec` - `ModelSpecifier` containing provider/model information
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:369:5
    |
369 | /     pub async fn create_agent_from_spec(
370 | |         &self,
371 | |         spec: ModelSpecifier,
372 | |         base_url_override: Option<&str>,
373 | |         api_key: Option<&str>,
374 | |     ) -> Result<Arc<Box<dyn ProviderInstance>>, LLMSpellError> {
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> llmspell-providers/src/abstraction.rs:376:29
    |
376 |           let provider_name = match &spec.provider {
    |  _____________________________^
377 | |             Some(provider) => provider.clone(),
378 | |             None => {
...   |
403 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
    = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
    |
376 ~         let provider_name = if let Some(provider) = &spec.provider { provider.clone() } else {
377 +             // If no provider specified, try to use default
378 +             let default = self.default_provider.read().await;
379 +             if let Some(default_provider) = default.as_ref() {
380 +                 // Extract provider name from hierarchical format "name/provider_type/model"
381 +                 // We want the provider_type (second part)
382 +                 let parts: Vec<&str> = default_provider.split('/').collect();
383 +                 if parts.len() >= 2 {
384 +                     parts[1].to_string() // Return the provider_type
385 +                 } else {
386 +                     return Err(LLMSpellError::Configuration {
387 +                         message:
388 +                             "No provider specified and no valid default provider available"
389 +                                 .to_string(),
390 +                         source: None,
391 +                     });
392 +                 }
393 +             } else {
394 +                 return Err(LLMSpellError::Configuration {
395 +                     message: "No provider specified and no default provider configured"
396 +                         .to_string(),
397 +                     source: None,
398 +                 });
399 +             }
400 ~         };
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:469:5
    |
469 | /     pub async fn get_default_provider(
470 | |         &self,
471 | |     ) -> Result<Arc<Box<dyn ProviderInstance>>, LLMSpellError> {
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:476:5
    |
476 |     pub async fn set_default_provider(&self, name: impl Into<String>) -> Result<(), LLMSpellError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:482:26
    |
482 |                 message: format!("Cannot set default: provider '{}' not initialized", name),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
482 -                 message: format!("Cannot set default: provider '{}' not initialized", name),
482 +                 message: format!("Cannot set default: provider '{name}' not initialized"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/abstraction.rs:493:5
    |
493 | /     pub async fn query_capabilities(
494 | |         &self,
495 | |         name: Option<&str>,
496 | |     ) -> Result<ProviderCapabilities, LLMSpellError> {
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/abstraction.rs:515:26
    |
515 |                 message: format!("Provider not found: {}", provider_name),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
515 -                 message: format!("Provider not found: {}", provider_name),
515 +                 message: format!("Provider not found: {provider_name}"),
    |

warning: redundant closure
   --> llmspell-providers/src/abstraction.rs:533:18
    |
533 |             .map(|s| s.to_string())
    |                  ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: item in documentation is missing backticks
 --> llmspell-providers/src/model_specifier.rs:1:14
  |
1 | //! ABOUTME: ModelSpecifier for parsing provider/model syntax
  |              ^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: ModelSpecifier for parsing provider/model syntax
1 + //! ABOUTME: `ModelSpecifier` for parsing provider/model syntax
  |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:20:22
   |
20 |     /// Create a new ModelSpecifier with just a model name
   |                      ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
20 -     /// Create a new ModelSpecifier with just a model name
20 +     /// Create a new `ModelSpecifier` with just a model name
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:29:22
   |
29 |     /// Create a new ModelSpecifier with provider and model
   |                      ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
29 -     /// Create a new ModelSpecifier with provider and model
29 +     /// Create a new `ModelSpecifier` with provider and model
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:38:22
   |
38 |     /// Create a new ModelSpecifier with provider, model, and base URL
   |                      ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
38 -     /// Create a new ModelSpecifier with provider, model, and base URL
38 +     /// Create a new `ModelSpecifier` with provider, model, and base URL
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:54:22
   |
54 |     /// - "model" -> ModelSpecifier { provider: None, model: "model", base_url: None }
   |                      ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
54 -     /// - "model" -> ModelSpecifier { provider: None, model: "model", base_url: None }
54 +     /// - "model" -> `ModelSpecifier` { provider: None, model: "model", base_url: None }
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:54:71
   |
54 |     /// - "model" -> ModelSpecifier { provider: None, model: "model", base_url: None }
   |                                                                       ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
54 -     /// - "model" -> ModelSpecifier { provider: None, model: "model", base_url: None }
54 +     /// - "model" -> ModelSpecifier { provider: None, model: "model", `base_url`: None }
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:55:31
   |
55 |     /// - "provider/model" -> ModelSpecifier { provider: Some("provider"), model: "model", base_url: None }
   |                               ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
55 -     /// - "provider/model" -> ModelSpecifier { provider: Some("provider"), model: "model", base_url: None }
55 +     /// - "provider/model" -> `ModelSpecifier` { provider: Some("provider"), model: "model", base_url: None }
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:55:92
   |
55 |     /// - "provider/model" -> ModelSpecifier { provider: Some("provider"), model: "model", base_url: None }
   |                                                                                            ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
55 -     /// - "provider/model" -> ModelSpecifier { provider: Some("provider"), model: "model", base_url: None }
55 +     /// - "provider/model" -> ModelSpecifier { provider: Some("provider"), model: "model", `base_url`: None }
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:56:43
   |
56 |     /// - "provider/subprovider/model" -> ModelSpecifier { provider: Some("provider/subprovider"), model: "model", base_url: None }
   |                                           ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
56 -     /// - "provider/subprovider/model" -> ModelSpecifier { provider: Some("provider/subprovider"), model: "model", base_url: None }
56 +     /// - "provider/subprovider/model" -> `ModelSpecifier` { provider: Some("provider/subprovider"), model: "model", base_url: None }
   |

warning: item in documentation is missing backticks
  --> llmspell-providers/src/model_specifier.rs:56:116
   |
56 |     /// - "provider/subprovider/model" -> ModelSpecifier { provider: Some("provider/subprovider"), model: "model", base_url: None }
   |                                                                                                                    ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
56 -     /// - "provider/subprovider/model" -> ModelSpecifier { provider: Some("provider/subprovider"), model: "model", base_url: None }
56 +     /// - "provider/subprovider/model" -> ModelSpecifier { provider: Some("provider/subprovider"), model: "model", `base_url`: None }
   |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-providers/src/model_specifier.rs:74:5
   |
74 |     pub fn parse(spec: &str) -> Result<Self, LLMSpellError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/model_specifier.rs:106:30
    |
106 |                     message: format!("Invalid model specification format: '{}'", spec),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
106 -                     message: format!("Invalid model specification format: '{}'", spec),
106 +                     message: format!("Invalid model specification format: '{spec}'"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/model_specifier.rs:127:5
    |
127 |     pub fn parse_with_base_url(spec: &str, base_url: Option<&str>) -> Result<Self, LLMSpellError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: redundant closure
   --> llmspell-providers/src/model_specifier.rs:129:44
    |
129 |         model_spec.base_url = base_url.map(|url| url.to_string());
    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/model_specifier.rs:134:5
    |
134 |     pub fn provider_or_default<'a>(&'a self, default: &'a str) -> &'a str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn provider_or_default<'a>(&'a self, default: &'a str) -> &'a str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/model_specifier.rs:139:5
    |
139 |     pub fn has_provider(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_provider(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-providers/src/model_specifier.rs:144:5
    |
144 |     pub fn has_base_url(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_base_url(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-providers/src/rig.rs:30:5
   |
30 |     pub fn new(config: ProviderConfig) -> Result<Self, LLMSpellError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-providers/src/rig.rs:105:17
    |
105 | /                 "cohere" => 4096,
106 | |                 _ => 4096,
    | |________________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-providers/src/rig.rs:106:17
    |
106 |                 _ => 4096,
    |                 ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-providers/src/rig.rs:102:21
    |
102 | /                     "claude-2.1" => 100000,
103 | |                     _ => 100000,
    | |____________________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-providers/src/rig.rs:103:21
    |
103 |                     _ => 100000,
    |                     ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: calling `HashMap::default()` is more clear than this expression
   --> llmspell-providers/src/rig.rs:110:30
    |
110 |             custom_features: Default::default(),
    |                              ^^^^^^^^^^^^^^^^^^ help: try: `HashMap::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: redundant closure
   --> llmspell-providers/src/rig.rs:117:23
    |
117 |             .and_then(|v| v.as_u64())
    |                       ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:139:30
    |
139 |                     message: format!("OpenAI completion failed: {}", e),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
139 -                     message: format!("OpenAI completion failed: {}", e),
139 +                     message: format!("OpenAI completion failed: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:147:38
    |
147 | ...                   message: format!("Unexpected tool call response: {}", name),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
147 -                             message: format!("Unexpected tool call response: {}", name),
147 +                             message: format!("Unexpected tool call response: {name}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:159:30
    |
159 |                     message: format!("Anthropic completion failed: {}", e),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
159 -                     message: format!("Anthropic completion failed: {}", e),
159 +                     message: format!("Anthropic completion failed: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:167:38
    |
167 | ...                   message: format!("Unexpected tool call response: {}", name),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
167 -                             message: format!("Unexpected tool call response: {}", name),
167 +                             message: format!("Unexpected tool call response: {name}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:179:30
    |
179 |                     message: format!("Cohere completion failed: {}", e),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
179 -                     message: format!("Cohere completion failed: {}", e),
179 +                     message: format!("Cohere completion failed: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:187:38
    |
187 | ...                   message: format!("Unexpected tool call response: {}", name),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
187 -                             message: format!("Unexpected tool call response: {}", name),
187 +                             message: format!("Unexpected tool call response: {name}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:214:35
    |
214 |                     .map(|(k, v)| format!("{}: {}", k, v))
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
214 -                     .map(|(k, v)| format!("{}: {}", k, v))
214 +                     .map(|(k, v)| format!("{k}: {v}"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:218:26
    |
218 |                 prompt = format!("{}\n\n{}", context_text, prompt);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
218 -                 prompt = format!("{}\n\n{}", context_text, prompt);
218 +                 prompt = format!("{context_text}\n\n{prompt}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/rig.rs:260:26
    |
260 |                 message: format!("Provider validation failed: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
260 -                 message: format!("Provider validation failed: {}", e),
260 +                 message: format!("Provider validation failed: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-providers/src/rig.rs:278:1
    |
278 | / pub fn create_rig_provider(
279 | |     config: ProviderConfig,
280 | | ) -> Result<Box<dyn ProviderInstance>, LLMSpellError> {
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `llmspell-security` (lib) generated 67 warnings (run `cargo clippy --fix --lib -p llmspell-security` to apply 31 suggestions)
warning: variables can be used directly in the `format!` string
   --> llmspell-providers/src/model_specifier.rs:268:9
    |
268 |         assert_eq!(format!("{}", spec), "openai/gpt-4");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
268 -         assert_eq!(format!("{}", spec), "openai/gpt-4");
268 +         assert_eq!(format!("{spec}"), "openai/gpt-4");
    |

warning: unused `async` for function with no await statements
   --> llmspell-security/src/sandbox/file_sandbox.rs:297:5
    |
297 | /     async fn create_test_sandbox() -> (FileSandbox, TempDir) {
298 | |         let temp_dir = TempDir::new().unwrap();
299 | |         let temp_path = temp_dir.path().to_string_lossy().to_string();
...   |
310 | |         (sandbox, temp_dir)
311 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: `llmspell-providers` (lib) generated 65 warnings (run `cargo clippy --fix --lib -p llmspell-providers` to apply 45 suggestions)
warning: `llmspell-providers` (lib test) generated 68 warnings (65 duplicates) (run `cargo clippy --fix --lib -p llmspell-providers --tests` to apply 1 suggestion)
warning: `llmspell-security` (lib test) generated 68 warnings (67 duplicates)
    Checking llmspell-events v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-events)
warning: variables can be used directly in the `format!` string
  --> llmspell-utils/examples/response_builder.rs:93:5
   |
93 |     println!("Text output: {}", text);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
93 -     println!("Text output: {}", text);
93 +     println!("Text output: {text}");
   |

warning: long literal lacking separators
  --> llmspell-utils/tests/rate_limiting_integration.rs:41:36
   |
41 |     assert_eq!(info.reset_at, Some(1234567890));
   |                                    ^^^^^^^^^^ help: consider: `1_234_567_890`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: variables can be used directly in the `format!` string
  --> llmspell-utils/tests/path_security_penetration_test.rs:31:9
   |
31 | /         assert!(
32 | |             result.is_err(),
33 | |             "Path traversal attack '{}' should be blocked",
34 | |             attack
35 | |         );
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: variables can be used directly in the `format!` string
  --> llmspell-utils/tests/path_security_penetration_test.rs:56:9
   |
56 | /         assert!(
57 | |             result.is_err(),
58 | |             "Unicode path traversal attack '{}' should be blocked",
59 | |             attack
60 | |         );
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
  --> llmspell-utils/tests/path_security_penetration_test.rs:80:9
   |
80 | /         assert!(
81 | |             result.is_err(),
82 | |             "Null byte injection attack '{}' should be blocked",
83 | |             attack
84 | |         );
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:103:9
    |
103 | /         assert!(
104 | |             result.is_err(),
105 | |             "Case sensitivity attack '{}' should be blocked",
106 | |             attack
107 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:123:9
    |
123 | /         assert!(
124 | |             result.is_err(),
125 | |             "Double encoding attack '{}' should be blocked",
126 | |             attack
127 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:145:9
    |
145 | /         assert!(
146 | |             result.is_err(),
147 | |             "Overlong UTF-8 attack '{}' should be blocked",
148 | |             attack
149 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:164:24
    |
164 |         let path_str = format!("/tmp/{}.txt", device);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
164 -         let path_str = format!("/tmp/{}.txt", device);
164 +         let path_str = format!("/tmp/{device}.txt");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:166:9
    |
166 | /         assert!(
167 | |             result.is_err(),
168 | |             "Windows reserved device name '{}' should be blocked",
169 | |             device
170 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:250:9
    |
250 | /         assert!(
251 | |             result.is_err(),
252 | |             "Permission escalation attack '{}' should be blocked",
253 | |             attack
254 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:346:9
    |
346 | /         assert!(
347 | |             result.is_err(),
348 | |             "Complex combination attack '{}' should be blocked",
349 | |             attack
350 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:367:9
    |
367 | /         assert!(
368 | |             result.is_err(),
369 | |             "Edge case path '{}' should be blocked",
370 | |             edge_case
371 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:388:9
    |
388 | /         assert!(
389 | |             result.is_err(),
390 | |             "Cross-platform edge case '{}' should be blocked",
391 | |             edge_case
392 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:403:22
    |
403 |         let attack = format!("../../../etc/passwd{}", i);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
403 -         let attack = format!("../../../etc/passwd{}", i);
403 +         let attack = format!("../../../etc/passwd{i}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/path_security_penetration_test.rs:405:9
    |
405 |         assert!(result.is_err(), "Attack {} should be blocked", i);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
405 -         assert!(result.is_err(), "Attack {} should be blocked", i);
405 +         assert!(result.is_err(), "Attack {i} should be blocked");
    |

warning: `llmspell-utils` (example "response_builder") generated 1 warning (run `cargo clippy --fix --example "response_builder"` to apply 1 suggestion)
warning: variables can be used directly in the `format!` string
  --> llmspell-utils/examples/information_disclosure_prevention.rs:83:9
   |
83 |         println!("  {} -> {}", log, filtered);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
83 -         println!("  {} -> {}", log, filtered);
83 +         println!("  {log} -> {filtered}");
   |

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-utils/examples/information_disclosure_prevention.rs:99:5
   |
99 |     use llmspell_core::LLMSpellError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
   = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/examples/information_disclosure_prevention.rs:138:9
    |
138 |         println!("\n  Original: {:?}", error);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
138 -         println!("\n  Original: {:?}", error);
138 +         println!("\n  Original: {error:?}");
    |

warning: variables can be used directly in the `format!` string
  --> llmspell-utils/tests/api_key_management_integration.rs:13:17
   |
13 |         key_id: format!("{}_key", service),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
13 -         key_id: format!("{}_key", service),
13 +         key_id: format!("{service}_key"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-utils/tests/resource_limits_integration.rs:42:9
   |
42 | /         assert!(
43 | |             tracker.track_operation().is_ok(),
44 | |             "Operation {} should succeed",
45 | |             i
46 | |         );
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: single-character string constant used as pattern
   --> llmspell-utils/tests/resource_limits_integration.rs:121:40
    |
121 |         assert!(e.to_string().contains("3"));
    |                                        ^^^ help: consider using a `char`: `'3'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
    = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/api_key_management_integration.rs:211:46
    |
211 |         let metadata = create_test_metadata(&format!("service_{}", i));
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
211 -         let metadata = create_test_metadata(&format!("service_{}", i));
211 +         let metadata = create_test_metadata(&format!("service_{i}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/api_key_management_integration.rs:214:18
    |
214 |                 &format!("service_{}_key", i),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
214 -                 &format!("service_{}_key", i),
214 +                 &format!("service_{i}_key"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/api_key_management_integration.rs:215:18
    |
215 |                 &format!("key_{}", i),
    |                  ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
215 -                 &format!("key_{}", i),
215 +                 &format!("key_{i}"),
    |

warning: binding's name is too similar to existing binding
   --> llmspell-events/src/bus.rs:400:13
    |
400 |         let received = receiver.recv().await.unwrap();
    |             ^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-events/src/bus.rs:395:17
    |
395 |         let mut receiver = bus.subscribe("test.*").await.unwrap();
    |                 ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: binding's name is too similar to existing binding
   --> llmspell-events/src/bus.rs:446:13
    |
446 |         let received1 = receiver1.recv().await.unwrap();
    |             ^^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-events/src/bus.rs:439:17
    |
439 |         let mut receiver1 = bus.subscribe("multi.*").await.unwrap();
    |                 ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> llmspell-events/src/bus.rs:447:13
    |
447 |         let received2 = receiver2.recv().await.unwrap();
    |             ^^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-events/src/bus.rs:439:17
    |
439 |         let mut receiver1 = bus.subscribe("multi.*").await.unwrap();
    |                 ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: `llmspell-utils` (test "path_security_penetration_test") generated 14 warnings (run `cargo clippy --fix --test "path_security_penetration_test"` to apply 14 suggestions)
warning: variables can be used directly in the `format!` string
  --> llmspell-utils/tests/integration_test.rs:40:13
   |
40 |     let _ = format!("{}", os); // Test Display trait
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
40 -     let _ = format!("{}", os); // Test Display trait
40 +     let _ = format!("{os}"); // Test Display trait
   |

warning: binding's name is too similar to existing binding
   --> llmspell-events/src/stream.rs:370:13
    |
370 |         let event1 = filtered.next().await.unwrap().unwrap();
    |             ^^^^^^
    |
note: existing binding defined here
   --> llmspell-events/src/stream.rs:357:13
    |
357 |         let events = vec![
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> llmspell-events/src/stream.rs:373:13
    |
373 |         let event2 = filtered.next().await.unwrap().unwrap();
    |             ^^^^^^
    |
note: existing binding defined here
   --> llmspell-events/src/stream.rs:357:13
    |
357 |         let events = vec![
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/rate_limiting_integration.rs:203:21
    |
203 |         Ok(body) => println!("Response: {}", body),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
203 -         Ok(body) => println!("Response: {}", body),
203 +         Ok(body) => println!("Response: {body}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/rate_limiting_integration.rs:204:19
    |
204 |         Err(e) => eprintln!("Request failed after retries: {}", e),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
204 -         Err(e) => eprintln!("Request failed after retries: {}", e),
204 +         Err(e) => eprintln!("Request failed after retries: {e}"),
    |

warning: `llmspell-utils` (example "information_disclosure_prevention") generated 3 warnings (run `cargo clippy --fix --example "information_disclosure_prevention"` to apply 2 suggestions)
warning: `llmspell-utils` (test "api_key_management_integration") generated 4 warnings (run `cargo clippy --fix --test "api_key_management_integration"` to apply 4 suggestions)
warning: `llmspell-utils` (test "resource_limits_integration") generated 2 warnings (run `cargo clippy --fix --test "resource_limits_integration"` to apply 2 suggestions)
warning: casts from `u32` to `u64` can be expressed infallibly using `From`
   --> llmspell-utils/tests/circuit_breaker_integration.rs:182:9
    |
182 |         success_count.load(Ordering::SeqCst) as u64 + failure_count.load(Ordering::SeqCst) as u64
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `u64::from` instead
    |
182 -         success_count.load(Ordering::SeqCst) as u64 + failure_count.load(Ordering::SeqCst) as u64
182 +         u64::from(success_count.load(Ordering::SeqCst)) + failure_count.load(Ordering::SeqCst) as u64
    |

warning: casts from `u32` to `u64` can be expressed infallibly using `From`
   --> llmspell-utils/tests/circuit_breaker_integration.rs:182:55
    |
182 |         success_count.load(Ordering::SeqCst) as u64 + failure_count.load(Ordering::SeqCst) as u64
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: use `u64::from` instead
    |
182 -         success_count.load(Ordering::SeqCst) as u64 + failure_count.load(Ordering::SeqCst) as u64
182 +         success_count.load(Ordering::SeqCst) as u64 + u64::from(failure_count.load(Ordering::SeqCst))
    |

warning: `llmspell-utils` (test "integration_test") generated 1 warning (run `cargo clippy --fix --test "integration_test"` to apply 1 suggestion)
warning: strict comparison of `f32` or `f64`
   --> llmspell-utils/tests/circuit_breaker_integration.rs:251:5
    |
251 |     assert_eq!(metrics.success_rate(), 95.0);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `llmspell-utils` (test "rate_limiting_integration") generated 3 warnings (run `cargo clippy --fix --test "rate_limiting_integration"` to apply 2 suggestions)
warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/circuit_breaker_integration.rs:345:21
    |
345 |         Ok(body) => println!("Response: {}", body),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
345 -         Ok(body) => println!("Response: {}", body),
345 +         Ok(body) => println!("Response: {body}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-utils/tests/circuit_breaker_integration.rs:346:19
    |
346 |         Err(e) => eprintln!("Request failed: {}", e),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
346 -         Err(e) => eprintln!("Request failed: {}", e),
346 +         Err(e) => eprintln!("Request failed: {e}"),
    |

warning: `llmspell-utils` (test "circuit_breaker_integration") generated 5 warnings (run `cargo clippy --fix --test "circuit_breaker_integration"` to apply 4 suggestions)
warning: item in documentation is missing backticks
 --> llmspell-events/src/lib.rs:4:7
  |
4 | //! # LLMSpell Events
  |       ^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
4 - //! # LLMSpell Events
4 + //! # `LLMSpell` Events
  |

warning: item in documentation is missing backticks
 --> llmspell-events/src/lib.rs:7:40
  |
7 | //! - Cross-language event support via UniversalEvent
  |                                        ^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
7 - //! - Cross-language event support via UniversalEvent
7 + //! - Cross-language event support via `UniversalEvent`
  |

warning: item in documentation is missing backticks
 --> llmspell-events/src/lib.rs:8:34
  |
8 | //! - Backpressure handling with FlowController
  |                                  ^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
8 - //! - Backpressure handling with FlowController
8 + //! - Backpressure handling with `FlowController`
  |

warning: item in documentation is missing backticks
  --> llmspell-events/src/lib.rs:14:9
   |
14 | //! - **UniversalEvent**: Language-agnostic event format
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
14 - //! - **UniversalEvent**: Language-agnostic event format
14 + //! - **`UniversalEvent`**: Language-agnostic event format
   |

warning: item in documentation is missing backticks
  --> llmspell-events/src/lib.rs:15:9
   |
15 | //! - **FlowController**: Rate limiting and backpressure
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
15 - //! - **FlowController**: Rate limiting and backpressure
15 + //! - **`FlowController`**: Rate limiting and backpressure
   |

warning: item in documentation is missing backticks
  --> llmspell-events/src/lib.rs:16:9
   |
16 | //! - **EventBus**: Async pub/sub with pattern matching
   |         ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
16 - //! - **EventBus**: Async pub/sub with pattern matching
16 + //! - **`EventBus`**: Async pub/sub with pattern matching
   |

warning: item in documentation is missing backticks
  --> llmspell-events/src/lib.rs:17:9
   |
17 | //! - **EventStorageAdapter**: Unified storage integration via llmspell-storage
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
17 - //! - **EventStorageAdapter**: Unified storage integration via llmspell-storage
17 + //! - **`EventStorageAdapter`**: Unified storage integration via llmspell-storage
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/bus.rs:60:5
   |
60 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/bus.rs:65:5
   |
65 |     pub fn with_config(config: FlowControllerConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: FlowControllerConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/bus.rs:78:5
   |
78 | /     pub fn with_persistence<B: StorageBackend + 'static>(
79 | |         flow_config: FlowControllerConfig,
80 | |         storage_adapter: crate::storage_adapter::EventStorageAdapter<B>,
81 | |         persistence_config: PersistenceConfig,
82 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
78 ~     #[must_use] pub fn with_persistence<B: StorageBackend + 'static>(
79 +         flow_config: FlowControllerConfig,
80 +         storage_adapter: crate::storage_adapter::EventStorageAdapter<B>,
81 +         persistence_config: PersistenceConfig,
82 ~     ) -> Self {
   |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-events/src/bus.rs:98:5
   |
98 |     pub async fn publish(&self, event: UniversalEvent) -> Result<(), PublishError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/bus.rs:142:5
    |
142 | /     pub async fn subscribe(
143 | |         &self,
144 | |         pattern: &str,
145 | |     ) -> Result<mpsc::UnboundedReceiver<UniversalEvent>, SubscribeError> {
    | |________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/bus.rs:166:5
    |
166 | /     pub async fn subscribe_with_handler<H>(
167 | |         &self,
168 | |         pattern: &str,
169 | |         handler: H,
170 | |     ) -> Result<Uuid, SubscribeError>
171 | |     where
172 | |         H: AsyncEventHandler + Send + 'static,
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:191:5
    |
191 |     pub fn subscribe_all(&self) -> broadcast::Receiver<UniversalEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn subscribe_all(&self) -> broadcast::Receiver<UniversalEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:225:5
    |
225 |     pub fn buffer_size(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn buffer_size(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:230:5
    |
230 |     pub fn get_stats(&self) -> crate::flow_controller::FlowStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> crate::flow_controller::FlowStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:235:5
    |
235 |     pub fn subscription_count(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn subscription_count(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/bus.rs:243:5
    |
243 | /     pub async fn get_persisted_events(
244 | |         &self,
245 | |         pattern: &str,
246 | |     ) -> Result<Vec<UniversalEvent>, anyhow::Error> {
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/bus.rs:256:5
    |
256 | /     pub async fn get_events_by_correlation_id(
257 | |         &self,
258 | |         correlation_id: Uuid,
259 | |     ) -> Result<Vec<UniversalEvent>, anyhow::Error> {
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/bus.rs:272:5
    |
272 | /     pub async fn get_storage_stats(
273 | |         &self,
274 | |     ) -> Result<Option<crate::storage_adapter::StorageStats>, anyhow::Error> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> llmspell-events/src/bus.rs:291:17
    |
291 | /// Builder for EventBus
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
291 - /// Builder for EventBus
291 + /// Builder for `EventBus`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:300:5
    |
300 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:309:5
    |
309 |     pub fn with_flow_config(mut self, config: FlowControllerConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_flow_config(mut self, config: FlowControllerConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/bus.rs:309:5
    |
309 | /     pub fn with_flow_config(mut self, config: FlowControllerConfig) -> Self {
310 | |         self.flow_config = config;
311 | |         self
312 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
    = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:315:5
    |
315 |     pub fn with_broadcast_capacity(mut self, capacity: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_broadcast_capacity(mut self, capacity: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/bus.rs:315:5
    |
315 | /     pub fn with_broadcast_capacity(mut self, capacity: usize) -> Self {
316 | |         self.broadcast_capacity = capacity;
317 | |         self
318 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:321:5
    |
321 | /     pub fn with_storage_persistence<B: StorageBackend + 'static>(
322 | |         mut self,
323 | |         storage_adapter: crate::storage_adapter::EventStorageAdapter<B>,
324 | |         config: PersistenceConfig,
325 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
321 ~     #[must_use] pub fn with_storage_persistence<B: StorageBackend + 'static>(
322 +         mut self,
323 +         storage_adapter: crate::storage_adapter::EventStorageAdapter<B>,
324 +         config: PersistenceConfig,
325 ~     ) -> Self {
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/bus.rs:321:5
    |
321 | /     pub fn with_storage_persistence<B: StorageBackend + 'static>(
322 | |         mut self,
323 | |         storage_adapter: crate::storage_adapter::EventStorageAdapter<B>,
324 | |         config: PersistenceConfig,
...   |
328 | |         self
329 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/bus.rs:332:5
    |
332 |     pub fn build(self) -> EventBus {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> EventBus`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/query.rs:80:5
   |
80 |     pub fn new(start: DateTime<Utc>, end: DateTime<Utc>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(start: DateTime<Utc>, end: DateTime<Utc>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/query.rs:85:5
   |
85 |     pub fn last_seconds(seconds: i64) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn last_seconds(seconds: i64) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/query.rs:92:5
   |
92 |     pub fn last_minutes(minutes: i64) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn last_minutes(minutes: i64) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/query.rs:97:5
   |
97 |     pub fn last_hours(hours: i64) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn last_hours(hours: i64) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:102:5
    |
102 |     pub fn contains(&self, timestamp: DateTime<Utc>) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn contains(&self, timestamp: DateTime<Utc>) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:152:5
    |
152 |     pub fn new(query: TimelineQuery) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(query: TimelineQuery) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:168:5
    |
168 |     pub fn get_entries(&self) -> Vec<&TimelineEntry> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_entries(&self) -> Vec<&TimelineEntry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:173:5
    |
173 |     pub fn get_entries_by_score(&self) -> Vec<&QueryResultEntry> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_entries_by_score(&self) -> Vec<&QueryResultEntry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:192:5
    |
192 |     pub fn new(tracker: EventCorrelationTracker) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(tracker: EventCorrelationTracker) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:197:5
    |
197 |     pub fn execute_query(&self, query: TimelineQuery) -> QueryResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execute_query(&self, query: TimelineQuery) -> QueryResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-events/src/correlation/query.rs:197:40
    |
197 |     pub fn execute_query(&self, query: TimelineQuery) -> QueryResult {
    |                                        ^^^^^^^^^^^^^ help: consider taking a reference instead: `&TimelineQuery`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: redundant closure
   --> llmspell-events/src/correlation/query.rs:220:63
    |
220 |         let total_events_examined = correlations.values().map(|v| v.len()).sum::<usize>();
    |                                                               ^^^^^^^^^^^ help: replace the closure with the method itself: `std::vec::Vec::len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:260:5
    |
260 |     pub fn query_by_pattern(&self, pattern: &str) -> QueryResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn query_by_pattern(&self, pattern: &str) -> QueryResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:269:5
    |
269 |     pub fn query_by_time_range(&self, start: DateTime<Utc>, end: DateTime<Utc>) -> QueryResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn query_by_time_range(&self, start: DateTime<Utc>, end: DateTime<Utc>) -> QueryResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:278:5
    |
278 |     pub fn query_by_component(&self, component: &str) -> QueryResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn query_by_component(&self, component: &str) -> QueryResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:287:5
    |
287 |     pub fn query_root_causes(&self) -> QueryResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn query_root_causes(&self) -> QueryResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:296:5
    |
296 |     pub fn query_leaf_effects(&self) -> QueryResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn query_leaf_effects(&self) -> QueryResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-events/src/correlation/query.rs:307:17
    |
307 |         events: Vec<UniversalEvent>,
    |                 ^^^^^^^^^^^^^^^^^^^ help: consider changing the type to: `&[UniversalEvent]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: unused `self` argument
   --> llmspell-events/src/correlation/query.rs:344:9
    |
344 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: unused `self` argument
   --> llmspell-events/src/correlation/query.rs:448:21
    |
448 |     fn sort_entries(&self, entries: &mut [QueryResultEntry], sort_order: &SortOrder) {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:479:5
    |
479 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:486:5
    |
486 |     pub fn correlation_ids(mut self, ids: Vec<Uuid>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn correlation_ids(mut self, ids: Vec<Uuid>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:486:5
    |
486 | /     pub fn correlation_ids(mut self, ids: Vec<Uuid>) -> Self {
487 | |         self.query.correlation_ids = Some(ids);
488 | |         self
489 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:492:5
    |
492 |     pub fn event_types(mut self, patterns: Vec<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn event_types(mut self, patterns: Vec<String>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:492:5
    |
492 | /     pub fn event_types(mut self, patterns: Vec<String>) -> Self {
493 | |         self.query.event_types = Some(patterns);
494 | |         self
495 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:498:5
    |
498 |     pub fn time_range(mut self, start: DateTime<Utc>, end: DateTime<Utc>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn time_range(mut self, start: DateTime<Utc>, end: DateTime<Utc>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:498:5
    |
498 | /     pub fn time_range(mut self, start: DateTime<Utc>, end: DateTime<Utc>) -> Self {
499 | |         self.query.time_range = Some(TimeRange::new(start, end));
500 | |         self
501 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:504:5
    |
504 |     pub fn last_seconds(mut self, seconds: i64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn last_seconds(mut self, seconds: i64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:504:5
    |
504 | /     pub fn last_seconds(mut self, seconds: i64) -> Self {
505 | |         self.query.time_range = Some(TimeRange::last_seconds(seconds));
506 | |         self
507 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:510:5
    |
510 |     pub fn source_components(mut self, components: Vec<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn source_components(mut self, components: Vec<String>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:510:5
    |
510 | /     pub fn source_components(mut self, components: Vec<String>) -> Self {
511 | |         self.query.source_components = Some(components);
512 | |         self
513 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:516:5
    |
516 |     pub fn target_components(mut self, components: Vec<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn target_components(mut self, components: Vec<String>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:516:5
    |
516 | /     pub fn target_components(mut self, components: Vec<String>) -> Self {
517 | |         self.query.target_components = Some(components);
518 | |         self
519 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:522:5
    |
522 |     pub fn languages(mut self, languages: Vec<Language>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn languages(mut self, languages: Vec<Language>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:522:5
    |
522 | /     pub fn languages(mut self, languages: Vec<Language>) -> Self {
523 | |         self.query.languages = Some(languages);
524 | |         self
525 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:528:5
    |
528 |     pub fn tags(mut self, tags: Vec<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn tags(mut self, tags: Vec<String>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:528:5
    |
528 | /     pub fn tags(mut self, tags: Vec<String>) -> Self {
529 | |         self.query.tags = Some(tags);
530 | |         self
531 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:534:5
    |
534 |     pub fn causality_depth_range(mut self, min: u32, max: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn causality_depth_range(mut self, min: u32, max: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:534:5
    |
534 | /     pub fn causality_depth_range(mut self, min: u32, max: u32) -> Self {
535 | |         self.query.causality_depth_range = Some((min, max));
536 | |         self
537 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:540:5
    |
540 |     pub fn root_causes_only(mut self) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn root_causes_only(mut self) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:540:5
    |
540 | /     pub fn root_causes_only(mut self) -> Self {
541 | |         self.query.root_causes_only = true;
542 | |         self
543 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:546:5
    |
546 |     pub fn leaf_effects_only(mut self) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn leaf_effects_only(mut self) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:546:5
    |
546 | /     pub fn leaf_effects_only(mut self) -> Self {
547 | |         self.query.leaf_effects_only = true;
548 | |         self
549 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:552:5
    |
552 |     pub fn sort_by(mut self, order: SortOrder) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn sort_by(mut self, order: SortOrder) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:552:5
    |
552 | /     pub fn sort_by(mut self, order: SortOrder) -> Self {
553 | |         self.query.sort_order = order;
554 | |         self
555 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:558:5
    |
558 |     pub fn limit(mut self, limit: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn limit(mut self, limit: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/query.rs:558:5
    |
558 | /     pub fn limit(mut self, limit: usize) -> Self {
559 | |         self.query.limit = Some(limit);
560 | |         self
561 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/query.rs:564:5
    |
564 |     pub fn build(self) -> TimelineQuery {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> TimelineQuery`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/timeline.rs:34:5
   |
34 |     pub fn new(event: UniversalEvent, position: usize, start_time: DateTime<Utc>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(event: UniversalEvent, position: usize, start_time: DateTime<Utc>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/timeline.rs:78:5
   |
78 |     pub fn is_root_cause(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_root_cause(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/timeline.rs:83:5
   |
83 |     pub fn is_leaf_effect(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_leaf_effect(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:157:5
    |
157 |     pub fn new(root_event_id: Uuid, start_time: DateTime<Utc>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(root_event_id: Uuid, start_time: DateTime<Utc>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:182:5
    |
182 |     pub fn root_event(&self) -> Option<Uuid> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn root_event(&self) -> Option<Uuid>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:187:5
    |
187 |     pub fn leaf_event(&self) -> Option<Uuid> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn leaf_event(&self) -> Option<Uuid>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:221:5
    |
221 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:250:5
    |
250 | /     pub fn get_events_in_range(
251 | |         &self,
252 | |         start: DateTime<Utc>,
253 | |         end: DateTime<Utc>,
254 | |     ) -> Vec<&TimelineEntry> {
    | |____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
250 ~     #[must_use] pub fn get_events_in_range(
251 +         &self,
252 +         start: DateTime<Utc>,
253 +         end: DateTime<Utc>,
254 ~     ) -> Vec<&TimelineEntry> {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:262:5
    |
262 |     pub fn get_events_matching(&self, pattern: &str) -> Vec<&TimelineEntry> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events_matching(&self, pattern: &str) -> Vec<&TimelineEntry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:270:5
    |
270 |     pub fn get_events_by_component(&self, component: &str) -> Vec<&TimelineEntry> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events_by_component(&self, component: &str) -> Vec<&TimelineEntry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:285:5
    |
285 |     pub fn get_root_causes(&self) -> Vec<&TimelineEntry> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_root_causes(&self) -> Vec<&TimelineEntry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:293:5
    |
293 |     pub fn get_leaf_effects(&self) -> Vec<&TimelineEntry> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_leaf_effects(&self) -> Vec<&TimelineEntry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:301:5
    |
301 |     pub fn find_chain_containing(&self, event_id: Uuid) -> Option<&CausalityChain> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn find_chain_containing(&self, event_id: Uuid) -> Option<&CausalityChain>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:308:5
    |
308 |     pub fn get_longest_chain(&self) -> Option<&CausalityChain> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_longest_chain(&self) -> Option<&CausalityChain>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:350:5
    |
350 |     pub fn new(config: TimelineConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: TimelineConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:355:5
    |
355 |     pub fn with_default_config() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_default_config() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:360:5
    |
360 | /     pub fn build_timeline(
361 | |         &self,
362 | |         tracker: &EventCorrelationTracker,
363 | |         correlation_id: &Uuid,
364 | |     ) -> EventTimeline {
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
360 ~     #[must_use] pub fn build_timeline(
361 +         &self,
362 +         tracker: &EventCorrelationTracker,
363 +         correlation_id: &Uuid,
364 ~     ) -> EventTimeline {
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/timeline.rs:370:5
    |
370 | /     pub fn build_timeline_from_events(
371 | |         &self,
372 | |         mut events: Vec<UniversalEvent>,
373 | |         tracker: &EventCorrelationTracker,
374 | |     ) -> EventTimeline {
    | |______________________^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/timeline.rs:387:26
    |
387 |         let start_time = events.first().unwrap().timestamp;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/timeline.rs:370:5
    |
370 | /     pub fn build_timeline_from_events(
371 | |         &self,
372 | |         mut events: Vec<UniversalEvent>,
373 | |         tracker: &EventCorrelationTracker,
374 | |     ) -> EventTimeline {
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
370 ~     #[must_use] pub fn build_timeline_from_events(
371 +         &self,
372 +         mut events: Vec<UniversalEvent>,
373 +         tracker: &EventCorrelationTracker,
374 ~     ) -> EventTimeline {
    |

warning: this match arm has an identical body to another arm
   --> llmspell-events/src/correlation/timeline.rs:447:21
    |
447 | /                     EventRelationship::ResponseTo => {
448 | |                         if let Some(&request_index) = event_to_index.get(&link.from_event_id) {
449 | |                             updates.push((current_index, link.from_event_id, true)); // Add causing event
450 | |                             updates.push((request_index, entry.event.id, false));
...   |
453 | |                     }
    | |_____________________^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
440 -                     EventRelationship::CausedBy => {
441 -                         if let Some(&causing_index) = event_to_index.get(&link.from_event_id) {
442 -                             updates.push((current_index, link.from_event_id, true)); // Add causing event
443 -                             updates.push((causing_index, entry.event.id, false));
444 -                             // Add caused event
445 -                         }
446 -                     }
447 -                     EventRelationship::ResponseTo => {
440 +                     EventRelationship::ResponseTo | EventRelationship::CausedBy => {
    |

warning: this match arm has an identical body to another arm
   --> llmspell-events/src/correlation/timeline.rs:454:21
    |
454 | /                     EventRelationship::FollowsFrom => {
455 | |                         if let Some(&prev_index) = event_to_index.get(&link.from_event_id) {
456 | |                             updates.push((current_index, link.from_event_id, true)); // Add causing event
457 | |                             updates.push((prev_index, entry.event.id, false)); // Add caused event
458 | |                         }
459 | |                     }
    | |_____________________^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
440 ~                     EventRelationship::ResponseTo => {
441 |                         if let Some(&request_index) = event_to_index.get(&link.from_event_id) {
...
446 |                     }
447 ~                     EventRelationship::FollowsFrom | EventRelationship::CausedBy => {
    |

warning: this match arm has an identical body to another arm
   --> llmspell-events/src/correlation/timeline.rs:447:21
    |
447 | /                     EventRelationship::ResponseTo => {
448 | |                         if let Some(&request_index) = event_to_index.get(&link.from_event_id) {
449 | |                             updates.push((current_index, link.from_event_id, true)); // Add causing event
450 | |                             updates.push((request_index, entry.event.id, false));
...   |
453 | |                     }
    | |_____________________^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
447 ~                     EventRelationship::ResponseTo | EventRelationship::FollowsFrom => {
448 |                         if let Some(&request_index) = event_to_index.get(&link.from_event_id) {
...
453 |                     }
454 ~                     _ => {} // Handle other relationships as needed
    |

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
   --> llmspell-events/src/correlation/timeline.rs:546:22
    |
546 |         for entry in entries.iter() {
    |                      ^^^^^^^^^^^^^^ help: to write this more concisely, try: `entries`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
    = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: unused `self` argument
   --> llmspell-events/src/correlation/timeline.rs:558:9
    |
558 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/mod.rs:34:5
   |
34 |     pub fn new_root() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new_root() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/mod.rs:47:5
   |
47 |     pub fn create_child(&self) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_child(&self) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-events/src/correlation/mod.rs:47:5
   |
47 | /     pub fn create_child(&self) -> Self {
48 | |         Self {
49 | |             correlation_id: Uuid::new_v4(),
50 | |             parent_id: Some(self.correlation_id),
...  |
56 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-events/src/correlation/mod.rs:59:5
   |
59 | /     pub fn with_metadata(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
60 | |         self.metadata.insert(key.into(), value.into());
61 | |         self
62 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-events/src/correlation/mod.rs:65:5
   |
65 | /     pub fn with_tag(mut self, tag: impl Into<String>) -> Self {
66 | |         self.tags.push(tag.into());
67 | |         self
68 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/mod.rs:71:5
   |
71 |     pub fn has_tag(&self, tag: &str) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_tag(&self, tag: &str) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/correlation/mod.rs:76:5
   |
76 |     pub fn get_metadata(&self, key: &str) -> Option<&String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_metadata(&self, key: &str) -> Option<&String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:117:5
    |
117 |     pub fn new(from_event_id: Uuid, to_event_id: Uuid, relationship: EventRelationship) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(from_event_id: Uuid, to_event_id: Uuid, relationship: EventRelationship) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:129:5
    |
129 |     pub fn with_strength(mut self, strength: f64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_strength(mut self, strength: f64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/mod.rs:129:5
    |
129 | /     pub fn with_strength(mut self, strength: f64) -> Self {
130 | |         self.strength = strength.clamp(0.0, 1.0);
131 | |         self
132 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/correlation/mod.rs:135:5
    |
135 | /     pub fn with_metadata(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
136 | |         self.metadata.insert(key.into(), value.into());
137 | |         self
138 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:207:5
    |
207 |     pub fn new(config: CorrelationConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: CorrelationConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:219:5
    |
219 |     pub fn with_default_config() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_default_config() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:224:5
    |
224 |     pub fn track_event(&self, event: UniversalEvent) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:229:36
    |
229 |             let mut correlations = self.correlations.write().unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-events/src/correlation/mod.rs:224:38
    |
224 |     pub fn track_event(&self, event: UniversalEvent) {
    |                                      ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&UniversalEvent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:267:5
    |
267 |     pub fn add_context(&self, context: CorrelationContext) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:268:9
    |
268 | /         self.contexts
269 | |             .write()
270 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:275:5
    |
275 |     pub fn get_context(&self, correlation_id: &Uuid) -> Option<CorrelationContext> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:276:9
    |
276 |         self.contexts.read().unwrap().get(correlation_id).cloned()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:275:5
    |
275 |     pub fn get_context(&self, correlation_id: &Uuid) -> Option<CorrelationContext> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_context(&self, correlation_id: &Uuid) -> Option<CorrelationContext>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:280:5
    |
280 |     pub fn add_link(&self, link: EventLink) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:281:25
    |
281 |         let mut links = self.links.write().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:302:5
    |
302 |     pub fn get_events(&self, correlation_id: &Uuid) -> Vec<UniversalEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:303:9
    |
303 | /         self.correlations
304 | |             .read()
305 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:302:5
    |
302 |     pub fn get_events(&self, correlation_id: &Uuid) -> Vec<UniversalEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events(&self, correlation_id: &Uuid) -> Vec<UniversalEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:312:5
    |
312 |     pub fn get_links(&self, event_id: &Uuid) -> Vec<EventLink> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:313:9
    |
313 | /         self.links
314 | |             .read()
315 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:312:5
    |
312 |     pub fn get_links(&self, event_id: &Uuid) -> Vec<EventLink> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_links(&self, event_id: &Uuid) -> Vec<EventLink>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:322:5
    |
322 |     pub fn get_all_correlations(&self) -> HashMap<Uuid, Vec<UniversalEvent>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:323:9
    |
323 | /         self.correlations
324 | |             .read()
325 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:322:5
    |
322 |     pub fn get_all_correlations(&self) -> HashMap<Uuid, Vec<UniversalEvent>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_all_correlations(&self) -> HashMap<Uuid, Vec<UniversalEvent>>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:332:5
    |
332 |     pub fn get_stats(&self) -> CorrelationStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:333:25
    |
333 |         let mut stats = self.stats.read().unwrap().clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/correlation/mod.rs:332:5
    |
332 |     pub fn get_stats(&self) -> CorrelationStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> CorrelationStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: redundant closure
   --> llmspell-events/src/correlation/mod.rs:342:18
    |
342 |             .map(|v| v.len())
    |                  ^^^^^^^^^^^ help: replace the closure with the method itself: `std::vec::Vec::len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/correlation/mod.rs:356:5
    |
356 |     pub fn clear(&self) {
    |     ^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/correlation/mod.rs:357:9
    |
357 |         self.correlations.write().unwrap().clear();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: unused `self` argument
   --> llmspell-events/src/correlation/mod.rs:393:9
    |
393 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value
   --> llmspell-events/src/correlation/mod.rs:455:39
    |
455 |                     let oldest_time = events.front().map(|e| e.timestamp).unwrap_or(Utc::now());
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`
help: use `map_or(<a>, <f>)` instead
    |
455 -                     let oldest_time = events.front().map(|e| e.timestamp).unwrap_or(Utc::now());
455 +                     let oldest_time = events.front().map_or(Utc::now(), |e| e.timestamp);
    |

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
   --> llmspell-events/src/correlation/mod.rs:465:34
    |
465 |                     for event in events.iter() {
    |                                  ^^^^^^^^^^^^^ help: to write this more concisely, try: `&events`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:160:5
    |
160 |     pub fn new(config: FlowControllerConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: FlowControllerConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:184:5
    |
184 | /     pub fn with_notifications(
185 | |         config: FlowControllerConfig,
186 | |     ) -> (Self, mpsc::UnboundedReceiver<BackpressureNotification>) {
    | |__________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
184 ~     #[must_use] pub fn with_notifications(
185 +         config: FlowControllerConfig,
186 ~     ) -> (Self, mpsc::UnboundedReceiver<BackpressureNotification>) {
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-events/src/flow_controller.rs:194:5
    |
194 |     pub async fn can_process(&self, event: &UniversalEvent) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-events/src/flow_controller.rs:205:37
    |
205 |                         limit_rate: self.config.rate_limit.as_ref().unwrap().max_rate,
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:279:5
    |
279 |     pub fn pop_event(&self) -> Option<UniversalEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn pop_event(&self) -> Option<UniversalEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:301:5
    |
301 |     pub fn buffer_size(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn buffer_size(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:306:5
    |
306 |     pub fn get_stats(&self) -> FlowStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> FlowStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:313:5
    |
313 |     pub fn clear_buffer(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn clear_buffer(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:321:5
    |
321 |     pub fn is_buffer_empty(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_buffer_empty(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:326:5
    |
326 |     pub fn available_tokens(&self) -> Option<f64> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn available_tokens(&self) -> Option<f64>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: redundant closure
   --> llmspell-events/src/flow_controller.rs:330:18
    |
330 |             .map(|bucket| bucket.available_tokens())
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `TokenBucket::available_tokens`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: item in documentation is missing backticks
   --> llmspell-events/src/flow_controller.rs:354:17
    |
354 | /// Builder for FlowController
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
354 - /// Builder for FlowController
354 + /// Builder for `FlowController`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:361:5
    |
361 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:368:5
    |
368 |     pub fn with_rate_limit(mut self, max_rate: f64, burst_capacity: f64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_rate_limit(mut self, max_rate: f64, burst_capacity: f64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/flow_controller.rs:368:5
    |
368 | /     pub fn with_rate_limit(mut self, max_rate: f64, burst_capacity: f64) -> Self {
369 | |         self.config.rate_limit = Some(RateLimit {
370 | |             max_rate,
371 | |             burst_capacity,
372 | |         });
373 | |         self
374 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:377:5
    |
377 |     pub fn without_rate_limit(mut self) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn without_rate_limit(mut self) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/flow_controller.rs:377:5
    |
377 | /     pub fn without_rate_limit(mut self) -> Self {
378 | |         self.config.rate_limit = None;
379 | |         self
380 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:383:5
    |
383 |     pub fn with_overflow_config(mut self, overflow_config: OverflowConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_overflow_config(mut self, overflow_config: OverflowConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/flow_controller.rs:383:5
    |
383 | /     pub fn with_overflow_config(mut self, overflow_config: OverflowConfig) -> Self {
384 | |         self.config.overflow_config = overflow_config;
385 | |         self
386 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:389:5
    |
389 |     pub fn with_notifications(mut self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_notifications(mut self, enable: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/flow_controller.rs:389:5
    |
389 | /     pub fn with_notifications(mut self, enable: bool) -> Self {
390 | |         self.config.enable_notifications = enable;
391 | |         self
392 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:395:5
    |
395 |     pub fn with_stats_interval(mut self, interval: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_stats_interval(mut self, interval: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/flow_controller.rs:395:5
    |
395 | /     pub fn with_stats_interval(mut self, interval: Duration) -> Self {
396 | |         self.config.stats_interval = interval;
397 | |         self
398 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:401:5
    |
401 |     pub fn build(self) -> FlowController {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> FlowController`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/flow_controller.rs:406:5
    |
406 | /     pub fn build_with_notifications(
407 | |         self,
408 | |     ) -> (
409 | |         FlowController,
410 | |         mpsc::UnboundedReceiver<BackpressureNotification>,
411 | |     ) {
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
406 ~     #[must_use] pub fn build_with_notifications(
407 +         self,
408 +     ) -> (
409 +         FlowController,
410 +         mpsc::UnboundedReceiver<BackpressureNotification>,
411 ~     ) {
    |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-events/src/handler.rs:11:5
   |
11 |     fn handle_event(&self, event: UniversalEvent) -> Result<()>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: returning a `str` unnecessarily tied to the lifetime of arguments
  --> llmspell-events/src/handler.rs:14:23
   |
14 |     fn name(&self) -> &str {
   |                       ^^^^ help: try: `&'static str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound
   = note: `-W clippy::unnecessary-literal-bound` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_literal_bound)]`

warning: returning a `str` unnecessarily tied to the lifetime of arguments
  --> llmspell-events/src/handler.rs:26:23
   |
26 |     fn name(&self) -> &str {
   |                       ^^^^ help: try: `&'static str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/metrics.rs:97:5
   |
97 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: used `cloned` where `copied` could be used instead
   --> llmspell-events/src/metrics.rs:192:76
    |
192 |                     let mut sorted_samples: Vec<Duration> = samples.iter().cloned().collect();
    |                                                                            ^^^^^^ help: try: `copied`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cloned_instead_of_copied
    = note: `-W clippy::cloned-instead-of-copied` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cloned_instead_of_copied)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/metrics.rs:279:5
    |
279 |     pub fn get_dashboard_metrics(&self) -> DashboardMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_dashboard_metrics(&self) -> DashboardMetrics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/metrics.rs:301:5
    |
301 |     pub fn get_metrics(&self) -> EventMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_metrics(&self) -> EventMetrics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/overflow.rs:44:5
   |
44 |     pub fn is_success(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_success(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/overflow.rs:49:5
   |
49 |     pub fn should_retry(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn should_retry(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/overflow.rs:126:5
    |
126 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-events/src/overflow.rs:185:21
    |
185 |             reason: format!("Buffer full ({}/{}), event rejected", buffer_size, max_size),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
185 -             reason: format!("Buffer full ({}/{}), event rejected", buffer_size, max_size),
185 +             reason: format!("Buffer full ({buffer_size}/{max_size}), event rejected"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/overflow.rs:199:5
    |
199 |     pub fn create(strategy: OverflowStrategy) -> Box<dyn OverflowHandler> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create(strategy: OverflowStrategy) -> Box<dyn OverflowHandler>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/overflow.rs:235:5
    |
235 |     pub fn new(strategy: OverflowStrategy, max_buffer_size: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(strategy: OverflowStrategy, max_buffer_size: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/overflow.rs:252:5
    |
252 |     pub fn is_high_water(&self, size: usize) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_high_water(&self, size: usize) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/overflow.rs:257:5
    |
257 |     pub fn is_low_water(&self, size: usize) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_low_water(&self, size: usize) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/overflow.rs:262:5
    |
262 |     pub fn is_full(&self, size: usize) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_full(&self, size: usize) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-events/src/pattern.rs:16:5
   |
16 |     pub fn new(pattern: &str) -> Result<Self, String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: redundant closure
  --> llmspell-events/src/pattern.rs:24:18
   |
24 |             .map(|stripped| stripped.to_string());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/pattern.rs:34:5
   |
34 |     pub fn matches(&self, event_type: &str) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn matches(&self, event_type: &str) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/pattern.rs:47:5
   |
47 |     pub fn as_str(&self) -> &str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_str(&self) -> &str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/pattern.rs:58:5
   |
58 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/pattern.rs:63:5
   |
63 |     pub fn matches(&self, event_type: &str, pattern: &str) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn matches(&self, event_type: &str, pattern: &str) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-events/src/serialization.rs:12:5
   |
12 |     pub fn to_json(event: &UniversalEvent) -> Result<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-events/src/serialization.rs:17:5
   |
17 |     pub fn from_json(json: &str) -> Result<UniversalEvent> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-events/src/serialization.rs:22:5
   |
22 |     pub fn to_json_pretty(event: &UniversalEvent) -> Result<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
  --> llmspell-events/src/storage_adapter.rs:58:41
   |
58 | /// Event storage adapter that uses any StorageBackend
   |                                         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
58 - /// Event storage adapter that uses any StorageBackend
58 + /// Event storage adapter that uses any `StorageBackend`
   |

warning: item in documentation is missing backticks
  --> llmspell-events/src/storage_adapter.rs:83:18
   |
83 |     /// Format: "pattern:{pattern}:{event_id}"
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
83 -     /// Format: "pattern:{pattern}:{event_id}"
83 +     /// Format: "`pattern:{pattern}:{event_id`}"
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-events/src/storage_adapter.rs:85:9
   |
85 |         format!("pattern:{}:{}", pattern, event_id)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
85 -         format!("pattern:{}:{}", pattern, event_id)
85 +         format!("pattern:{pattern}:{event_id}")
   |

warning: item in documentation is missing backticks
  --> llmspell-events/src/storage_adapter.rs:89:18
   |
89 |     /// Format: "correlation:{correlation_id}:{event_id}"
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
89 -     /// Format: "correlation:{correlation_id}:{event_id}"
89 +     /// Format: "`correlation:{correlation_id}:{event_id`}"
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-events/src/storage_adapter.rs:91:9
   |
91 |         format!("correlation:{}:{}", correlation_id, event_id)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
91 -         format!("correlation:{}:{}", correlation_id, event_id)
91 +         format!("correlation:{correlation_id}:{event_id}")
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/src/storage_adapter.rs:195:34
    |
195 |         let correlation_prefix = format!("correlation:{}", correlation_id);
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
195 -         let correlation_prefix = format!("correlation:{}", correlation_id);
195 +         let correlation_prefix = format!("correlation:{correlation_id}");
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/storage_adapter.rs:374:5
    |
374 |     pub fn new(storage: EventStorageAdapter<B>, config: PersistenceConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(storage: EventStorageAdapter<B>, config: PersistenceConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/storage_adapter.rs:383:5
    |
383 |     pub async fn start(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/storage_adapter.rs:404:5
    |
404 |     pub async fn maybe_store_event(&self, event: &UniversalEvent) -> Result<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/storage_adapter.rs:424:5
    |
424 |     pub fn storage(&self) -> &EventStorageAdapter<B> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn storage(&self) -> &EventStorageAdapter<B>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-events/src/stream.rs:29:43
   |
29 |     /// Create a new event stream from an EventBus
   |                                           ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
29 -     /// Create a new event stream from an EventBus
29 +     /// Create a new event stream from an `EventBus`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/stream.rs:30:5
   |
30 |     pub fn from_bus(bus: &EventBus) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_bus(bus: &EventBus) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/stream.rs:46:5
   |
46 |     pub fn batched(self, batch_size: usize) -> BatchedEventStream {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn batched(self, batch_size: usize) -> BatchedEventStream`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/stream.rs:175:5
    |
175 |     pub fn new(buffer_size: usize, worker_count: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(buffer_size: usize, worker_count: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/stream.rs:183:5
    |
183 | /     pub async fn process_stream<S, F, Fut>(
184 | |         &self,
185 | |         mut stream: S,
186 | |         processor: F,
...   |
190 | |         F: Fn(UniversalEvent) -> Fut + Send + Sync + Clone + 'static,
191 | |         Fut: std::future::Future<Output = Result<(), String>> + Send + 'static,
    | |_______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/stream.rs:253:5
    |
253 | /     pub fn high_frequency_test_stream(
254 | |         event_count: usize,
255 | |         events_per_second: u64,
256 | |     ) -> Pin<Box<dyn Stream<Item = Result<UniversalEvent, EventStreamError>> + Send>> {
    | |_____________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
253 ~     #[must_use] pub fn high_frequency_test_stream(
254 +         event_count: usize,
255 +         events_per_second: u64,
256 ~     ) -> Pin<Box<dyn Stream<Item = Result<UniversalEvent, EventStreamError>> + Send>> {
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/src/stream.rs:265:21
    |
265 |                     format!("test.high_freq.{}", i),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
265 -                     format!("test.high_freq.{}", i),
265 +                     format!("test.high_freq.{i}"),
    |

warning: matching over `()` is more explicit
   --> llmspell-events/src/stream.rs:297:17
    |
297 |                 _ = &mut timeout => break,
    |                 ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns
    = note: `-W clippy::ignored-unit-patterns` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::ignored_unit_patterns)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-events/src/universal_event.rs:31:5
   |
31 |     pub fn as_str(&self) -> &'static str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_str(&self) -> &'static str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-events/src/universal_event.rs:83:33
   |
83 |     /// Event type/name (e.g., "agent.state_changed")
   |                                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
83 -     /// Event type/name (e.g., "agent.state_changed")
83 +     /// Event type/name (e.g., "`agent.state_changed`")
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:127:5
    |
127 |     pub fn with_correlation_id(mut self, correlation_id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_correlation_id(mut self, correlation_id: Uuid) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:127:5
    |
127 | /     pub fn with_correlation_id(mut self, correlation_id: Uuid) -> Self {
128 | |         self.metadata.correlation_id = correlation_id;
129 | |         self
130 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:133:5
    |
133 | /     pub fn with_source(mut self, source: impl Into<String>) -> Self {
134 | |         self.metadata.source = Some(source.into());
135 | |         self
136 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:139:5
    |
139 | /     pub fn with_target(mut self, target: impl Into<String>) -> Self {
140 | |         self.metadata.target = Some(target.into());
141 | |         self
142 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:145:5
    |
145 | /     pub fn with_tag(mut self, tag: impl Into<String>) -> Self {
146 | |         self.metadata.tags.push(tag.into());
147 | |         self
148 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:151:5
    |
151 |     pub fn with_priority(mut self, priority: i32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_priority(mut self, priority: i32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:151:5
    |
151 | /     pub fn with_priority(mut self, priority: i32) -> Self {
152 | |         self.metadata.priority = priority;
153 | |         self
154 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:157:5
    |
157 |     pub fn with_ttl(mut self, ttl: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_ttl(mut self, ttl: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:157:5
    |
157 | /     pub fn with_ttl(mut self, ttl: u64) -> Self {
158 | |         self.metadata.ttl = Some(ttl);
159 | |         self
160 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:163:5
    |
163 |     pub fn is_expired(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_expired(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:176:5
    |
176 |     pub fn age_seconds(&self) -> i64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn age_seconds(&self) -> i64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/universal_event.rs:183:5
    |
183 |     pub fn to_json(&self) -> Result<String, serde_json::Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/universal_event.rs:188:5
    |
188 |     pub fn from_json(json: &str) -> Result<Self, serde_json::Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:193:5
    |
193 |     pub fn data(&self) -> &Value {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn data(&self) -> &Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-events/src/universal_event.rs:203:5
    |
203 |     pub fn extract_data<T: for<'de> Deserialize<'de>>(&self) -> Result<T, serde_json::Error> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:208:5
    |
208 |     pub fn matches_pattern(&self, pattern: &str) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn matches_pattern(&self, pattern: &str) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-events/src/universal_event.rs:221:17
    |
221 | /// Builder for UniversalEvent
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
221 - /// Builder for UniversalEvent
221 + /// Builder for `UniversalEvent`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:241:5
    |
241 |     pub fn data(mut self, data: Value) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn data(mut self, data: Value) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:241:5
    |
241 | /     pub fn data(mut self, data: Value) -> Self {
242 | |         self.data = data;
243 | |         self
244 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:247:5
    |
247 |     pub fn language(mut self, language: Language) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn language(mut self, language: Language) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:247:5
    |
247 | /     pub fn language(mut self, language: Language) -> Self {
248 | |         self.language = language;
249 | |         self
250 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:253:5
    |
253 |     pub fn correlation_id(mut self, id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn correlation_id(mut self, id: Uuid) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:253:5
    |
253 | /     pub fn correlation_id(mut self, id: Uuid) -> Self {
254 | |         self.metadata.correlation_id = id;
255 | |         self
256 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:259:5
    |
259 | /     pub fn source(mut self, source: impl Into<String>) -> Self {
260 | |         self.metadata.source = Some(source.into());
261 | |         self
262 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:265:5
    |
265 | /     pub fn target(mut self, target: impl Into<String>) -> Self {
266 | |         self.metadata.target = Some(target.into());
267 | |         self
268 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:271:5
    |
271 | /     pub fn tag(mut self, tag: impl Into<String>) -> Self {
272 | |         self.metadata.tags.push(tag.into());
273 | |         self
274 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:277:5
    |
277 |     pub fn priority(mut self, priority: i32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn priority(mut self, priority: i32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:277:5
    |
277 | /     pub fn priority(mut self, priority: i32) -> Self {
278 | |         self.metadata.priority = priority;
279 | |         self
280 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:283:5
    |
283 |     pub fn ttl(mut self, ttl: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn ttl(mut self, ttl: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-events/src/universal_event.rs:283:5
    |
283 | /     pub fn ttl(mut self, ttl: u64) -> Self {
284 | |         self.metadata.ttl = Some(ttl);
285 | |         self
286 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-events/src/universal_event.rs:289:5
    |
289 |     pub fn build(self) -> UniversalEvent {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> UniversalEvent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unused `async` for function with no await statements
   --> llmspell-events/src/bus.rs:142:5
    |
142 | /     pub async fn subscribe(
143 | |         &self,
144 | |         pattern: &str,
145 | |     ) -> Result<mpsc::UnboundedReceiver<UniversalEvent>, SubscribeError> {
...   |
162 | |         Ok(rx)
163 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
   --> llmspell-events/src/bus.rs:196:5
    |
196 | /     async fn route_event(&self, event: UniversalEvent) {
197 | |         let mut matched_count = 0;
198 | |
199 | |         for subscription_entry in self.subscriptions.iter() {
...   |
222 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-events/src/flow_controller.rs:194:5
    |
194 | /     pub async fn can_process(&self, event: &UniversalEvent) -> bool {
195 | |         let mut bucket_guard = self.token_bucket.write();
196 | |         if let Some(bucket) = bucket_guard.as_mut() {
197 | |             let can_process = bucket.try_consume(1.0);
...   |
216 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-events/src/storage_adapter.rs:383:5
    |
383 | /     pub async fn start(&mut self) -> Result<()> {
384 | |         if !self.config.enabled {
385 | |             return Ok(());
...   |
392 | |         Ok(())
393 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: strict comparison of `f32` or `f64`
   --> llmspell-events/src/correlation/mod.rs:526:9
    |
526 |         assert_eq!(links[0].strength, 0.9);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: variables can be used directly in the `format!` string
   --> llmspell-events/src/correlation/mod.rs:544:37
    |
544 |                 UniversalEvent::new(format!("test.event.{}", i), Value::Null, Language::Rust);
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
544 -                 UniversalEvent::new(format!("test.event.{}", i), Value::Null, Language::Rust);
544 +                 UniversalEvent::new(format!("test.event.{i}"), Value::Null, Language::Rust);
    |

warning: `llmspell-events` (lib) generated 237 warnings (run `cargo clippy --fix --lib -p llmspell-events` to apply 155 suggestions)
    Checking llmspell-hooks v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-hooks)
warning: variables can be used directly in the `format!` string
   --> llmspell-events/src/overflow.rs:185:21
    |
185 |             reason: format!("Buffer full ({}/{}), event rejected", buffer_size, max_size),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
185 -             reason: format!("Buffer full ({}/{}), event rejected", buffer_size, max_size),
185 +             reason: format!("Buffer full ({buffer_size}/{max_size}), event rejected"),
    |

warning: single-character string constant used as pattern
  --> llmspell-events/src/serialization.rs:52:38
   |
52 |         assert!(pretty_json.contains("\n")); // Should have formatting
   |                                      ^^^^ help: consider using a `char`: `'\n'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-events/src/stream.rs:392:62
    |
392 |         let events = (0..1000).map(|i| Ok(create_test_event(&format!("test.{}", i))));
    |                                                              ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
392 -         let events = (0..1000).map(|i| Ok(create_test_event(&format!("test.{}", i))));
392 +         let events = (0..1000).map(|i| Ok(create_test_event(&format!("test.{i}"))));
    |

warning: `llmspell-events` (lib test) generated 246 warnings (236 duplicates) (run `cargo clippy --fix --lib -p llmspell-events --tests` to apply 4 suggestions)
warning: binding's name is too similar to existing binding
   --> llmspell-events/tests/high_frequency_stress.rs:552:9
    |
552 |     let received = receiver.recv().await.unwrap();
    |         ^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-events/tests/high_frequency_stress.rs:540:13
    |
540 |     let mut receiver = bus.subscribe("integration.*").await.unwrap();
    |             ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: variables can be used directly in the `format!` string
  --> llmspell-events/tests/high_frequency_stress.rs:19:13
   |
19 |             format!("stress.test.{}", seq),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
19 -             format!("stress.test.{}", seq),
19 +             format!("stress.test.{seq}"),
   |

warning: matching over `()` is more explicit
  --> llmspell-events/tests/high_frequency_stress.rs:59:20
   |
59 |                 Ok(_) => successful_publishes += 1,
   |                    ^ help: use `()` instead of `_`: `()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns
   = note: `-W clippy::ignored-unit-patterns` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::ignored_unit_patterns)]`

warning: variables can be used directly in the `format!` string
  --> llmspell-events/tests/high_frequency_stress.rs:61:24
   |
61 |                     if format!("{:?}", e).contains("RateLimited") {
   |                        ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
61 -                     if format!("{:?}", e).contains("RateLimited") {
61 +                     if format!("{e:?}").contains("RateLimited") {
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-events/tests/high_frequency_stress.rs:66:25
   |
66 |                         eprintln!("Failed to publish event {}: {:?}", i, e);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
66 -                         eprintln!("Failed to publish event {}: {:?}", i, e);
66 +                         eprintln!("Failed to publish event {i}: {e:?}");
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:97:9
    |
97  | /         println!(
98  | |             "Received {} events ({:.0} EPS)",
99  | |             final_received, receive_rate
100 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:105:9
    |
105 | /         println!(
106 | |             "  Successful publishes: {}/{}",
107 | |             successful_publishes, target_events
108 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:109:9
    |
109 |         println!("  Rate limited: {}", rate_limited_count);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
109 -         println!("  Rate limited: {}", rate_limited_count);
109 +         println!("  Rate limited: {rate_limited_count}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:112:9
    |
112 | /         assert!(
113 | |             successful_publishes >= target_events * 50 / 100,
114 | |             "Should successfully publish at least 50% of events, got {}/{}",
115 | |             successful_publishes,
116 | |             target_events
117 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:118:9
    |
118 | /         assert!(
119 | |             final_received >= successful_publishes * 80 / 100,
120 | |             "Should receive at least 80% of successfully published events, got {}/{}",
121 | |             final_received,
122 | |             successful_publishes
123 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:161:25
    |
161 |                         format!("concurrent.publisher_{}.event_{}", publisher_id, event_id),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
161 -                         format!("concurrent.publisher_{}.event_{}", publisher_id, event_id),
161 +                         format!("concurrent.publisher_{publisher_id}.event_{event_id}"),
    |

warning: matching over `()` is more explicit
   --> llmspell-events/tests/high_frequency_stress.rs:171:28
    |
171 |                         Ok(_) => {}
    |                            ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:172:35
    |
172 |                         Err(e) if format!("{:?}", e).contains("RateLimited") => {
    |                                   ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
172 -                         Err(e) if format!("{:?}", e).contains("RateLimited") => {
172 +                         Err(e) if format!("{e:?}").contains("RateLimited") => {
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:177:29
    |
177 | / ...                   eprintln!(
178 | | ...                       "Publisher {} failed at event {}: {:?}",
179 | | ...                       publisher_id, event_id, e
180 | | ...                   );
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:231:9
    |
231 | /         assert!(
232 | |             overall_eps >= 2_000.0,
233 | |             "Should achieve at least 2K EPS with concurrent publishers (rate limited), got {:.0}",
234 | |             overall_eps
235 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:238:9
    |
238 | /         assert!(
239 | |             final_received >= total_events_u64 * 30 / 100,
240 | |             "Should receive at least 30% of events from concurrent publishers (rate limited), got {}/{}",
241 | |             final_received, total_events_u64
242 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:275:21
    |
275 |                     format!("memory.wave_{}.event_{}", wave, i),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
275 -                     format!("memory.wave_{}.event_{}", wave, i),
275 +                     format!("memory.wave_{wave}.event_{i}"),
    |

warning: matching over `()` is more explicit
   --> llmspell-events/tests/high_frequency_stress.rs:286:24
    |
286 |                     Ok(_) => {}
    |                        ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:287:31
    |
287 |                     Err(e) if format!("{:?}", e).contains("RateLimited") => {
    |                               ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
287 -                     Err(e) if format!("{:?}", e).contains("RateLimited") => {
287 +                     Err(e) if format!("{e:?}").contains("RateLimited") => {
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:291:31
    |
291 |                     Err(e) => panic!("Unexpected error in memory stability test: {:?}", e),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
291 -                     Err(e) => panic!("Unexpected error in memory stability test: {:?}", e),
291 +                     Err(e) => panic!("Unexpected error in memory stability test: {e:?}"),
    |

warning: casts from `i32` to `f64` can be expressed infallibly using `From`
   --> llmspell-events/tests/high_frequency_stress.rs:297:39
    |
297 |             let events_per_wave_f64 = events_per_wave as f64;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `f64::from` instead
    |
297 -             let events_per_wave_f64 = events_per_wave as f64;
297 +             let events_per_wave_f64 = f64::from(events_per_wave);
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:336:9
    |
336 |         println!("  Events published: {}", total_events);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
336 -         println!("  Events published: {}", total_events);
336 +         println!("  Events published: {total_events}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:337:9
    |
337 |         println!("  Events received: {}", final_received);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
337 -         println!("  Events received: {}", final_received);
337 +         println!("  Events received: {final_received}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:343:9
    |
343 | /         assert!(
344 | |             final_received >= total_events_u64 * 50 / 100,
345 | |             "Should process at least 50% of events under memory pressure, got {}/{}",
346 | |             final_received,
347 | |             total_events_u64
348 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: calling `OverflowConfig::default()` is more clear than this expression
   --> llmspell-events/tests/high_frequency_stress.rs:364:30
    |
364 |             overflow_config: Default::default(),
    |                              ^^^^^^^^^^^^^^^^^^ help: try: `OverflowConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: matching over `()` is more explicit
   --> llmspell-events/tests/high_frequency_stress.rs:393:20
    |
393 |                 Ok(_) => successful_publishes += 1,
    |                    ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:414:9
    |
414 |         println!("  Successful publishes: {}", successful_publishes);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
414 -         println!("  Successful publishes: {}", successful_publishes);
414 +         println!("  Successful publishes: {successful_publishes}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:415:9
    |
415 |         println!("  Failed publishes: {}", failed_publishes);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
415 -         println!("  Failed publishes: {}", failed_publishes);
415 +         println!("  Failed publishes: {failed_publishes}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:416:9
    |
416 |         println!("  Events received: {}", final_received);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
416 -         println!("  Events received: {}", final_received);
416 +         println!("  Events received: {final_received}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:440:9
    |
440 | /         assert!(
441 | |             final_received > 0 || successful_publishes > 0,
442 | |             "Should have processed some events or successful publishes, received: {}, published: {}",
443 | |             final_received, successful_publishes
444 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:495:9
    |
495 |         println!("  Events processed: {}", final_processed);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
495 -         println!("  Events processed: {}", final_processed);
495 +         println!("  Events processed: {final_processed}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:497:9
    |
497 |         println!("  Processing EPS: {:.0}", processing_eps);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
497 -         println!("  Processing EPS: {:.0}", processing_eps);
497 +         println!("  Processing EPS: {processing_eps:.0}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:505:9
    |
505 | /         assert!(
506 | |             processing_eps >= 200.0,
507 | |             "High-throughput processor should handle at least 200 EPS with processing, got {:.0}",
508 | |             processing_eps
509 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-events/tests/high_frequency_stress.rs:510:9
    |
510 | /         assert!(
511 | |             final_processed >= 2_000,
512 | |             "Should process at least 2K events through high-throughput pipeline, got {}",
513 | |             final_processed
514 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: calling `FlowControllerConfig::default()` is more clear than this expression
   --> llmspell-events/tests/high_frequency_stress.rs:537:42
    |
537 |     let bus = EventBus::with_persistence(Default::default(), storage_adapter, persistence_config);
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `FlowControllerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: `llmspell-events` (test "high_frequency_stress") generated 35 warnings (run `cargo clippy --fix --test "high_frequency_stress"` to apply 32 suggestions)
warning: long literal lacking separators
   --> llmspell-hooks/src/builtin/cost_tracking.rs:152:34
    |
152 |                 max_tokens: Some(200000),
    |                                  ^^^^^^ help: consider: `200_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
    = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
   --> llmspell-hooks/src/builtin/cost_tracking.rs:161:34
    |
161 |                 max_tokens: Some(200000),
    |                                  ^^^^^^ help: consider: `200_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: binding's name is too similar to existing binding
   --> llmspell-hooks/src/collectors/agent_output.rs:136:13
    |
136 |         let content = if let Some(text) = content_value.as_str() {
    |             ^^^^^^^
    |
note: existing binding defined here
   --> llmspell-hooks/src/collectors/agent_output.rs:119:43
    |
119 |     async fn extract_artifact_data(&self, context: &HookContext) -> Result<ArtifactData> {
    |                                           ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: binding's name is too similar to existing binding
   --> llmspell-hooks/src/collectors/tool_result.rs:138:13
    |
138 |         let content = if let Some(result) = &operation.result {
    |             ^^^^^^^
    |
note: existing binding defined here
   --> llmspell-hooks/src/collectors/tool_result.rs:125:43
    |
125 |     async fn extract_artifact_data(&self, context: &HookContext) -> Result<ArtifactData> {
    |                                           ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: long literal lacking separators
  --> llmspell-hooks/src/persistence/retention.rs:75:29
   |
75 |             max_count: Some(100000),
   |                             ^^^^^^ help: consider: `100_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: binding's name is too similar to existing binding
   --> llmspell-hooks/src/replay/scheduler.rs:206:13
    |
206 |         let scheduled = scheduler.scheduled.clone();
    |             ^^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-hooks/src/replay/scheduler.rs:198:13
    |
198 |         let scheduler = Self {
    |             ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: item in documentation is missing backticks
 --> llmspell-hooks/src/lib.rs:4:7
  |
4 | //! # LLMSpell Hooks
  |       ^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
4 - //! # LLMSpell Hooks
4 + //! # `LLMSpell` Hooks
  |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/lib.rs:12:44
   |
12 | //! - **Performance Protection**: Built-in CircuitBreaker prevents slow hooks
   |                                            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
12 - //! - **Performance Protection**: Built-in CircuitBreaker prevents slow hooks
12 + //! - **Performance Protection**: Built-in `CircuitBreaker` prevents slow hooks
   |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/artifact_hooks.rs:45:27
   |
45 |     /// Convert string to HookPoint
   |                           ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
45 -     /// Convert string to HookPoint
45 +     /// Convert string to `HookPoint`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/artifact_hooks.rs:46:5
   |
46 |     pub fn to_hook_point(s: &str) -> HookPoint {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_hook_point(s: &str) -> HookPoint`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this function could have a `#[must_use]` attribute
  --> llmspell-hooks/src/artifact_hooks.rs:52:1
   |
52 | pub fn event_to_hook_point(event: &ArtifactEvent) -> HookPoint {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn event_to_hook_point(event: &ArtifactEvent) -> HookPoint`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
  --> llmspell-hooks/src/artifact_hooks.rs:90:1
   |
90 | pub fn get_artifact_from_context(context: &crate::context::HookContext) -> Option<ArtifactId> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_artifact_from_context(context: &crate::context::HookContext) -> Option<ArtifactId>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
  --> llmspell-hooks/src/artifact_hooks.rs:98:1
   |
98 | pub fn is_artifact_hook_point(point: &HookPoint) -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_artifact_hook_point(point: &HookPoint) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/builtin/caching.rs:94:5
   |
94 |     pub fn hit_ratio(&self) -> f64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn hit_ratio(&self) -> f64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:106:5
    |
106 |     pub fn cache_efficiency(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn cache_efficiency(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:129:5
    |
129 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:151:5
    |
151 |     pub fn with_config(config: CachingConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: CachingConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:172:5
    |
172 |     pub fn with_strategy(mut self, strategy: CachingStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_strategy(mut self, strategy: CachingStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/caching.rs:172:5
    |
172 | /     pub fn with_strategy(mut self, strategy: CachingStrategy) -> Self {
173 | |         self.config.strategy = strategy;
174 | |         self
175 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
    = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:178:5
    |
178 |     pub fn with_ttl(mut self, ttl: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_ttl(mut self, ttl: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/caching.rs:178:5
    |
178 | /     pub fn with_ttl(mut self, ttl: Duration) -> Self {
179 | |         self.config.default_ttl = ttl;
180 | |         self
181 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:184:5
    |
184 |     pub fn with_max_entries(mut self, max_entries: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_entries(mut self, max_entries: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/caching.rs:184:5
    |
184 | /     pub fn with_max_entries(mut self, max_entries: usize) -> Self {
185 | |         self.config.max_entries = max_entries;
186 | |         self
187 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:190:5
    |
190 |     pub fn with_error_caching(mut self, cache_errors: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_error_caching(mut self, cache_errors: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/caching.rs:190:5
    |
190 | /     pub fn with_error_caching(mut self, cache_errors: bool) -> Self {
191 | |         self.config.cache_errors = cache_errors;
192 | |         self
193 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:196:5
    |
196 |     pub fn with_min_execution_time(mut self, min_time: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_min_execution_time(mut self, min_time: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/caching.rs:196:5
    |
196 | /     pub fn with_min_execution_time(mut self, min_time: Duration) -> Self {
197 | |         self.config.min_execution_time = min_time;
198 | |         self
199 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:202:5
    |
202 |     pub fn cache(&self) -> Arc<Cache> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn cache(&self) -> Arc<Cache>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:207:5
    |
207 |     pub fn cache_stats(&self) -> CacheStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn cache_stats(&self) -> CacheStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/caching.rs:212:5
    |
212 |     pub fn metrics(&self) -> CachingMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/caching.rs:213:9
    |
213 |         self.metrics.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/caching.rs:212:5
    |
212 |     pub fn metrics(&self) -> CachingMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn metrics(&self) -> CachingMetrics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function's return value is unnecessary
   --> llmspell-hooks/src/builtin/caching.rs:300:5
    |
300 | /     fn try_cache_result(
301 | |         &self,
302 | |         context: &HookContext,
303 | |         result: &HookResult,
...   |
369 | |         Ok(())
370 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove the return type...
    |
305 -     ) -> Result<()> {
305 +     ) -> () {
    |
help: ...and then remove returned values
    |
307 ~             return ;
308 |         }
309 |
310 |         if !self.should_cache_result(result) {
311 ~             return ;
312 |         }
313 |
314 |         if !self.should_cache_by_execution_time(execution_time) {
315 ~             return ;
316 |         }
...
319 |         if result.is_cancelled() && !self.config.cache_errors {
320 ~             return ;
321 |         }
...
368 |
369 ~         
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/caching.rs:365:17
    |
365 |                 log::warn!("Failed to cache result: {}", e);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
365 -                 log::warn!("Failed to cache result: {}", e);
365 +                 log::warn!("Failed to cache result: {e}");
    |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/builtin/cost_tracking.rs:27:24
   |
27 |     /// Provider name (OpenAI, Anthropic, etc.)
   |                        ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
27 -     /// Provider name (OpenAI, Anthropic, etc.)
27 +     /// Provider name (`OpenAI`, Anthropic, etc.)
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:221:5
    |
221 |     pub fn average_cost_per_request(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn average_cost_per_request(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:231:5
    |
231 |     pub fn average_tokens_per_request(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn average_tokens_per_request(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:341:5
    |
341 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/cost_tracking.rs:346:5
    |
346 |     pub fn with_config(mut config: CostTrackingConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/cost_tracking.rs:350:29
    |
350 |             .sort_by(|a, b| a.threshold.partial_cmp(&b.threshold).unwrap());
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:346:5
    |
346 |     pub fn with_config(mut config: CostTrackingConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(mut config: CostTrackingConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:372:5
    |
372 |     pub fn with_provider_pricing(mut self, provider: String, pricing: ProviderPricing) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_provider_pricing(mut self, provider: String, pricing: ProviderPricing) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/cost_tracking.rs:372:5
    |
372 | /     pub fn with_provider_pricing(mut self, provider: String, pricing: ProviderPricing) -> Self {
373 | |         self.config.providers.insert(provider, pricing);
374 | |         self
375 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/cost_tracking.rs:378:5
    |
378 |     pub fn with_budget_alert(mut self, alert: BudgetAlert) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/cost_tracking.rs:383:29
    |
383 |             .sort_by(|a, b| a.threshold.partial_cmp(&b.threshold).unwrap());
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:378:5
    |
378 |     pub fn with_budget_alert(mut self, alert: BudgetAlert) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_budget_alert(mut self, alert: BudgetAlert) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/cost_tracking.rs:378:5
    |
378 | /     pub fn with_budget_alert(mut self, alert: BudgetAlert) -> Self {
379 | |         self.config.budget_alerts.push(alert);
380 | |         // Keep alerts sorted by threshold
381 | |         self.config
...   |
384 | |         self
385 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/cost_tracking.rs:388:5
    |
388 |     pub fn metrics(&self) -> CostTrackingMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/cost_tracking.rs:389:9
    |
389 |         self.metrics.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:388:5
    |
388 |     pub fn metrics(&self) -> CostTrackingMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn metrics(&self) -> CostTrackingMetrics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/cost_tracking.rs:393:5
    |
393 |     pub fn reset_metrics(&self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/cost_tracking.rs:394:27
    |
394 |         let mut metrics = self.metrics.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:399:5
    |
399 |     pub fn total_cost(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn total_cost(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:404:5
    |
404 |     pub fn component_cost(&self, component_id: &ComponentId) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn component_cost(&self, component_id: &ComponentId) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/cost_tracking.rs:409:5
    |
409 |     pub fn user_cost(&self, user_id: &str) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn user_cost(&self, user_id: &str) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/cost_tracking.rs:536:21
    |
536 |                     log::debug!("CostTrackingHook: Failed to parse token usage: {}", e);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
536 -                     log::debug!("CostTrackingHook: Failed to parse token usage: {}", e);
536 +                     log::debug!("CostTrackingHook: Failed to parse token usage: {e}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/cost_tracking.rs:549:17
    |
549 |                 log::warn!("CostTrackingHook: Failed to calculate cost: {}", e);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
549 -                 log::warn!("CostTrackingHook: Failed to calculate cost: {}", e);
549 +                 log::warn!("CostTrackingHook: Failed to calculate cost: {e}");
    |

warning: more than 3 bools in a struct
  --> llmspell-hooks/src/builtin/debugging.rs:32:1
   |
32 | / pub struct DebuggingConfig {
33 | |     /// Whether to capture stack traces
34 | |     pub capture_stack_traces: bool,
35 | |     /// Whether to include full context data
...  |
44 | |     pub min_duration_ms: u64,
45 | | }
   | |_^
   |
   = help: consider using a state machine or refactoring bools into two-variant enums
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
   = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/builtin/debugging.rs:68:5
   |
68 |     pub fn new(config: DebuggingConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: DebuggingConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-hooks/src/builtin/debugging.rs:76:5
   |
76 |     pub fn add_trace(&self, trace: DebugTrace) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-hooks/src/builtin/debugging.rs:77:26
   |
77 |         let mut traces = self.traces.write().unwrap();
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-hooks/src/builtin/debugging.rs:76:36
   |
76 |     pub fn add_trace(&self, trace: DebugTrace) {
   |                                    ^^^^^^^^^^ help: consider taking a reference instead: `&DebugTrace`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
   = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/debugging.rs:108:5
    |
108 |     pub fn get_traces(&self) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/debugging.rs:109:9
    |
109 |         self.traces.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:108:5
    |
108 |     pub fn get_traces(&self) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_traces(&self) -> Vec<DebugTrace>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/debugging.rs:113:5
    |
113 |     pub fn get_traces_for_hook_point(&self, hook_point: &HookPoint) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/debugging.rs:114:9
    |
114 | /         self.traces
115 | |             .read()
116 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:113:5
    |
113 |     pub fn get_traces_for_hook_point(&self, hook_point: &HookPoint) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_traces_for_hook_point(&self, hook_point: &HookPoint) -> Vec<DebugTrace>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/debugging.rs:124:5
    |
124 |     pub fn get_traces_for_component(&self, component_name: &str) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/debugging.rs:125:9
    |
125 | /         self.traces
126 | |             .read()
127 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:124:5
    |
124 |     pub fn get_traces_for_component(&self, component_name: &str) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_traces_for_component(&self, component_name: &str) -> Vec<DebugTrace>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/debugging.rs:135:5
    |
135 |     pub fn get_traces_in_range(&self, start: DateTime<Utc>, end: DateTime<Utc>) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/debugging.rs:136:9
    |
136 | /         self.traces
137 | |             .read()
138 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:135:5
    |
135 |     pub fn get_traces_in_range(&self, start: DateTime<Utc>, end: DateTime<Utc>) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_traces_in_range(&self, start: DateTime<Utc>, end: DateTime<Utc>) -> Vec<DebugTrace>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/debugging.rs:146:5
    |
146 |     pub fn clear_traces(&self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/debugging.rs:147:9
    |
147 |         self.traces.write().unwrap().clear();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/debugging.rs:151:5
    |
151 |     pub fn get_statistics(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/debugging.rs:152:22
    |
152 |         let traces = self.traces.read().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:151:5
    |
151 |     pub fn get_statistics(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> HashMap<String, serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:266:5
    |
266 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:282:5
    |
282 |     pub fn with_config(config: DebuggingConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: DebuggingConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:298:5
    |
298 |     pub fn with_stack_traces(self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_stack_traces(self, enable: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/debugging.rs:298:5
    |
298 | /     pub fn with_stack_traces(self, enable: bool) -> Self {
299 | |         let mut config = self.storage.config.clone();
300 | |         config.capture_stack_traces = enable;
301 | |         Self {
...   |
306 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:309:5
    |
309 |     pub fn with_min_duration_ms(self, min_duration_ms: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_min_duration_ms(self, min_duration_ms: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/debugging.rs:309:5
    |
309 | /     pub fn with_min_duration_ms(self, min_duration_ms: u64) -> Self {
310 | |         let mut config = self.storage.config.clone();
311 | |         config.min_duration_ms = min_duration_ms;
312 | |         Self {
...   |
317 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:320:5
    |
320 |     pub fn storage(&self) -> Arc<TraceStorage> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn storage(&self) -> Arc<TraceStorage>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:325:5
    |
325 |     pub fn get_traces(&self) -> Vec<DebugTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_traces(&self) -> Vec<DebugTrace>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/debugging.rs:330:5
    |
330 |     pub fn get_statistics(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> HashMap<String, serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/builtin/logging.rs:68:5
   |
68 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/builtin/logging.rs:84:5
   |
84 |     pub fn with_config(config: LoggingConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: LoggingConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/builtin/logging.rs:99:5
   |
99 |     pub fn with_level(mut self, level: LogLevel) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_level(mut self, level: LogLevel) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/logging.rs:99:5
    |
99  | /     pub fn with_level(mut self, level: LogLevel) -> Self {
100 | |         self.config.level = level;
101 | |         self
102 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/logging.rs:105:5
    |
105 |     pub fn with_context_data(mut self, include: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_context_data(mut self, include: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/logging.rs:105:5
    |
105 | /     pub fn with_context_data(mut self, include: bool) -> Self {
106 | |         self.config.include_context_data = include;
107 | |         self
108 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/logging.rs:111:5
    |
111 |     pub fn with_performance_logging(mut self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_performance_logging(mut self, enable: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/logging.rs:111:5
    |
111 | /     pub fn with_performance_logging(mut self, enable: bool) -> Self {
112 | |         self.config.log_performance = enable;
113 | |         self
114 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/logging.rs:117:5
    |
117 |     pub fn with_max_data_size(mut self, size: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_data_size(mut self, size: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/logging.rs:117:5
    |
117 | /     pub fn with_max_data_size(mut self, size: usize) -> Self {
118 | |         self.config.max_data_size = size;
119 | |         self
120 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/logging.rs:184:13
    |
184 | /             format!(
185 | |                 "{}, data={}, metadata={}",
186 | |                 base_message, context_data, metadata
187 | |             )
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/logging.rs:194:32
    |
194 |             LogLevel::Trace => trace!("{}", detailed_message),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
194 -             LogLevel::Trace => trace!("{}", detailed_message),
194 +             LogLevel::Trace => trace!("{detailed_message}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/logging.rs:195:32
    |
195 |             LogLevel::Debug => debug!("{}", detailed_message),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
195 -             LogLevel::Debug => debug!("{}", detailed_message),
195 +             LogLevel::Debug => debug!("{detailed_message}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/logging.rs:196:31
    |
196 |             LogLevel::Info => info!("{}", detailed_message),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
196 -             LogLevel::Info => info!("{}", detailed_message),
196 +             LogLevel::Info => info!("{detailed_message}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/logging.rs:197:31
    |
197 |             LogLevel::Warn => warn!("{}", detailed_message),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
197 -             LogLevel::Warn => warn!("{}", detailed_message),
197 +             LogLevel::Warn => warn!("{detailed_message}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/logging.rs:198:32
    |
198 |             LogLevel::Error => error!("{}", detailed_message),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
198 -             LogLevel::Error => error!("{}", detailed_message),
198 +             LogLevel::Error => error!("{detailed_message}"),
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/builtin/metrics.rs:40:5
   |
40 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:115:5
    |
115 |     pub fn mean(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn mean(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:125:5
    |
125 |     pub fn percentile(&self, p: f64) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn percentile(&self, p: f64) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/builtin/metrics.rs:151:29
    |
151 | /// Metrics storage for the MetricsHook
    |                             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
151 - /// Metrics storage for the MetricsHook
151 + /// Metrics storage for the `MetricsHook`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:167:5
    |
167 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/metrics.rs:172:5
    |
172 |     pub fn record_execution(&self, hook_point: &HookPoint, duration: Duration, success: bool) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/metrics.rs:175:30
    |
175 |             let mut counts = self.execution_counts.write().unwrap();
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/metrics.rs:197:5
    |
197 |     pub fn record_custom_metric(&self, name: String, value: f64, labels: HashMap<String, String>) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/metrics.rs:204:27
    |
204 |         let mut metrics = self.custom_metrics.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/metrics.rs:209:5
    |
209 |     pub fn get_execution_count(&self, hook_point: &HookPoint) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/metrics.rs:210:9
    |
210 | /         self.execution_counts
211 | |             .read()
212 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:209:5
    |
209 |     pub fn get_execution_count(&self, hook_point: &HookPoint) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_execution_count(&self, hook_point: &HookPoint) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/metrics.rs:219:5
    |
219 |     pub fn get_duration_histogram(&self, hook_point: &HookPoint) -> Option<Histogram> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/metrics.rs:220:9
    |
220 | /         self.duration_histograms
221 | |             .read()
222 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:219:5
    |
219 |     pub fn get_duration_histogram(&self, hook_point: &HookPoint) -> Option<Histogram> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_duration_histogram(&self, hook_point: &HookPoint) -> Option<Histogram>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/metrics.rs:228:5
    |
228 |     pub fn get_success_rate(&self, hook_point: &HookPoint) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/metrics.rs:229:29
    |
229 |           let success_count = self
    |  _____________________________^
230 | |             .success_counts
231 | |             .read()
232 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:228:5
    |
228 |     pub fn get_success_rate(&self, hook_point: &HookPoint) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_success_rate(&self, hook_point: &HookPoint) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/metrics.rs:258:5
    |
258 |     pub fn get_summary(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/metrics.rs:263:26
    |
263 |             let counts = self.execution_counts.read().unwrap();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:258:5
    |
258 |     pub fn get_summary(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_summary(&self) -> HashMap<String, serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/metrics.rs:267:21
    |
267 |                     format!("{:?}", point),
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
267 -                     format!("{:?}", point),
267 +                     format!("{point:?}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/metrics.rs:285:21
    |
285 |                     format!("{:?}", point),
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
285 -                     format!("{:?}", point),
285 +                     format!("{point:?}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/metrics.rs:334:39
    |
334 |                 duration_stats.insert(format!("{:?}", point), serde_json::Value::Object(stats));
    |                                       ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
334 -                 duration_stats.insert(format!("{:?}", point), serde_json::Value::Object(stats));
334 +                 duration_stats.insert(format!("{point:?}"), serde_json::Value::Object(stats));
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:355:5
    |
355 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:371:5
    |
371 |     pub fn with_storage(storage: Arc<MetricsStorage>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_storage(storage: Arc<MetricsStorage>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:387:5
    |
387 |     pub fn with_custom_metrics(mut self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_custom_metrics(mut self, enable: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/metrics.rs:387:5
    |
387 | /     pub fn with_custom_metrics(mut self, enable: bool) -> Self {
388 | |         self.collect_custom_metrics = enable;
389 | |         self
390 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:393:5
    |
393 |     pub fn storage(&self) -> Arc<MetricsStorage> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn storage(&self) -> Arc<MetricsStorage>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/metrics.rs:398:5
    |
398 |     pub fn get_summary(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_summary(&self) -> HashMap<String, serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/builtin/rate_limit.rs:25:39
   |
25 |     /// Per-user rate limit (requires user_id in context)
   |                                       ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
25 -     /// Per-user rate limit (requires user_id in context)
25 +     /// Per-user rate limit (requires `user_id` in context)
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:100:5
    |
100 |     pub fn allowed_ratio(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn allowed_ratio(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:110:5
    |
110 |     pub fn rate_limited_ratio(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn rate_limited_ratio(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:132:5
    |
132 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:155:5
    |
155 |     pub fn with_config(config: RateLimitConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: RateLimitConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:177:5
    |
177 |     pub fn with_strategy(mut self, strategy: RateLimitStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_strategy(mut self, strategy: RateLimitStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/rate_limit.rs:177:5
    |
177 | /     pub fn with_strategy(mut self, strategy: RateLimitStrategy) -> Self {
178 | |         self.config.strategy = strategy;
179 | |         self
180 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:183:5
    |
183 |     pub fn with_bucket_config(mut self, bucket_config: TokenBucketConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_bucket_config(mut self, bucket_config: TokenBucketConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/rate_limit.rs:183:5
    |
183 | /     pub fn with_bucket_config(mut self, bucket_config: TokenBucketConfig) -> Self {
184 | |         self.config.bucket_config = bucket_config.clone();
185 | |         self.rate_limiter = Arc::new(RateLimiter::new(bucket_config));
186 | |         self
187 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:190:5
    |
190 |     pub fn with_rate_per_second(mut self, rate: f64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_rate_per_second(mut self, rate: f64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/rate_limit.rs:190:5
    |
190 | /     pub fn with_rate_per_second(mut self, rate: f64) -> Self {
191 | |         #[allow(clippy::cast_possible_truncation, clippy::cast_sign_loss)]
192 | |         let capacity = rate as usize;
193 | |         self.config.bucket_config.capacity = capacity;
...   |
197 | |         self
198 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:201:5
    |
201 |     pub fn with_burst(mut self, burst_size: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_burst(mut self, burst_size: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/rate_limit.rs:201:5
    |
201 | /     pub fn with_burst(mut self, burst_size: usize) -> Self {
202 | |         self.config.bucket_config.burst_capacity = burst_size;
203 | |         self.config.allow_burst = true;
204 | |         self.rate_limiter = Arc::new(RateLimiter::new(self.config.bucket_config.clone()));
205 | |         self
206 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:209:5
    |
209 |     pub fn with_custom_limit(mut self, key: String, config: TokenBucketConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_custom_limit(mut self, key: String, config: TokenBucketConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/rate_limit.rs:209:5
    |
209 | /     pub fn with_custom_limit(mut self, key: String, config: TokenBucketConfig) -> Self {
210 | |         self.config.custom_limits.insert(key, config);
211 | |         self
212 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:215:5
    |
215 |     pub fn with_rate_limited_action(mut self, action: RateLimitAction) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_rate_limited_action(mut self, action: RateLimitAction) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/rate_limit.rs:215:5
    |
215 | /     pub fn with_rate_limited_action(mut self, action: RateLimitAction) -> Self {
216 | |         self.config.rate_limited_action = action;
217 | |         self
218 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/rate_limit.rs:221:5
    |
221 |     pub fn metrics(&self) -> RateLimitMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/rate_limit.rs:222:9
    |
222 |         self.metrics.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/rate_limit.rs:221:5
    |
221 |     pub fn metrics(&self) -> RateLimitMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn metrics(&self) -> RateLimitMetrics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/rate_limit.rs:226:5
    |
226 |     pub fn reset_metrics(&self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/rate_limit.rs:227:27
    |
227 |         let mut metrics = self.metrics.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this function has too many lines (106/100)
   --> llmspell-hooks/src/builtin/rate_limit.rs:335:5
    |
335 | /     async fn execute(&self, context: &mut HookContext) -> Result<HookResult> {
336 | |         let key = self.generate_key(context);
...   |
477 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/rate_limit.rs:405:13
    |
405 | /             log::debug!(
406 | |                 "RateLimitHook: Allowed request for key '{}', {} tokens remaining",
407 | |                 key,
408 | |                 tokens_remaining
409 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:124:5
    |
124 |     pub fn retry_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn retry_rate(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:134:5
    |
134 |     pub fn success_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_rate(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:164:5
    |
164 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:169:5
    |
169 |     pub fn with_config(config: RetryConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: RetryConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:190:5
    |
190 |     pub fn with_max_attempts(mut self, max_attempts: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_attempts(mut self, max_attempts: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/retry.rs:190:5
    |
190 | /     pub fn with_max_attempts(mut self, max_attempts: u32) -> Self {
191 | |         self.config.max_attempts = max_attempts;
192 | |         self
193 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:196:5
    |
196 |     pub fn with_backoff_strategy(mut self, strategy: BackoffStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_backoff_strategy(mut self, strategy: BackoffStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/retry.rs:196:5
    |
196 | /     pub fn with_backoff_strategy(mut self, strategy: BackoffStrategy) -> Self {
197 | |         self.config.backoff_strategy = strategy;
198 | |         self
199 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:202:5
    |
202 |     pub fn with_jitter_strategy(mut self, strategy: JitterStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_jitter_strategy(mut self, strategy: JitterStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/retry.rs:202:5
    |
202 | /     pub fn with_jitter_strategy(mut self, strategy: JitterStrategy) -> Self {
203 | |         self.config.jitter_strategy = strategy;
204 | |         self
205 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:208:5
    |
208 |     pub fn with_retryable_error(mut self, pattern: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_retryable_error(mut self, pattern: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/retry.rs:208:5
    |
208 | /     pub fn with_retryable_error(mut self, pattern: String) -> Self {
209 | |         self.config.retryable_errors.insert(pattern);
210 | |         self
211 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:214:5
    |
214 |     pub fn with_non_retryable_error(mut self, pattern: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_non_retryable_error(mut self, pattern: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/retry.rs:214:5
    |
214 | /     pub fn with_non_retryable_error(mut self, pattern: String) -> Self {
215 | |         self.config.non_retryable_errors.insert(pattern);
216 | |         self
217 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/retry.rs:220:5
    |
220 |     pub fn metrics(&self) -> RetryMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/retry.rs:221:9
    |
221 |         self.metrics.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/retry.rs:220:5
    |
220 |     pub fn metrics(&self) -> RetryMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn metrics(&self) -> RetryMetrics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/retry.rs:225:5
    |
225 |     pub fn reset_metrics(&self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/retry.rs:226:27
    |
226 |         let mut metrics = self.metrics.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-hooks/src/builtin/retry.rs:274:42
    |
274 |                 let delay_ms = delay.min(max.as_millis() as f64) as u64;
    |                                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: unused `self` argument
   --> llmspell-hooks/src/builtin/retry.rs:317:18
    |
317 |     fn fibonacci(&self, n: u32) -> u64 {
    |                  ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: this match arm has an identical body to another arm
   --> llmspell-hooks/src/builtin/retry.rs:320:13
    |
320 |             1 => 1,
    |             ^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
319 -             0 => 1,
320 -             1 => 1,
319 +             1 | 0 => 1,
    |

warning: unused `self` argument
   --> llmspell-hooks/src/builtin/retry.rs:335:27
    |
335 |     fn generate_retry_key(&self, context: &HookContext) -> String {
    |                           ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/retry.rs:382:13
    |
382 |             log::debug!("RetryHook: Error '{}' is not retryable", error);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
382 -             log::debug!("RetryHook: Error '{}' is not retryable", error);
382 +             log::debug!("RetryHook: Error '{error}' is not retryable");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/retry.rs:433:17
    |
433 |                 log::warn!("RetryHook: Max retry duration exceeded for {}", retry_key);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
433 -                 log::warn!("RetryHook: Max retry duration exceeded for {}", retry_key);
433 +                 log::warn!("RetryHook: Max retry duration exceeded for {retry_key}");
    |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/builtin/security.rs:55:48
   |
55 |             SecurityEventType::Custom(name) => write!(f, "CUSTOM:{}", name),
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
55 -             SecurityEventType::Custom(name) => write!(f, "CUSTOM:{}", name),
55 +             SecurityEventType::Custom(name) => write!(f, "CUSTOM:{name}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/builtin/security.rs:56:18
   |
56 |             _ => write!(f, "{:?}", self),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
56 -             _ => write!(f, "{:?}", self),
56 +             _ => write!(f, "{self:?}"),
   |

warning: more than 3 bools in a struct
   --> llmspell-hooks/src/builtin/security.rs:104:1
    |
104 | / pub struct SecurityConfig {
105 | |     /// Whether to enable audit logging
106 | |     pub enable_audit_logging: bool,
107 | |     /// Whether to enable parameter validation
...   |
120 | |     pub max_parameter_length: usize,
121 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:156:5
    |
156 |     pub fn new(config: SecurityConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: SecurityConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:215:5
    |
215 |     pub fn add_event(&self, event: SecurityEvent) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:221:26
    |
221 |         let mut events = self.events.write().unwrap();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:215:5
    |
215 |     pub fn add_event(&self, event: SecurityEvent) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_event(&self, event: SecurityEvent) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/builtin/security.rs:215:36
    |
215 |     pub fn add_event(&self, event: SecurityEvent) -> bool {
    |                                    ^^^^^^^^^^^^^ help: consider taking a reference instead: `&SecurityEvent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:245:5
    |
245 |     pub fn add_rule(&self, rule: SecurityRule) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:246:25
    |
246 |         let mut rules = self.rules.write().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:251:5
    |
251 |     pub fn get_events(&self) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:252:9
    |
252 |         self.events.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:251:5
    |
251 |     pub fn get_events(&self) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events(&self) -> Vec<SecurityEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:256:5
    |
256 |     pub fn get_events_by_severity(&self, min_severity: SecuritySeverity) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:257:9
    |
257 | /         self.events
258 | |             .read()
259 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:256:5
    |
256 |     pub fn get_events_by_severity(&self, min_severity: SecuritySeverity) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events_by_severity(&self, min_severity: SecuritySeverity) -> Vec<SecurityEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:267:5
    |
267 |     pub fn get_events_by_type(&self, event_type: &SecurityEventType) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:268:9
    |
268 | /         self.events
269 | |             .read()
270 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:267:5
    |
267 |     pub fn get_events_by_type(&self, event_type: &SecurityEventType) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events_by_type(&self, event_type: &SecurityEventType) -> Vec<SecurityEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:278:5
    |
278 |     pub fn get_rules_for_hook_point(&self, hook_point: &HookPoint) -> Vec<SecurityRule> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:279:9
    |
279 | /         self.rules
280 | |             .read()
281 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:278:5
    |
278 |     pub fn get_rules_for_hook_point(&self, hook_point: &HookPoint) -> Vec<SecurityRule> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_rules_for_hook_point(&self, hook_point: &HookPoint) -> Vec<SecurityRule>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:289:5
    |
289 |     pub fn get_statistics(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:290:22
    |
290 |         let events = self.events.read().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:289:5
    |
289 |     pub fn get_statistics(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> HashMap<String, serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/builtin/security.rs:340:5
    |
340 |     pub fn clear_events(&self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/builtin/security.rs:341:9
    |
341 |         self.events.write().unwrap().clear();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:353:5
    |
353 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:370:5
    |
370 |     pub fn with_config(config: SecurityConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: SecurityConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:387:5
    |
387 |     pub fn with_audit_logging(self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_audit_logging(self, enable: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/security.rs:387:5
    |
387 | /     pub fn with_audit_logging(self, enable: bool) -> Self {
388 | |         let mut config = self.storage.config.clone();
389 | |         config.enable_audit_logging = enable;
390 | |         Self {
...   |
394 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:397:5
    |
397 |     pub fn with_min_severity(self, severity: SecuritySeverity) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_min_severity(self, severity: SecuritySeverity) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/security.rs:397:5
    |
397 | /     pub fn with_min_severity(self, severity: SecuritySeverity) -> Self {
398 | |         let mut config = self.storage.config.clone();
399 | |         config.min_severity = severity;
400 | |         Self {
...   |
404 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:407:5
    |
407 |     pub fn with_blocking(self, enable: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_blocking(self, enable: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/builtin/security.rs:407:5
    |
407 | /     pub fn with_blocking(self, enable: bool) -> Self {
408 | |         let mut config = self.storage.config.clone();
409 | |         config.block_on_violations = enable;
410 | |         Self {
...   |
414 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:417:5
    |
417 |     pub fn storage(&self) -> Arc<SecurityStorage> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn storage(&self) -> Arc<SecurityStorage>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:422:5
    |
422 |     pub fn get_events(&self) -> Vec<SecurityEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_events(&self) -> Vec<SecurityEvent>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/builtin/security.rs:427:5
    |
427 |     pub fn get_statistics(&self) -> HashMap<String, serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> HashMap<String, serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:457:66
    |
457 |                     user_id: context.get_metadata("user_id").map(|s| s.to_string()),
    |                                                                  ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:458:72
    |
458 |                     session_id: context.get_metadata("session_id").map(|s| s.to_string()),
    |                                                                        ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:459:70
    |
459 |                     source_ip: context.get_metadata("source_ip").map(|s| s.to_string()),
    |                                                                      ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:499:66
    |
499 |                     user_id: context.get_metadata("user_id").map(|s| s.to_string()),
    |                                                                  ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:500:72
    |
500 |                     session_id: context.get_metadata("session_id").map(|s| s.to_string()),
    |                                                                        ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:501:70
    |
501 |                     source_ip: context.get_metadata("source_ip").map(|s| s.to_string()),
    |                                                                      ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/builtin/security.rs:502:34
    |
502 |                     description: format!("Access to sensitive parameter '{}'", key),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
502 -                     description: format!("Access to sensitive parameter '{}'", key),
502 +                     description: format!("Access to sensitive parameter '{key}'"),
    |

warning: unused `self` argument
   --> llmspell-hooks/src/builtin/security.rs:524:27
    |
524 |     fn create_audit_event(&self, context: &HookContext) -> SecurityEvent {
    |                           ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:534:58
    |
534 |             user_id: context.get_metadata("user_id").map(|s| s.to_string()),
    |                                                          ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:535:64
    |
535 |             session_id: context.get_metadata("session_id").map(|s| s.to_string()),
    |                                                                ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:536:62
    |
536 |             source_ip: context.get_metadata("source_ip").map(|s| s.to_string()),
    |                                                              ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:615:58
    |
615 |             user_id: context.get_metadata("user_id").map(|s| s.to_string()),
    |                                                          ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:616:64
    |
616 |             session_id: context.get_metadata("session_id").map(|s| s.to_string()),
    |                                                                ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:617:62
    |
617 |             source_ip: context.get_metadata("source_ip").map(|s| s.to_string()),
    |                                                              ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: casting `u128` to `u64` may truncate the value
   --> llmspell-hooks/src/builtin/security.rs:637:39
    |
637 |             serde_json::Value::Number((duration.as_millis() as u64).into()),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
637 -             serde_json::Value::Number((duration.as_millis() as u64).into()),
637 +             serde_json::Value::Number(u64::try_from(duration.as_millis()).into()),
    |

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:657:58
    |
657 |             user_id: context.get_metadata("user_id").map(|s| s.to_string()),
    |                                                          ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:658:64
    |
658 |             session_id: context.get_metadata("session_id").map(|s| s.to_string()),
    |                                                                ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-hooks/src/builtin/security.rs:659:62
    |
659 |             source_ip: context.get_metadata("source_ip").map(|s| s.to_string()),
    |                                                              ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/cache/ttl.rs:84:45
   |
84 |     /// Additional TTL to add on access (if extend_on_access is true)
   |                                             ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
84 -     /// Additional TTL to add on access (if extend_on_access is true)
84 +     /// Additional TTL to add on access (if `extend_on_access` is true)
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:115:5
    |
115 |     pub fn hit_ratio(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn hit_ratio(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:127:5
    |
127 |     pub fn miss_ratio(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn miss_ratio(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:155:5
    |
155 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:160:5
    |
160 |     pub fn with_config(config: TtlCacheConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: TtlCacheConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:170:5
    |
170 |     pub fn get(&self, key: &K) -> Option<V> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:171:25
    |
171 |         let mut stats = self.stats.write().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:215:5
    |
215 |     pub fn put_with_ttl(&self, key: K, value: V, ttl: Duration) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:216:27
    |
216 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:246:5
    |
246 |     pub fn remove(&self, key: &K) -> Option<V> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:247:27
    |
247 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:259:5
    |
259 |     pub fn contains_key(&self, key: &K) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:260:27
    |
260 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:278:5
    |
278 |     pub fn len(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:279:9
    |
279 |         self.entries.read().unwrap().len()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:278:5
    |
278 |     pub fn len(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn len(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:283:5
    |
283 |     pub fn is_empty(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:284:9
    |
284 |         self.entries.read().unwrap().is_empty()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:283:5
    |
283 |     pub fn is_empty(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_empty(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:288:5
    |
288 |     pub fn clear(&self) {
    |     ^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:289:27
    |
289 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:297:5
    |
297 |     pub fn stats(&self) -> TtlCacheStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:298:9
    |
298 |         self.stats.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:297:5
    |
297 |     pub fn stats(&self) -> TtlCacheStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn stats(&self) -> TtlCacheStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:302:5
    |
302 |     pub fn cleanup_expired(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:303:27
    |
303 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:302:5
    |
302 |     pub fn cleanup_expired(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn cleanup_expired(&self) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/ttl.rs:308:5
    |
308 |     pub fn keys(&self) -> Vec<K> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/ttl.rs:309:27
    |
309 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/ttl.rs:308:5
    |
308 |     pub fn keys(&self) -> Vec<K> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn keys(&self) -> Vec<K>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/cache/mod.rs:29:5
   |
29 |     pub fn from_context(context: &HookContext) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_context(context: &HookContext) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/cache/mod.rs:55:5
   |
55 |     pub fn as_cache_key(&self) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_cache_key(&self) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/cache/mod.rs:75:5
   |
75 |     pub fn new(key: CacheKey, result: HookResult, ttl: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(key: CacheKey, result: HookResult, ttl: Duration) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/cache/mod.rs:88:5
   |
88 |     pub fn is_expired(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_expired(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:110:5
    |
110 |     pub fn new(max_entries: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(max_entries: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:118:5
    |
118 |     pub fn record_access(&self, key: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:119:25
    |
119 |         let mut queue = self.access_order.write().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:131:5
    |
131 |     pub fn get_eviction_candidates(&self, current_size: usize) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:136:21
    |
136 |         let queue = self.access_order.read().unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:131:5
    |
131 |     pub fn get_eviction_candidates(&self, current_size: usize) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_eviction_candidates(&self, current_size: usize) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:144:5
    |
144 |     pub fn remove_key(&self, key: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:145:25
    |
145 |         let mut queue = self.access_order.write().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:165:5
    |
165 |     pub fn hit_ratio(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn hit_ratio(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:177:5
    |
177 |     pub fn miss_ratio(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn miss_ratio(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:201:5
    |
201 |     pub fn new(max_entries: usize, default_ttl: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(max_entries: usize, default_ttl: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:216:5
    |
216 |     pub fn get(&self, key: &CacheKey) -> Option<HookResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:221:29
    |
221 |             let mut stats = self.stats.write().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:216:5
    |
216 |     pub fn get(&self, key: &CacheKey) -> Option<HookResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, key: &CacheKey) -> Option<HookResult>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:261:5
    |
261 |     pub fn put(&self, key: CacheKey, result: HookResult, ttl: Option<Duration>) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:266:27
    |
266 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/cache/mod.rs:261:5
    |
261 |     pub fn put(&self, key: CacheKey, result: HookResult, ttl: Option<Duration>) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:295:5
    |
295 |     pub fn remove(&self, key: &CacheKey) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:297:27
    |
297 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:295:5
    |
295 |     pub fn remove(&self, key: &CacheKey) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn remove(&self, key: &CacheKey) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:310:5
    |
310 |     pub fn clear(&self) {
    |     ^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:311:27
    |
311 |         let mut entries = self.entries.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:324:5
    |
324 |     pub fn stats(&self) -> CacheStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:325:9
    |
325 |         self.stats.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:324:5
    |
324 |     pub fn stats(&self) -> CacheStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn stats(&self) -> CacheStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:329:5
    |
329 |     pub fn size(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:330:9
    |
330 |         self.entries.read().unwrap().len()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:329:5
    |
329 |     pub fn size(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn size(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/cache/mod.rs:334:5
    |
334 |     pub fn is_empty(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/cache/mod.rs:335:9
    |
335 |         self.entries.read().unwrap().is_empty()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/cache/mod.rs:334:5
    |
334 |     pub fn is_empty(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_empty(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/circuit_breaker.rs:59:5
   |
59 |     pub fn builder() -> BreakerConfigBuilder {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> BreakerConfigBuilder`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/circuit_breaker.rs:64:5
   |
64 |     pub fn production_optimized() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn production_optimized() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/circuit_breaker.rs:76:5
   |
76 |     pub fn conservative() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn conservative() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/circuit_breaker.rs:96:5
   |
96 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:103:5
    |
103 |     pub fn production_optimized() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn production_optimized() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:110:5
    |
110 |     pub fn conservative() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn conservative() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:159:5
    |
159 |     pub fn build(self) -> BreakerConfig {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> BreakerConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:204:5
    |
204 |     pub fn new(name: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:209:5
    |
209 |     pub fn with_config(name: String, config: BreakerConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(name: String, config: BreakerConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:219:5
    |
219 |     pub fn state(&self) -> BreakerState {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn state(&self) -> BreakerState`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:224:5
    |
224 |     pub fn can_execute(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn can_execute(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-hooks/src/circuit_breaker.rs:239:13
    |
239 |             BreakerState::HalfOpen => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
228 ~             BreakerState::Open => {
229 |                 // Check if we should transition to half-open
...
237 |             }
238 ~             BreakerState::HalfOpen | BreakerState::Closed => true,
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:323:5
    |
323 |     pub fn stats(&self) -> CircuitBreakerStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn stats(&self) -> CircuitBreakerStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:362:5
    |
362 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:367:5
    |
367 |     pub fn with_config(default_config: BreakerConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(default_config: BreakerConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:375:5
    |
375 |     pub fn get_or_create(&self, name: &str) -> Arc<CircuitBreaker> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_or_create(&self, name: &str) -> Arc<CircuitBreaker>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:388:5
    |
388 |     pub fn create_custom(&self, name: &str, config: BreakerConfig) -> Arc<CircuitBreaker> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_custom(&self, name: &str, config: BreakerConfig) -> Arc<CircuitBreaker>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/circuit_breaker.rs:395:5
    |
395 |     pub fn all_stats(&self) -> Vec<(String, CircuitBreakerStats)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn all_stats(&self) -> Vec<(String, CircuitBreakerStats)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/collectors/agent_output.rs:17:5
   |
17 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/collectors/agent_output.rs:21:5
   |
21 |     pub fn with_config(config: CollectionConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: CollectionConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/collectors/agent_output.rs:167:13
    |
167 |             format!("{}_error_{}.{}", agent_name, timestamp, extension)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
167 -             format!("{}_error_{}.{}", agent_name, timestamp, extension)
167 +             format!("{agent_name}_error_{timestamp}.{extension}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/collectors/agent_output.rs:169:13
    |
169 |             format!("{}_output_{}.{}", agent_name, timestamp, extension)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
169 -             format!("{}_output_{}.{}", agent_name, timestamp, extension)
169 +             format!("{agent_name}_output_{timestamp}.{extension}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/collectors/agent_output.rs:205:23
    |
205 |             tags.push(format!("model:{}", model));
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
205 -             tags.push(format!("model:{}", model));
205 +             tags.push(format!("model:{model}"));
    |

warning: returning a `str` unnecessarily tied to the lifetime of arguments
   --> llmspell-hooks/src/collectors/agent_output.rs:217:32
    |
217 |     fn artifact_type(&self) -> &str {
    |                                ^^^^ help: try: `&'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound
    = note: `-W clippy::unnecessary-literal-bound` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_literal_bound)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/collectors/tool_result.rs:17:5
   |
17 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/collectors/tool_result.rs:21:5
   |
21 |     pub fn with_config(config: CollectionConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: CollectionConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/collectors/tool_result.rs:165:13
    |
165 |             format!("{}_error_{}.json", tool_name, timestamp)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
165 -             format!("{}_error_{}.json", tool_name, timestamp)
165 +             format!("{tool_name}_error_{timestamp}.json")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/collectors/tool_result.rs:167:13
    |
167 |             format!("{}_result_{}.json", tool_name, timestamp)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
167 -             format!("{}_result_{}.json", tool_name, timestamp)
167 +             format!("{tool_name}_result_{timestamp}.json")
    |

warning: returning a `str` unnecessarily tied to the lifetime of arguments
   --> llmspell-hooks/src/collectors/tool_result.rs:197:32
    |
197 |     fn artifact_type(&self) -> &str {
    |                                ^^^^ help: try: `&'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound

warning: this function could have a `#[must_use]` attribute
  --> llmspell-hooks/src/collectors/mod.rs:75:1
   |
75 | pub fn is_size_acceptable(size: usize, config: &CollectionConfig) -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_size_acceptable(size: usize, config: &CollectionConfig) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
  --> llmspell-hooks/src/collectors/mod.rs:80:1
   |
80 | pub fn should_sample(config: &CollectionConfig) -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn should_sample(config: &CollectionConfig) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-hooks/src/collectors/mod.rs:89:5
   |
89 |     use rand::Rng;
   |     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
   = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/context.rs:54:5
   |
54 |     pub fn new(point: HookPoint, component_id: ComponentId) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(point: HookPoint, component_id: ComponentId) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/context.rs:69:5
   |
69 |     pub fn with_language(mut self, language: Language) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_language(mut self, language: Language) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/context.rs:69:5
   |
69 | /     pub fn with_language(mut self, language: Language) -> Self {
70 | |         self.language = language;
71 | |         self
72 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/context.rs:75:5
   |
75 |     pub fn with_correlation_id(mut self, id: Uuid) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_correlation_id(mut self, id: Uuid) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/context.rs:75:5
   |
75 | /     pub fn with_correlation_id(mut self, id: Uuid) -> Self {
76 | |         self.correlation_id = id;
77 | |         self
78 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/context.rs:81:5
   |
81 |     pub fn with_operation(mut self, operation: OperationContext) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_operation(mut self, operation: OperationContext) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/context.rs:81:5
   |
81 | /     pub fn with_operation(mut self, operation: OperationContext) -> Self {
82 | |         self.operation = Some(operation);
83 | |         self
84 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/context.rs:87:5
   |
87 |     pub fn child(&self, point: HookPoint) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn child(&self, point: HookPoint) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/context.rs:87:5
   |
87 | /     pub fn child(&self, point: HookPoint) -> Self {
88 | |         let mut child = Self::new(point, self.component_id.clone());
89 | |         child.correlation_id = self.correlation_id;
90 | |         child.language = self.language;
91 | |         child.parent_context = Some(Box::new(self.clone()));
92 | |         child
93 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:101:5
    |
101 |     pub fn get_data(&self, key: &str) -> Option<&JsonValue> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_data(&self, key: &str) -> Option<&JsonValue>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:111:5
    |
111 |     pub fn get_metadata(&self, key: &str) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_metadata(&self, key: &str) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: redundant closure
   --> llmspell-hooks/src/context.rs:112:36
    |
112 |         self.metadata.get(key).map(|s| s.as_str())
    |                                    ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:116:5
    |
116 |     pub fn is_error(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_error(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:127:5
    |
127 |     pub fn error_message(&self) -> Option<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn error_message(&self) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:136:5
    |
136 |     pub fn operation_parameters(&self) -> Option<&JsonValue> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn operation_parameters(&self) -> Option<&JsonValue>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:148:5
    |
148 |     pub fn operation_result(&self) -> Option<&JsonValue> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn operation_result(&self) -> Option<&JsonValue>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/context.rs:164:26
    |
164 | /// Builder for creating HookContext with fluent API
    |                          ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
164 - /// Builder for creating HookContext with fluent API
164 + /// Builder for creating `HookContext` with fluent API
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:170:5
    |
170 |     pub fn new(point: HookPoint, component_id: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(point: HookPoint, component_id: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:176:5
    |
176 |     pub fn language(mut self, language: Language) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn language(mut self, language: Language) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/context.rs:176:5
    |
176 | /     pub fn language(mut self, language: Language) -> Self {
177 | |         self.context.language = language;
178 | |         self
179 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:181:5
    |
181 |     pub fn correlation_id(mut self, id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn correlation_id(mut self, id: Uuid) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/context.rs:181:5
    |
181 | /     pub fn correlation_id(mut self, id: Uuid) -> Self {
182 | |         self.context.correlation_id = id;
183 | |         self
184 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:186:5
    |
186 |     pub fn data(mut self, key: String, value: JsonValue) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn data(mut self, key: String, value: JsonValue) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/context.rs:186:5
    |
186 | /     pub fn data(mut self, key: String, value: JsonValue) -> Self {
187 | |         self.context.data.insert(key, value);
188 | |         self
189 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:191:5
    |
191 |     pub fn metadata(mut self, key: String, value: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn metadata(mut self, key: String, value: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/context.rs:191:5
    |
191 | /     pub fn metadata(mut self, key: String, value: String) -> Self {
192 | |         self.context.metadata.insert(key, value);
193 | |         self
194 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:196:5
    |
196 |     pub fn operation(mut self, operation: OperationContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn operation(mut self, operation: OperationContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/context.rs:196:5
    |
196 | /     pub fn operation(mut self, operation: OperationContext) -> Self {
197 | |         self.context.operation = Some(operation);
198 | |         self
199 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:201:5
    |
201 |     pub fn parent(mut self, parent: HookContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parent(mut self, parent: HookContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/context.rs:201:5
    |
201 | /     pub fn parent(mut self, parent: HookContext) -> Self {
202 | |         self.context.parent_context = Some(Box::new(parent));
203 | |         self
204 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/context.rs:206:5
    |
206 |     pub fn build(self) -> HookContext {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> HookContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/coordination/dependency_graph.rs:118:17
    |
118 |                 write!(f, "Circular dependency detected: {:?}", cycle)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
118 -                 write!(f, "Circular dependency detected: {:?}", cycle)
118 +                 write!(f, "Circular dependency detected: {cycle:?}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/coordination/dependency_graph.rs:123:18
    |
123 |               } => write!(
    |  __________________^
124 | |                 f,
125 | |                 "Component {:?} depends on missing component {:?}",
126 | |                 component, missing_dependency
127 | |             ),
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/coordination/dependency_graph.rs:129:17
    |
129 | /                 write!(
130 | |                     f,
131 | |                     "Invalid dependency from {:?} to {:?}: {}",
132 | |                     from, to, reason
133 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/dependency_graph.rs:143:5
    |
143 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:152:5
    |
152 |     pub fn add_node(&mut self, node: DependencyNode) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:175:5
    |
175 | /     pub fn add_dependency(
176 | |         &mut self,
177 | |         component: &ComponentId,
178 | |         depends_on: &ComponentId,
179 | |         hook_point: HookPoint,
180 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:188:5
    |
188 | /     pub fn add_dependency_with_options(
189 | |         &mut self,
190 | |         component: &ComponentId,
191 | |         depends_on: &ComponentId,
...   |
194 | |         reason: Option<String>,
195 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/coordination/dependency_graph.rs:192:21
    |
192 |         hook_point: HookPoint,
    |                     ^^^^^^^^^ help: consider taking a reference instead: `&HookPoint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:249:5
    |
249 | /     pub fn remove_dependency(
250 | |         &mut self,
251 | |         component: &ComponentId,
252 | |         depends_on: &ComponentId,
253 | |         hook_point: HookPoint,
254 | |     ) -> Result<bool> {
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/coordination/dependency_graph.rs:253:21
    |
253 |         hook_point: HookPoint,
    |                     ^^^^^^^^^ help: consider taking a reference instead: `&HookPoint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:280:5
    |
280 |     pub fn get_execution_order(&self) -> Result<ExecutionOrder> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:285:5
    |
285 |     pub fn get_execution_order_for_hook(&self, hook_point: HookPoint) -> Result<ExecutionOrder> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/coordination/dependency_graph.rs:285:60
    |
285 |     pub fn get_execution_order_for_hook(&self, hook_point: HookPoint) -> Result<ExecutionOrder> {
    |                                                            ^^^^^^^^^ help: consider taking a reference instead: `&HookPoint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/dependency_graph.rs:331:5
    |
331 |     pub fn detect_cycles(&self) -> Result<(), DependencyError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/dependency_graph.rs:480:5
    |
480 |     pub fn new(component_id: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(component_id: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/dependency_graph.rs:490:5
    |
490 |     pub fn add_hook_point(mut self, hook_point: HookPoint) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_hook_point(mut self, hook_point: HookPoint) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/coordination/dependency_graph.rs:490:5
    |
490 | /     pub fn add_hook_point(mut self, hook_point: HookPoint) -> Self {
491 | |         self.hook_points.insert(hook_point);
492 | |         self
493 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/dependency_graph.rs:496:5
    |
496 |     pub fn with_priority(mut self, priority: i32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_priority(mut self, priority: i32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/coordination/dependency_graph.rs:496:5
    |
496 | /     pub fn with_priority(mut self, priority: i32) -> Self {
497 | |         self.priority = priority;
498 | |         self
499 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/coordination/dependency_graph.rs:502:5
    |
502 | /     pub fn with_metadata(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
503 | |         self.metadata.insert(key.into(), value.into());
504 | |         self
505 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/coordination/event_correlation.rs:61:5
   |
61 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/coordination/event_correlation.rs:66:5
   |
66 |     pub fn from_uuid(uuid: Uuid) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_uuid(uuid: Uuid) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/coordination/event_correlation.rs:71:5
   |
71 |     pub fn as_uuid(&self) -> Uuid {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_uuid(&self) -> Uuid`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/coordination/event_correlation.rs:76:5
   |
76 |     pub fn create_child(&self) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_child(&self) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/coordination/event_correlation.rs:76:5
   |
76 | /     pub fn create_child(&self) -> Self {
77 | |         // Simply create a new UUID for child - they should be unique
78 | |         Self::new()
79 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/event_correlation.rs:225:5
    |
225 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/event_correlation.rs:230:5
    |
230 |     pub fn with_config(config: CorrelatorConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: CorrelatorConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:269:5
    |
269 | /     pub async fn start_chain_trace(
270 | |         &self,
271 | |         correlation_id: CorrelationId,
272 | |         components: Vec<ComponentId>,
273 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-hooks/src/coordination/event_correlation.rs:280:9
    |
280 |         trace.components = components.clone();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `trace.components.clone_from(&components)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones
    = note: `-W clippy::assigning-clones` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::assigning_clones)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:298:5
    |
298 | /     pub async fn record_event(
299 | |         &self,
300 | |         correlation_id: &CorrelationId,
301 | |         component_id: &ComponentId,
302 | |         hook_point: HookPoint,
303 | |         message: impl Into<String>,
304 | |     ) -> Result<Uuid> {
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:319:5
    |
319 | /     pub async fn record_event_with_details(
320 | |         &self,
321 | |         correlation_id: &CorrelationId,
322 | |         component_id: &ComponentId,
...   |
327 | |         data: HashMap<String, serde_json::Value>,
328 | |     ) -> Result<Uuid> {
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:403:5
    |
403 |     pub async fn complete_trace(&self, correlation_id: &CorrelationId) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:423:5
    |
423 | /     pub async fn fail_trace(
424 | |         &self,
425 | |         correlation_id: &CorrelationId,
426 | |         error: impl Into<String>,
427 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:449:5
    |
449 |     pub async fn get_trace(&self, correlation_id: &CorrelationId) -> Result<EventTrace> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/event_correlation.rs:478:5
    |
478 | /     pub async fn analyze_trace_performance(
479 | |         &self,
480 | |         correlation_id: &CorrelationId,
481 | |     ) -> Result<TraceAnalysis> {
    | |______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/mod.rs:179:5
    |
179 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/mod.rs:184:5
    |
184 |     pub fn with_config(config: CoordinatorConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: CoordinatorConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/mod.rs:195:5
    |
195 | /     pub async fn register_chain(
196 | |         &self,
197 | |         name: impl Into<String>,
198 | |         mut chain: ExecutionChain,
199 | |     ) -> Result<Uuid> {
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-hooks/src/coordination/mod.rs:201:9
    |
201 |         chain.name = name.clone();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `chain.name.clone_from(&name)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/mod.rs:225:5
    |
225 | /     pub async fn start_chain_execution(
226 | |         &self,
227 | |         chain_name: &str,
228 | |         _initial_context: HookContext,
229 | |     ) -> Result<CorrelationId> {
    | |______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/mod.rs:268:5
    |
268 | /     pub async fn execute_next_component(
269 | |         &self,
270 | |         correlation_id: &CorrelationId,
271 | |         hook_context: HookContext,
272 | |     ) -> Result<(HookResult, Option<CrossComponentContext>)> {
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/coordination/mod.rs:302:5
    |
302 |     pub async fn cleanup_chain(&self, chain_name: &str) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/mod.rs:318:5
    |
318 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/mod.rs:330:5
    |
330 |     pub fn add_component(mut self, component_id: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_component(mut self, component_id: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/coordination/mod.rs:330:5
    |
330 | /     pub fn add_component(mut self, component_id: ComponentId) -> Self {
331 | |         self.components.push(component_id);
332 | |         self
333 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/coordination/mod.rs:336:5
    |
336 | /     pub fn with_name(mut self, name: impl Into<String>) -> Self {
337 | |         self.name = name.into();
338 | |         self
339 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/coordination/mod.rs:342:5
    |
342 | /     pub fn with_metadata(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
343 | |         self.metadata.insert(key.into(), value.into());
344 | |         self
345 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/mod.rs:348:5
    |
348 |     pub fn get_next_component(&self, current_index: usize) -> Option<&ComponentId> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_next_component(&self, current_index: usize) -> Option<&ComponentId>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/coordination/mod.rs:353:5
    |
353 |     pub fn is_last_component(&self, current_index: usize) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_last_component(&self, current_index: usize) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/distributed/mod.rs:12:9
   |
12 | //! - **DistributedHookContext**: Extended context for network-aware hooks
   |         ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
12 - //! - **DistributedHookContext**: Extended context for network-aware hooks
12 + //! - **`DistributedHookContext`**: Extended context for network-aware hooks
   |

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/distributed/context.rs:41:5
   |
41 | /     pub fn with_address(mut self, address: impl Into<String>) -> Self {
42 | |         self.network_address = Some(address.into());
43 | |         self
44 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-hooks/src/distributed/context.rs:47:5
   |
47 | /     pub fn with_capability(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
48 | |         self.capabilities.insert(key.into(), value.into());
49 | |         self
50 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/distributed/context.rs:53:5
   |
53 |     pub fn unique_id(&self) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn unique_id(&self) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:126:5
    |
126 |     pub fn with_broadcast(mut self, broadcast: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_broadcast(mut self, broadcast: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:126:5
    |
126 | /     pub fn with_broadcast(mut self, broadcast: bool) -> Self {
127 | |         self.broadcast = broadcast;
128 | |         self
129 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:132:5
    |
132 |     pub fn with_target(mut self, agent: RemoteAgentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_target(mut self, agent: RemoteAgentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:132:5
    |
132 | /     pub fn with_target(mut self, agent: RemoteAgentId) -> Self {
133 | |         self.target_agents.insert(agent);
134 | |         self
135 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:138:5
    |
138 |     pub fn with_max_hops(mut self, hops: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_hops(mut self, hops: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:138:5
    |
138 | /     pub fn with_max_hops(mut self, hops: u32) -> Self {
139 | |         self.max_hops = hops;
140 | |         self
141 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:144:5
    |
144 |     pub fn with_await_remote(mut self, await_remote: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_await_remote(mut self, await_remote: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:144:5
    |
144 | /     pub fn with_await_remote(mut self, await_remote: bool) -> Self {
145 | |         self.await_remote = await_remote;
146 | |         self
147 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:150:5
    |
150 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:150:5
    |
150 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
151 | |         self.remote_timeout = timeout;
152 | |         self
153 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:156:5
    |
156 |     pub fn can_propagate(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn can_propagate(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:207:5
    |
207 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:212:5
    |
212 | /     pub fn with_auth_token(mut self, token: impl Into<String>) -> Self {
213 | |         self.auth_token = Some(token.into());
214 | |         self
215 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:218:5
    |
218 |     pub fn with_trusted_agent(mut self, agent: RemoteAgentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_trusted_agent(mut self, agent: RemoteAgentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:218:5
    |
218 | /     pub fn with_trusted_agent(mut self, agent: RemoteAgentId) -> Self {
219 | |         self.trusted_agents.insert(agent);
220 | |         self
221 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:224:5
    |
224 | /     pub fn with_allowed_hook_point(mut self, hook_point: impl Into<String>) -> Self {
225 | |         self.allowed_hook_points.insert(hook_point.into());
226 | |         self
227 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:230:5
    |
230 |     pub fn is_agent_trusted(&self, agent: &RemoteAgentId) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_agent_trusted(&self, agent: &RemoteAgentId) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:235:5
    |
235 |     pub fn is_hook_point_allowed(&self, hook_point: &str) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_hook_point_allowed(&self, hook_point: &str) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:240:5
    |
240 |     pub fn is_timestamp_valid(&self, max_age: Duration) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_timestamp_valid(&self, max_age: Duration) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:301:5
    |
301 |     pub fn from_local(base_context: HookContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_local(base_context: HookContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:315:5
    |
315 |     pub fn with_source_agent(mut self, agent: RemoteAgentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_source_agent(mut self, agent: RemoteAgentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:315:5
    |
315 | /     pub fn with_source_agent(mut self, agent: RemoteAgentId) -> Self {
316 | |         self.source_agent = Some(agent);
317 | |         self
318 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:321:5
    |
321 |     pub fn with_target_agent(mut self, agent: RemoteAgentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_target_agent(mut self, agent: RemoteAgentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:321:5
    |
321 | /     pub fn with_target_agent(mut self, agent: RemoteAgentId) -> Self {
322 | |         self.target_agents.push(agent);
323 | |         self
324 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:327:5
    |
327 |     pub fn with_propagation_flags(mut self, flags: PropagationFlags) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_propagation_flags(mut self, flags: PropagationFlags) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:327:5
    |
327 | /     pub fn with_propagation_flags(mut self, flags: PropagationFlags) -> Self {
328 | |         self.propagation_flags = flags;
329 | |         self
330 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:333:5
    |
333 |     pub fn with_security_context(mut self, context: SecurityContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_security_context(mut self, context: SecurityContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:333:5
    |
333 | /     pub fn with_security_context(mut self, context: SecurityContext) -> Self {
334 | |         self.security_context = context;
335 | |         self
336 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:339:5
    |
339 | /     pub fn with_metadata(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
340 | |         self.distributed_metadata.insert(key.into(), value.into());
341 | |         self
342 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:345:5
    |
345 |     pub fn is_remote_execution(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_remote_execution(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:350:5
    |
350 |     pub fn should_propagate(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn should_propagate(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:361:5
    |
361 |     pub fn successful_remote_results(&self) -> Vec<&RemoteExecutionResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn successful_remote_results(&self) -> Vec<&RemoteExecutionResult>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:366:5
    |
366 |     pub fn all_remote_succeeded(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn all_remote_succeeded(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:371:5
    |
371 |     pub fn create_propagated_context(&self) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_propagated_context(&self) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:371:5
    |
371 | /     pub fn create_propagated_context(&self) -> Self {
372 | |         let mut propagated = self.clone();
373 | |         propagated.propagation_flags.increment_hops();
374 | |         propagated.remote_results.clear();
375 | |         propagated
376 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/distributed/context.rs:379:17
    |
379 | /// Builder for DistributedHookContext
    |                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
379 - /// Builder for DistributedHookContext
379 + /// Builder for `DistributedHookContext`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:386:5
    |
386 |     pub fn new(base_context: HookContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(base_context: HookContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:393:5
    |
393 |     pub fn source_agent(mut self, agent: RemoteAgentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn source_agent(mut self, agent: RemoteAgentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:393:5
    |
393 | /     pub fn source_agent(mut self, agent: RemoteAgentId) -> Self {
394 | |         self.context.source_agent = Some(agent);
395 | |         self
396 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:399:5
    |
399 |     pub fn target_agent(mut self, agent: RemoteAgentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn target_agent(mut self, agent: RemoteAgentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:399:5
    |
399 | /     pub fn target_agent(mut self, agent: RemoteAgentId) -> Self {
400 | |         self.context.target_agents.push(agent);
401 | |         self
402 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:405:5
    |
405 |     pub fn propagation_flags(mut self, flags: PropagationFlags) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn propagation_flags(mut self, flags: PropagationFlags) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:405:5
    |
405 | /     pub fn propagation_flags(mut self, flags: PropagationFlags) -> Self {
406 | |         self.context.propagation_flags = flags;
407 | |         self
408 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:411:5
    |
411 |     pub fn security_context(mut self, context: SecurityContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn security_context(mut self, context: SecurityContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:411:5
    |
411 | /     pub fn security_context(mut self, context: SecurityContext) -> Self {
412 | |         self.context.security_context = context;
413 | |         self
414 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:417:5
    |
417 | /     pub fn metadata(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
418 | |         self.context
419 | |             .distributed_metadata
420 | |             .insert(key.into(), value.into());
421 | |         self
422 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:425:5
    |
425 |     pub fn network_correlation_id(mut self, id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn network_correlation_id(mut self, id: Uuid) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/distributed/context.rs:425:5
    |
425 | /     pub fn network_correlation_id(mut self, id: Uuid) -> Self {
426 | |         self.context.network_correlation_id = id;
427 | |         self
428 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/distributed/context.rs:431:5
    |
431 |     pub fn build(self) -> DistributedHookContext {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> DistributedHookContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/executor.rs:90:5
   |
90 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/executor.rs:95:5
   |
95 |     pub fn with_config(config: HookExecutorConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: HookExecutorConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/executor.rs:115:5
    |
115 | /     pub async fn execute_hook(
116 | |         &self,
117 | |         hook: &dyn Hook,
118 | |         context: &mut HookContext,
119 | |     ) -> Result<HookResult> {
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function has too many lines (109/100)
   --> llmspell-hooks/src/executor.rs:115:5
    |
115 | /     pub async fn execute_hook(
116 | |         &self,
117 | |         hook: &dyn Hook,
118 | |         context: &mut HookContext,
...   |
315 | |         result
316 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/executor.rs:145:47
    |
145 |                   return Ok(HookResult::Skipped(format!(
    |  _______________________________________________^
146 | |                     "Circuit breaker open for hook: {}",
147 | |                     hook_name
148 | |                 )));
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/executor.rs:319:5
    |
319 | /     pub async fn execute_hooks(
320 | |         &self,
321 | |         hooks: &[Arc<dyn Hook>],
322 | |         context: &mut HookContext,
323 | |     ) -> Result<Vec<HookResult>> {
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:414:5
    |
414 |     pub fn get_metrics(&self, hook_name: &str) -> Option<PerformanceMetrics> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_metrics(&self, hook_name: &str) -> Option<PerformanceMetrics>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:419:5
    |
419 |     pub fn get_all_metrics(&self) -> HashMap<String, PerformanceMetrics> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_all_metrics(&self) -> HashMap<String, PerformanceMetrics>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:424:5
    |
424 |     pub fn is_within_overhead_target(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_within_overhead_target(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:457:5
    |
457 | /     pub fn get_circuit_breaker_stats(
458 | |         &self,
459 | |     ) -> Vec<(String, crate::circuit_breaker::CircuitBreakerStats)> {
    | |___________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
457 ~     #[must_use] pub fn get_circuit_breaker_stats(
458 +         &self,
459 ~     ) -> Vec<(String, crate::circuit_breaker::CircuitBreakerStats)> {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:464:5
    |
464 |     pub fn generate_performance_report(&self) -> crate::performance::PerformanceReport {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_performance_report(&self) -> crate::performance::PerformanceReport`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:475:5
    |
475 |     pub fn is_persistence_enabled(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_persistence_enabled(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:485:5
    |
485 |     pub fn is_correlation_tracking_enabled(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_correlation_tracking_enabled(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:490:5
    |
490 |     pub fn correlation_tracker(&self) -> Option<Arc<EventCorrelationTracker>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn correlation_tracker(&self) -> Option<Arc<EventCorrelationTracker>>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/executor.rs:495:5
    |
495 | /     pub async fn execute_artifact_hooks(
496 | |         &self,
497 | |         artifact_event: &llmspell_core::events::ArtifactEvent,
498 | |         hooks: &[Arc<dyn Hook>],
499 | |     ) -> Result<Vec<HookResult>> {
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/executor.rs:582:17
    |
582 | /// Builder for HookExecutor
    |                 ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
582 - /// Builder for HookExecutor
582 + /// Builder for `HookExecutor`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:588:5
    |
588 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:594:5
    |
594 |     pub fn with_circuit_breaker(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_circuit_breaker(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/executor.rs:594:5
    |
594 | /     pub fn with_circuit_breaker(mut self, enabled: bool) -> Self {
595 | |         self.config.enable_circuit_breaker = enabled;
596 | |         self
597 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:599:5
    |
599 |     pub fn with_performance_monitoring(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_performance_monitoring(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/executor.rs:599:5
    |
599 | /     pub fn with_performance_monitoring(mut self, enabled: bool) -> Self {
600 | |         self.config.enable_performance_monitoring = enabled;
601 | |         self
602 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:604:5
    |
604 |     pub fn with_max_execution_time(mut self, duration: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_execution_time(mut self, duration: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/executor.rs:604:5
    |
604 | /     pub fn with_max_execution_time(mut self, duration: Duration) -> Self {
605 | |         self.config.max_execution_time = duration;
606 | |         self
607 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:609:5
    |
609 |     pub fn with_overhead_target(mut self, target: f64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_overhead_target(mut self, target: f64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/executor.rs:609:5
    |
609 | /     pub fn with_overhead_target(mut self, target: f64) -> Self {
610 | |         self.config.performance_overhead_target = target;
611 | |         self
612 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:614:5
    |
614 |     pub fn with_breaker_config(mut self, config: BreakerConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_breaker_config(mut self, config: BreakerConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/executor.rs:614:5
    |
614 | /     pub fn with_breaker_config(mut self, config: BreakerConfig) -> Self {
615 | |         self.config.breaker_config = config;
616 | |         self
617 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:619:5
    |
619 |     pub fn with_persistence(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_persistence(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/executor.rs:619:5
    |
619 | /     pub fn with_persistence(mut self, enabled: bool) -> Self {
620 | |         self.config.enable_persistence = enabled;
621 | |         self
622 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/executor.rs:624:5
    |
624 |     pub fn build(self) -> HookExecutor {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> HookExecutor`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/performance.rs:84:5
   |
84 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/performance.rs:89:5
   |
89 |     pub fn with_config(config: PerformanceConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: PerformanceConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/performance.rs:98:5
   |
98 |     pub fn start_execution(&self, hook_name: &str) -> ExecutionTimer {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn start_execution(&self, hook_name: &str) -> ExecutionTimer`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/performance.rs:108:5
    |
108 |     pub fn record_execution(&self, hook_name: &str, duration: Duration) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/performance.rs:119:35
    |
119 |         let cutoff = Utc::now() - chrono::Duration::from_std(self.config.retention_period).unwrap();
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/performance.rs:143:5
    |
143 |     pub fn get_metrics(&self, hook_name: &str) -> Option<PerformanceMetrics> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_metrics(&self, hook_name: &str) -> Option<PerformanceMetrics>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value
   --> llmspell-hooks/src/performance.rs:151:31
    |
151 |           let execution_count = self
    |  _______________________________^
152 | |             .counters
153 | |             .read()
154 | |             .get(hook_name)
155 | |             .map(|c| c.load(Ordering::Relaxed))
156 | |             .unwrap_or(0);
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`
help: use `map_or(<a>, <f>)` instead
    |
155 -             .map(|c| c.load(Ordering::Relaxed))
155 +             .map_or(0, |c| c.load(Ordering::Relaxed));
    |

warning: unnecessary boolean `not` operation
   --> llmspell-hooks/src/performance.rs:172:28
    |
172 |           let avg_duration = if !hook_samples.is_empty() {
    |  ____________________________^
173 | |             #[allow(clippy::cast_possible_truncation)]
174 | |             let len_u32 = hook_samples.len() as u32;
175 | |             total_duration / len_u32
176 | |         } else {
177 | |             Duration::ZERO
178 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::if_not_else)]`
help: try
    |
172 ~         let avg_duration = if hook_samples.is_empty() {
173 +             Duration::ZERO
174 +         } else {
175 +             #[allow(clippy::cast_possible_truncation)]
176 +             let len_u32 = hook_samples.len() as u32;
177 +             total_duration / len_u32
178 ~         };
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/performance.rs:223:5
    |
223 |     pub fn get_all_metrics(&self) -> HashMap<String, PerformanceMetrics> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_all_metrics(&self) -> HashMap<String, PerformanceMetrics>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/performance.rs:247:5
    |
247 |     pub fn is_within_threshold(&self, hook_name: &str, threshold: Duration) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_within_threshold(&self, hook_name: &str, threshold: Duration) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/performance.rs:256:5
    |
256 |     pub fn get_slow_hooks(&self, threshold: Duration) -> Vec<(String, PerformanceMetrics)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_slow_hooks(&self, threshold: Duration) -> Vec<(String, PerformanceMetrics)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/performance.rs:284:5
    |
284 |     pub fn complete(mut self) -> Duration {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn complete(mut self) -> Duration`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/performance.rs:315:5
    |
315 |     pub fn generate_report(&self, slow_threshold: Duration) -> PerformanceReport {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_report(&self, slow_threshold: Duration) -> PerformanceReport`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/inspector.rs:102:5
    |
102 | /     pub async fn query_executions(
103 | |         &self,
104 | |         query: InspectionQuery,
105 | |     ) -> Result<Vec<SerializedHookExecution>> {
    | |_____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/inspector.rs:133:5
    |
133 | /     pub async fn analyze_executions(
134 | |         &self,
135 | |         executions: &[SerializedHookExecution],
136 | |     ) -> Result<ExecutionAnalysis> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/inspector.rs:250:5
    |
250 | /     pub async fn detect_patterns(
251 | |         &self,
252 | |         executions: &[SerializedHookExecution],
253 | |     ) -> Result<Vec<ExecutionPattern>> {
    | |______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/inspector.rs:275:5
    |
275 | /     pub async fn compare_executions(
276 | |         &self,
277 | |         set_a: &[SerializedHookExecution],
278 | |         set_b: &[SerializedHookExecution],
279 | |     ) -> Result<ComparisonResult> {
    | |_________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unused `self` argument
   --> llmspell-hooks/src/persistence/inspector.rs:316:9
    |
316 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-hooks/src/persistence/inspector.rs:347:9
    |
347 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-hooks/src/persistence/inspector.rs:380:9
    |
380 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-hooks/src/persistence/inspector.rs:413:9
    |
413 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/replay.rs:58:5
   |
58 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-hooks/src/persistence/replay.rs:65:5
   |
65 | /     pub async fn replay_execution(
66 | |         &mut self,
67 | |         hook: &dyn ReplayableHook,
68 | |         execution: &SerializedHookExecution,
69 | |         options: &ReplayOptions,
70 | |     ) -> Result<HookResult> {
   | |___________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay.rs:124:5
    |
124 | /     pub async fn replay_executions(
125 | |         &mut self,
126 | |         hooks: &[(Box<dyn ReplayableHook>, SerializedHookExecution)],
127 | |         options: &ReplayOptions,
128 | |     ) -> Result<Vec<HookResult>> {
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/persistence/replay.rs:156:5
    |
156 |     pub fn get_statistics(&self) -> (u64, u64, u64, Duration) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> (u64, u64, u64, Duration)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:166:5
    |
166 |     pub async fn start_replay_session(&self, config: ReplaySessionConfig) -> Result<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:186:5
    |
186 | /     pub async fn replay_by_correlation(
187 | |         &self,
188 | |         session_name: &str,
189 | |         correlation_id: Uuid,
190 | |         options: ReplayOptions,
191 | |     ) -> Result<Vec<HookResult>> {
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:215:5
    |
215 | /     pub async fn replay_executions(
216 | |         &self,
217 | |         session_name: &str,
218 | |         executions: Vec<SerializedHookExecution>,
219 | |         options: ReplayOptions,
220 | |     ) -> Result<Vec<HookResult>> {
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: strict comparison of `f32` or `f64`
   --> llmspell-hooks/src/persistence/replay_manager.rs:290:39
    |
290 |         if options.simulate_timing && session.config.speed_multiplier != 1.0 {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some margin of error: `(session.config.speed_multiplier - 1.0).abs() > error_margin`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:348:5
    |
348 |     pub async fn build_timeline(&self, correlation_id: Uuid) -> Result<ReplayTimeline> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/persistence/replay_manager.rs:364:26
    |
364 |         let start_time = executions.first().unwrap().timestamp;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:348:5
    |
348 |     pub async fn build_timeline(&self, correlation_id: Uuid) -> Result<ReplayTimeline> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unused `self` argument
   --> llmspell-hooks/src/persistence/replay_manager.rs:420:21
    |
420 |     fn should_break(&self, session: &ReplaySession, execution: &SerializedHookExecution) -> bool {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:456:5
    |
456 |     pub fn add_breakpoint(&self, session_name: &str, breakpoint: ReplayBreakpoint) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/persistence/replay_manager.rs:467:5
    |
467 |     pub fn get_session(&self, session_name: &str) -> Option<ReplaySession> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_session(&self, session_name: &str) -> Option<ReplaySession>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/replay_manager.rs:472:5
    |
472 |     pub fn end_session(&self, session_name: &str) -> Result<ReplaySession> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/retention.rs:46:5
   |
46 |     pub fn retain_all() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn retain_all() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/retention.rs:59:5
   |
59 |     pub fn short_term() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn short_term() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/retention.rs:72:5
   |
72 |     pub fn long_term() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn long_term() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/persistence/retention.rs:111:5
    |
111 |     pub fn new(default_policy: RetentionPolicy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(default_policy: RetentionPolicy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/retention.rs:134:5
    |
134 |     pub async fn apply_retention_policies(&self, hook_id: &str) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/retention.rs:159:5
    |
159 |     pub async fn apply_all_retention_policies(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/persistence/retention.rs:168:26
    |
168 |                 .context(format!("Failed to apply retention for hook: {}", hook_id))?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
168 -                 .context(format!("Failed to apply retention for hook: {}", hook_id))?;
168 +                 .context(format!("Failed to apply retention for hook: {hook_id}"))?;
    |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/persistence/storage.rs:18:27
   |
18 |     /// Hook type (e.g., "rate_limit", "cost_tracking", "security")
   |                           ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
18 -     /// Hook type (e.g., "rate_limit", "cost_tracking", "security")
18 +     /// Hook type (e.g., "`rate_limit`", "cost_tracking", "security")
   |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/persistence/storage.rs:18:41
   |
18 |     /// Hook type (e.g., "rate_limit", "cost_tracking", "security")
   |                                         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
18 -     /// Hook type (e.g., "rate_limit", "cost_tracking", "security")
18 +     /// Hook type (e.g., "rate_limit", "`cost_tracking`", "security")
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/storage.rs:42:5
   |
42 | /     pub fn new(
43 | |         hook_type: String,
44 | |         triggering_component: ComponentType,
45 | |         component_id: String,
46 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
42 ~     #[must_use] pub fn new(
43 +         hook_type: String,
44 +         triggering_component: ComponentType,
45 +         component_id: String,
46 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/storage.rs:74:5
   |
74 |     pub fn get_property(&self, key: &str) -> Option<&serde_json::Value> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_property(&self, key: &str) -> Option<&serde_json::Value>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/persistence/storage.rs:111:5
    |
111 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/persistence/storage.rs:116:5
    |
116 | /     pub fn with_persistent_state(mut self, state_manager: Arc<dyn StateManager>) -> Self {
117 | |         self.persistent_state_manager = Some(state_manager);
118 | |         self
119 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/storage.rs:127:5
    |
127 | /     pub async fn store_metadata(
128 | |         &self,
129 | |         correlation_id: &Uuid,
130 | |         metadata: &HookMetadata,
131 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/storage.rs:172:5
    |
172 |     pub async fn load_metadata(&self, correlation_id: &Uuid) -> Result<Option<HookMetadata>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/persistence/storage.rs:192:48
    |
192 |                 let scope = StateScope::Custom(format!("hook_metadata_{}", hook_type));
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
192 -                 let scope = StateScope::Custom(format!("hook_metadata_{}", hook_type));
192 +                 let scope = StateScope::Custom(format!("hook_metadata_{hook_type}"));
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/storage.rs:212:5
    |
212 |     pub async fn delete_metadata(&self, correlation_id: &Uuid) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/storage.rs:219:5
    |
219 |     pub async fn list_metadata_keys(&self, prefix: &str) -> Result<Vec<String>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/persistence/storage.rs:230:5
    |
230 |     pub fn get_statistics(&self) -> StorageStatistics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> StorageStatistics`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unused `self` argument
   --> llmspell-hooks/src/persistence/storage.rs:240:30
    |
240 |     fn generate_metadata_key(&self, correlation_id: &Uuid) -> String {
    |                              ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/persistence/storage.rs:241:9
    |
241 |         format!("hook_metadata:{}", correlation_id)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
241 -         format!("hook_metadata:{}", correlation_id)
241 +         format!("hook_metadata:{correlation_id}")
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/persistence/storage_backend.rs:75:5
   |
75 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/storage_backend.rs:357:5
    |
357 |     pub async fn new(root_path: impl AsRef<Path>, compression_enabled: bool) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/persistence/storage_backend.rs:395:19
    |
395 |             .join(format!("{}.{}", id_str, extension))
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
395 -             .join(format!("{}.{}", id_str, extension))
395 +             .join(format!("{id_str}.{extension}"))
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/mod.rs:117:5
    |
117 | /     pub async fn persist_execution(
118 | |         &self,
119 | |         hook: &dyn ReplayableHook,
120 | |         context: &HookContext,
...   |
123 | |         metadata: HookMetadata,
124 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/mod.rs:162:5
    |
162 | /     pub async fn get_executions_with_metadata(
163 | |         &self,
164 | |         correlation_id: Uuid,
165 | |     ) -> Result<Vec<(SerializedHookExecution, HookMetadata)>> {
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/mod.rs:183:5
    |
183 |     pub async fn get_storage_statistics(&self) -> Result<StorageStats> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/persistence/mod.rs:188:5
    |
188 |     pub async fn archive_old_executions(&self, older_than: SystemTime) -> Result<u64> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/priority.rs:13:56
   |
13 |     /// Lower priority values execute first (HIGHEST = i32::MIN executes before HIGH = -100)
   |                                                        ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
13 -     /// Lower priority values execute first (HIGHEST = i32::MIN executes before HIGH = -100)
13 +     /// Lower priority values execute first (HIGHEST = `i32::MIN` executes before HIGH = -100)
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:14:5
   |
14 |     pub fn compare(a: &Priority, b: &Priority) -> Ordering {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn compare(a: &Priority, b: &Priority) -> Ordering`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:27:5
   |
27 |     pub fn is_in_range(priority: &Priority, min: &Priority, max: &Priority) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_in_range(priority: &Priority, min: &Priority, max: &Priority) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:32:5
   |
32 |     pub fn get_bucket(priority: &Priority) -> PriorityBucket {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_bucket(priority: &Priority) -> PriorityBucket`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:55:5
   |
55 |     pub fn name(&self) -> &'static str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn name(&self) -> &'static str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:66:5
   |
66 |     pub fn range(&self) -> (Priority, Priority) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn range(&self) -> (Priority, Priority)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:94:5
   |
94 |     pub fn new(base: i32) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(base: i32) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/priority.rs:99:5
   |
99 |     pub fn offset(self, offset: i32) -> Priority {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn offset(self, offset: i32) -> Priority`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/priority.rs:104:5
    |
104 |     pub fn before(self, distance: u32) -> Priority {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn before(self, distance: u32) -> Priority`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/priority.rs:111:5
    |
111 |     pub fn after(self, distance: u32) -> Priority {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn after(self, distance: u32) -> Priority`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/priority.rs:121:5
    |
121 |     pub fn builder(self) -> PriorityBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder(self) -> PriorityBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/priority.rs:126:5
    |
126 |     pub fn is_higher_than(&self, other: &Priority) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_higher_than(&self, other: &Priority) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/priority.rs:131:5
    |
131 |     pub fn is_lower_than(&self, other: &Priority) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_lower_than(&self, other: &Priority) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/priority.rs:136:5
    |
136 |     pub fn distance_from(&self, other: &Priority) -> u32 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn distance_from(&self, other: &Priority) -> u32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/rate_limiter/token_bucket.rs:25:5
   |
25 |     pub fn new(config: TokenBucketConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: TokenBucketConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: casting `f64` to `u64` may truncate the value
  --> llmspell-hooks/src/rate_limiter/token_bucket.rs:60:29
   |
60 |         let requested_u64 = requested as u64;
   |                             ^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/rate_limiter/token_bucket.rs:72:5
   |
72 |     pub fn get_state(&self) -> BucketState {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_state(&self) -> BucketState`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/rate_limiter/mod.rs:97:5
   |
97 |     pub fn new(bucket_config: TokenBucketConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(bucket_config: TokenBucketConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/rate_limiter/mod.rs:106:5
    |
106 |     pub fn with_config(config: RateLimiterConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: RateLimiterConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/rate_limiter/mod.rs:115:5
    |
115 |     pub fn try_acquire(&self, key: &str, tokens: f64) -> (bool, f64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/rate_limiter/mod.rs:121:36
    |
121 |             let mut access_times = self.access_times.write().unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/rate_limiter/mod.rs:115:5
    |
115 |     pub fn try_acquire(&self, key: &str, tokens: f64) -> (bool, f64) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn try_acquire(&self, key: &str, tokens: f64) -> (bool, f64)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/rate_limiter/mod.rs:138:5
    |
138 |     pub fn force_acquire(&self, key: &str, tokens: f64) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/rate_limiter/mod.rs:140:32
    |
140 |         let mut bucket_guard = bucket.write().unwrap();
    |                                ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/rate_limiter/mod.rs:138:5
    |
138 |     pub fn force_acquire(&self, key: &str, tokens: f64) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn force_acquire(&self, key: &str, tokens: f64) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/rate_limiter/mod.rs:145:5
    |
145 |     pub fn get_bucket_state(&self, key: &str) -> BucketState {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/rate_limiter/mod.rs:147:28
    |
147 |         let bucket_guard = bucket.read().unwrap();
    |                            ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/rate_limiter/mod.rs:145:5
    |
145 |     pub fn get_bucket_state(&self, key: &str) -> BucketState {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_bucket_state(&self, key: &str) -> BucketState`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/rate_limiter/mod.rs:152:5
    |
152 |     pub fn reset_bucket(&self, key: &str) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/rate_limiter/mod.rs:153:23
    |
153 |         let buckets = self.buckets.read().unwrap();
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/rate_limiter/mod.rs:161:5
    |
161 |     pub fn reset_all(&self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/rate_limiter/mod.rs:162:23
    |
162 |         let buckets = self.buckets.read().unwrap();
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-hooks/src/rate_limiter/mod.rs:170:5
    |
170 |     pub fn get_statistics(&self) -> HashMap<String, BucketState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-hooks/src/rate_limiter/mod.rs:171:23
    |
171 |         let buckets = self.buckets.read().unwrap();
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/rate_limiter/mod.rs:170:5
    |
170 |     pub fn get_statistics(&self) -> HashMap<String, BucketState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_statistics(&self) -> HashMap<String, BucketState>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/rate_limiter/mod.rs:241:17
    |
241 |                 log::debug!("Cleaned up old rate limiter bucket: {}", key);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
241 -                 log::debug!("Cleaned up old rate limiter bucket: {}", key);
241 +                 log::debug!("Cleaned up old rate limiter bucket: {key}");
    |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/registry.rs:14:23
   |
14 | /// Configuration for HookRegistry
   |                       ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
14 - /// Configuration for HookRegistry
14 + /// Configuration for `HookRegistry`
   |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/registry.rs:35:17
   |
35 | /// Builder for HookRegistryConfig
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
35 - /// Builder for HookRegistryConfig
35 + /// Builder for `HookRegistryConfig`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/registry.rs:43:5
   |
43 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/registry.rs:71:5
   |
71 |     pub fn build(self) -> HookRegistryConfig {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> HookRegistryConfig`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/registry.rs:94:28
   |
94 |     /// Hooks organized by HookPoint
   |                            ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
94 -     /// Hooks organized by HookPoint
94 +     /// Hooks organized by `HookPoint`
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:113:5
    |
113 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:118:5
    |
118 |     pub fn with_config(config: HookRegistryConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: HookRegistryConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/registry.rs:118:32
    |
118 |     pub fn with_config(config: HookRegistryConfig) -> Self {
    |                                ^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&HookRegistryConfig`
    |
help: or consider marking this type as `Copy`
   --> llmspell-hooks/src/registry.rs:16:1
    |
16  | pub struct HookRegistryConfig {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/registry.rs:133:34
    |
133 |     /// Create a new builder for HookRegistry configuration
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
133 -     /// Create a new builder for HookRegistry configuration
133 +     /// Create a new builder for `HookRegistry` configuration
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:134:5
    |
134 |     pub fn builder() -> HookRegistryConfigBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> HookRegistryConfigBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/registry.rs:139:5
    |
139 | /     pub fn register(
140 | |         &self,
141 | |         point: HookPoint,
142 | |         hook: impl Hook + 'static,
143 | |     ) -> Result<(), RegistryError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/registry.rs:148:5
    |
148 |     pub fn register_arc(&self, point: HookPoint, hook: ArcHook) -> Result<(), RegistryError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/registry.rs:148:39
    |
148 |     pub fn register_arc(&self, point: HookPoint, hook: ArcHook) -> Result<(), RegistryError> {
    |                                       ^^^^^^^^^ help: consider taking a reference instead: `&HookPoint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/registry.rs:148:56
    |
148 |     pub fn register_arc(&self, point: HookPoint, hook: ArcHook) -> Result<(), RegistryError> {
    |                                                        ^^^^^^^ help: consider taking a reference instead: `&ArcHook`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/registry.rs:188:5
    |
188 | /     pub fn register_bulk(
189 | |         &self,
190 | |         registrations: Vec<(HookPoint, ArcHook)>,
191 | |     ) -> Result<(), RegistryError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/registry.rs:199:5
    |
199 |     pub fn unregister(&self, point: &HookPoint, hook_name: &str) -> Result<(), RegistryError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:222:5
    |
222 |     pub fn get_hooks(&self, point: &HookPoint) -> Vec<ArcHook> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hooks(&self, point: &HookPoint) -> Vec<ArcHook>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:227:5
    |
227 |     pub fn get_hooks_by_language(&self, point: &HookPoint, language: Language) -> Vec<ArcHook> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hooks_by_language(&self, point: &HookPoint, language: Language) -> Vec<ArcHook>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:232:5
    |
232 | /     pub fn get_hooks_by_priority_range(
233 | |         &self,
234 | |         point: &HookPoint,
235 | |         min: Priority,
236 | |         max: Priority,
237 | |     ) -> Vec<ArcHook> {
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
232 ~     #[must_use] pub fn get_hooks_by_priority_range(
233 +         &self,
234 +         point: &HookPoint,
235 +         min: Priority,
236 +         max: Priority,
237 ~     ) -> Vec<ArcHook> {
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/registry.rs:267:5
    |
267 | /     pub fn set_hook_enabled(
268 | |         &self,
269 | |         point: &HookPoint,
270 | |         hook_name: &str,
271 | |         enabled: bool,
272 | |     ) -> Result<(), RegistryError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:306:5
    |
306 |     pub fn is_global_enabled(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_global_enabled(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:326:5
    |
326 |     pub fn stats(&self) -> RegistryStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn stats(&self) -> RegistryStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:360:5
    |
360 |     pub fn get_hook_names(&self, point: &HookPoint) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hook_names(&self, point: &HookPoint) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:373:5
    |
373 |     pub fn has_hook(&self, point: &HookPoint, hook_name: &str) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_hook(&self, point: &HookPoint, hook_name: &str) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: called `map(<f>).unwrap_or(false)` on an `Option` value
   --> llmspell-hooks/src/registry.rs:374:9
    |
374 | /         self.hooks
375 | |             .get(point)
376 | |             .map(|hooks| hooks.iter().any(|e| e.metadata.name == hook_name))
377 | |             .unwrap_or(false)
    | |_____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
help: use `is_some_and(<f>)` instead
    |
376 -             .map(|hooks| hooks.iter().any(|e| e.metadata.name == hook_name))
376 +             .is_some_and(|hooks| hooks.iter().any(|e| e.metadata.name == hook_name))
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/registry.rs:381:5
    |
381 |     pub fn get_hook_points(&self) -> Vec<HookPoint> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hook_points(&self) -> Vec<HookPoint>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/comparator.rs:100:5
    |
100 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/comparator.rs:107:5
    |
107 |     pub fn with_config(config: ComparatorConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(config: ComparatorConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/comparator.rs:112:5
    |
112 |     pub fn compare(&self, original: &HookResult, replayed: &HookResult) -> ComparisonResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn compare(&self, original: &HookResult, replayed: &HookResult) -> ComparisonResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function has too many lines (190/100)
   --> llmspell-hooks/src/replay/comparator.rs:112:5
    |
112 | /     pub fn compare(&self, original: &HookResult, replayed: &HookResult) -> ComparisonResult {
113 | |         let mut differences = Vec::new();
114 | |         let mut difference_type = None;
...   |
315 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: this match arm has an identical body to another arm
   --> llmspell-hooks/src/replay/comparator.rs:121:13
    |
121 | /             (HookResult::Modified(orig_data), HookResult::Modified(repl_data)) => {
122 | |                 self.compare_values("", orig_data, repl_data, &mut differences);
123 | |                 if !differences.is_empty() {
124 | |                     difference_type = Some(DifferenceType::DataMismatch);
125 | |                 }
126 | |             }
    | |_____________^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
121 ~             (HookResult::Modified(orig_data), HookResult::Modified(repl_data)) | (HookResult::Replace(orig_data), HookResult::Replace(repl_data)) => {
122 |                 self.compare_values("", orig_data, repl_data, &mut differences);
...
150 |             }
151 ~             (
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:170:54
    |
170 |                         original: Some(Value::String(format!("{:?}", orig_delay))),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
170 -                         original: Some(Value::String(format!("{:?}", orig_delay))),
170 +                         original: Some(Value::String(format!("{orig_delay:?}"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:171:54
    |
171 |                         replayed: Some(Value::String(format!("{:?}", repl_delay))),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
171 -                         replayed: Some(Value::String(format!("{:?}", repl_delay))),
171 +                         replayed: Some(Value::String(format!("{repl_delay:?}"))),
    |

warning: unnecessary `!=` operation
   --> llmspell-hooks/src/replay/comparator.rs:197:17
    |
197 | /                 if orig_results.len() != repl_results.len() {
198 | |                     differences.push(Difference {
199 | |                         path: "fork_count".to_string(),
200 | |                         original: Some(Value::Number(orig_results.len().into())),
...   |
235 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
197 ~                 if orig_results.len() == repl_results.len() {
198 +                     // Compare operation structures
199 +                     for (i, (orig_op, repl_op)) in
200 +                         orig_results.iter().zip(repl_results.iter()).enumerate()
201 +                     {
202 +                         if orig_op.id != repl_op.id {
203 +                             differences.push(Difference {
204 +                                 path: format!("fork[{}].id", i),
205 +                                 original: Some(Value::String(orig_op.id.clone())),
206 +                                 replayed: Some(Value::String(repl_op.id.clone())),
207 +                                 description: "Operation IDs differ".to_string(),
208 +                                 severity: DifferenceSeverity::Major,
209 +                             });
210 +                         }
211 +                         if orig_op.operation_type != repl_op.operation_type {
212 +                             differences.push(Difference {
213 +                                 path: format!("fork[{}].operation_type", i),
214 +                                 original: Some(Value::String(orig_op.operation_type.clone())),
215 +                                 replayed: Some(Value::String(repl_op.operation_type.clone())),
216 +                                 description: "Operation types differ".to_string(),
217 +                                 severity: DifferenceSeverity::Major,
218 +                             });
219 +                         }
220 +                         self.compare_values(
221 +                             &format!("fork[{}].parameters", i),
222 +                             &orig_op.parameters,
223 +                             &repl_op.parameters,
224 +                             &mut differences,
225 +                         );
226 +                     }
227 +                 } else {
228 +                     differences.push(Difference {
229 +                         path: "fork_count".to_string(),
230 +                         original: Some(Value::Number(orig_results.len().into())),
231 +                         replayed: Some(Value::Number(repl_results.len().into())),
232 +                         description: "Fork result counts differ".to_string(),
233 +                         severity: DifferenceSeverity::Major,
234 +                     });
235 +                 }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:212:39
    |
212 | ...                   path: format!("fork[{}].id", i),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
212 -                                 path: format!("fork[{}].id", i),
212 +                                 path: format!("fork[{i}].id"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:221:39
    |
221 | ...                   path: format!("fork[{}].operation_type", i),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
221 -                                 path: format!("fork[{}].operation_type", i),
221 +                                 path: format!("fork[{i}].operation_type"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:229:30
    |
229 | ...                   &format!("fork[{}].parameters", i),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
229 -                             &format!("fork[{}].parameters", i),
229 +                             &format!("fork[{i}].parameters"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:262:54
    |
262 |                         original: Some(Value::String(format!("{:?}", orig_ttl))),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
262 -                         original: Some(Value::String(format!("{:?}", orig_ttl))),
262 +                         original: Some(Value::String(format!("{orig_ttl:?}"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:263:54
    |
263 |                         replayed: Some(Value::String(format!("{:?}", repl_ttl))),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
263 -                         replayed: Some(Value::String(format!("{:?}", repl_ttl))),
263 +                         replayed: Some(Value::String(format!("{repl_ttl:?}"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:288:50
    |
288 |                     original: Some(Value::String(format!("{:?}", original))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
288 -                     original: Some(Value::String(format!("{:?}", original))),
288 +                     original: Some(Value::String(format!("{original:?}"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:289:50
    |
289 |                     replayed: Some(Value::String(format!("{:?}", replayed))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
289 -                     replayed: Some(Value::String(format!("{:?}", replayed))),
289 +                     replayed: Some(Value::String(format!("{replayed:?}"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:336:25
    |
336 |                         format!("{}.{}", path, key)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
336 -                         format!("{}.{}", path, key)
336 +                         format!("{path}.{key}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:411:23
    |
411 |                 path: format!("{}.length", path),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
411 -                 path: format!("{}.length", path),
411 +                 path: format!("{path}.length"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:420:29
    |
420 |             let item_path = format!("{}[{}]", path, i);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
420 -             let item_path = format!("{}[{}]", path, i);
420 +             let item_path = format!("{path}[{i}]");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:441:50
    |
441 |                     original: Some(Value::String(format!("{} occurrences", orig_count))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
441 -                     original: Some(Value::String(format!("{} occurrences", orig_count))),
441 +                     original: Some(Value::String(format!("{orig_count} occurrences"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:442:50
    |
442 |                     replayed: Some(Value::String(format!("{} occurrences", repl_count))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
442 -                     replayed: Some(Value::String(format!("{} occurrences", repl_count))),
442 +                     replayed: Some(Value::String(format!("{repl_count} occurrences"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:443:34
    |
443 |                     description: format!("Element count mismatch for {:?}", value),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
443 -                     description: format!("Element count mismatch for {:?}", value),
443 +                     description: format!("Element count mismatch for {value:?}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:454:50
    |
454 |                     replayed: Some(Value::String(format!("{} occurrences", repl_count))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
454 -                     replayed: Some(Value::String(format!("{} occurrences", repl_count))),
454 +                     replayed: Some(Value::String(format!("{repl_count} occurrences"))),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-hooks/src/replay/comparator.rs:455:34
    |
455 |                     description: format!("New element in replayed: {:?}", value),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
455 -                     description: format!("New element in replayed: {:?}", value),
455 +                     description: format!("New element in replayed: {value:?}"),
    |

warning: unused `self` argument
   --> llmspell-hooks/src/replay/comparator.rs:463:29
    |
463 |     fn count_array_elements(&self, array: &[Value]) -> HashMap<String, usize> {
    |                             ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-hooks/src/replay/comparator.rs:473:29
    |
473 |     fn calculate_similarity(&self, differences: &[Difference]) -> f64 {
    |                             ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-hooks/src/replay/comparator.rs:494:9
    |
494 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-hooks/src/replay/manager.rs:98:5
   |
98 |     pub async fn replay(&self, request: ReplayRequest) -> Result<ReplayResponse> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unused `self` argument
   --> llmspell-hooks/src/replay/manager.rs:248:9
    |
248 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: calling `to_string` on `&&str`
   --> llmspell-hooks/src/replay/manager.rs:258:29
    |
258 |                     .insert(key.to_string(), modification.value.clone());
    |                             ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string
    = note: `-W clippy::inefficient-to-string` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::inefficient_to_string)]`

warning: calling `to_string` on `&&str`
   --> llmspell-hooks/src/replay/manager.rs:263:45
    |
263 |                     context.metadata.insert(key.to_string(), value.clone());
    |                                             ^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*key).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/replay/manager.rs:289:5
    |
289 |     pub async fn batch_replay(&self, request: BatchReplayRequest) -> Result<BatchReplayResponse> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/replay/manager.rs:373:5
    |
373 | /     pub async fn schedule_replay(
374 | |         &self,
375 | |         request: ReplayRequest,
376 | |         schedule: crate::replay::ReplaySchedule,
377 | |     ) -> Result<Uuid> {
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/manager.rs:382:5
    |
382 |     pub fn get_active_replays(&self) -> Vec<(Uuid, ReplayState)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_active_replays(&self) -> Vec<(Uuid, ReplayState)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/replay/manager.rs:391:5
    |
391 |     pub fn cancel_replay(&self, replay_id: Uuid) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-hooks/src/replay/manager.rs:406:5
    |
406 | /     fn get_hook(&self, hook_id: &str) -> Result<Option<Arc<dyn ReplayableHook>>> {
407 | |         Ok(self.hook_registry.read().get(hook_id).cloned())
408 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
406 -     fn get_hook(&self, hook_id: &str) -> Result<Option<Arc<dyn ReplayableHook>>> {
406 +     fn get_hook(&self, hook_id: &str) -> std::option::Option<std::sync::Arc<(dyn traits::ReplayableHook + 'static)>> {
    |
help: ...and then change returning expressions
    |
407 -         Ok(self.hook_registry.read().get(hook_id).cloned())
407 +         self.hook_registry.read().get(hook_id).cloned()
    |

warning: unused `self` argument
   --> llmspell-hooks/src/replay/manager.rs:412:9
    |
412 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unchecked subtraction of a 'Duration' from an 'Instant'
   --> llmspell-hooks/src/replay/manager.rs:421:22
    |
421 |         let cutoff = Instant::now() - older_than;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Instant::now().checked_sub(older_than).unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unchecked_duration_subtraction
    = note: `-W clippy::unchecked-duration-subtraction` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unchecked_duration_subtraction)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/scheduler.rs:195:5
    |
195 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/replay/scheduler.rs:218:5
    |
218 |     pub async fn schedule(&self, request: ReplayRequest, schedule: ReplaySchedule) -> Result<Uuid> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/replay/scheduler.rs:232:5
    |
232 |     pub async fn cancel(&self, id: Uuid) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/scheduler.rs:246:5
    |
246 |     pub fn get_scheduled(&self) -> Vec<ScheduledReplay> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_scheduled(&self) -> Vec<ScheduledReplay>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/replay/scheduler.rs:251:5
    |
251 |     pub fn get_scheduled_replay(&self, id: Uuid) -> Option<ScheduledReplay> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_scheduled_replay(&self, id: Uuid) -> Option<ScheduledReplay>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/replay/scheduler.rs:256:5
    |
256 |     pub async fn stop(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-hooks/src/replay/scheduler.rs:308:5
    |
308 | /     fn handle_schedule(
309 | |         scheduled: &Arc<RwLock<HashMap<Uuid, ScheduledReplay>>>,
310 | |         queue: &Arc<RwLock<BinaryHeap<ScheduledReplay>>>,
311 | |         request: ReplayRequest,
...   |
321 | |         Ok(id)
322 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
313 -     ) -> Result<Uuid> {
313 +     ) -> uuid::Uuid {
    |
help: ...and then change returning expressions
    |
321 -         Ok(id)
321 +         id
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/result.rs:50:5
   |
50 |     pub fn should_continue(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn should_continue(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/result.rs:55:5
   |
55 |     pub fn is_cancelled(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_cancelled(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/result.rs:60:5
   |
60 |     pub fn requires_special_handling(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn requires_special_handling(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/result.rs:65:5
   |
65 |     pub fn description(&self) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn description(&self) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/result.rs:69:43
   |
69 |             HookResult::Cancel(reason) => format!("Cancelled: {}", reason),
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
69 -             HookResult::Cancel(reason) => format!("Cancelled: {}", reason),
69 +             HookResult::Cancel(reason) => format!("Cancelled: {reason}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/result.rs:70:45
   |
70 |             HookResult::Redirect(target) => format!("Redirect to: {}", target),
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
70 -             HookResult::Redirect(target) => format!("Redirect to: {}", target),
70 +             HookResult::Redirect(target) => format!("Redirect to: {target}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/result.rs:76:17
   |
76 |                 format!("Retry after {:?} (max {} attempts)", delay, max_attempts)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
76 -                 format!("Retry after {:?} (max {} attempts)", delay, max_attempts)
76 +                 format!("Retry after {delay:?} (max {max_attempts} attempts)")
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/result.rs:87:17
   |
87 |                 format!("Cache with key '{}' for {:?}", key, ttl)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
87 -                 format!("Cache with key '{}' for {:?}", key, ttl)
87 +                 format!("Cache with key '{key}' for {ttl:?}")
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/result.rs:89:44
   |
89 |             HookResult::Skipped(reason) => format!("Skipped: {}", reason),
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
89 -             HookResult::Skipped(reason) => format!("Skipped: {}", reason),
89 +             HookResult::Skipped(reason) => format!("Skipped: {reason}"),
   |

warning: item in documentation is missing backticks
  --> llmspell-hooks/src/result.rs:94:26
   |
94 | /// Builder for creating HookResult::Retry
   |                          ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
94 - /// Builder for creating HookResult::Retry
94 + /// Builder for creating `HookResult::Retry`
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:107:5
    |
107 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:114:5
    |
114 |     pub fn with_delay(mut self, delay: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_delay(mut self, delay: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/result.rs:114:5
    |
114 | /     pub fn with_delay(mut self, delay: Duration) -> Self {
115 | |         self.delay = delay;
116 | |         self
117 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:119:5
    |
119 |     pub fn with_max_attempts(mut self, attempts: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_attempts(mut self, attempts: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/result.rs:119:5
    |
119 | /     pub fn with_max_attempts(mut self, attempts: u32) -> Self {
120 | |         self.max_attempts = attempts;
121 | |         self
122 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:124:5
    |
124 |     pub fn build(self) -> HookResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> HookResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/result.rs:132:26
    |
132 | /// Builder for creating HookResult::Fork
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
132 - /// Builder for creating HookResult::Fork
132 + /// Builder for creating `HookResult::Fork`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:144:5
    |
144 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:150:5
    |
150 | /     pub fn add_operation(
151 | |         mut self,
152 | |         id: String,
153 | |         operation_type: String,
154 | |         parameters: JsonValue,
155 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
150 ~     #[must_use] pub fn add_operation(
151 +         mut self,
152 +         id: String,
153 +         operation_type: String,
154 +         parameters: JsonValue,
155 ~     ) -> Self {
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/result.rs:150:5
    |
150 | /     pub fn add_operation(
151 | |         mut self,
152 | |         id: String,
153 | |         operation_type: String,
...   |
161 | |         self
162 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/result.rs:164:5
    |
164 |     pub fn build(self) -> HookResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> HookResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/selective/registry.rs:30:5
   |
30 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-hooks/src/selective/registry.rs:92:5
   |
92 |     pub fn enabled_features(&self) -> &HashSet<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn enabled_features(&self) -> &HashSet<String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-hooks/src/selective/registry.rs:205:33
    |
205 |     /// Lazy hooks organized by HookPoint
    |                                 ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
205 -     /// Lazy hooks organized by HookPoint
205 +     /// Lazy hooks organized by `HookPoint`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:219:5
    |
219 |     pub fn new(features: HookFeatures) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(features: HookFeatures) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:224:5
    |
224 |     pub fn with_config(features: HookFeatures, config: SelectiveRegistryConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(features: HookFeatures, config: SelectiveRegistryConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/selective/registry.rs:244:5
    |
244 | /     pub fn register_with_features(
245 | |         &self,
246 | |         point: HookPoint,
247 | |         factory: impl Fn() -> Box<dyn Hook> + Send + Sync + 'static,
248 | |         required_features: &[impl AsRef<str>],
249 | |     ) -> Result<(), RegistryError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-hooks/src/selective/registry.rs:246:16
    |
246 |         point: HookPoint,
    |                ^^^^^^^^^ help: consider taking a reference instead: `&HookPoint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/selective/registry.rs:310:5
    |
310 | /     pub fn register(
311 | |         &self,
312 | |         point: HookPoint,
313 | |         factory: impl Fn() -> Box<dyn Hook> + Send + Sync + 'static,
314 | |     ) -> Result<(), RegistryError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/selective/registry.rs:319:5
    |
319 |     pub fn preload_hook(&self, hook_name: &str) -> Result<(), RegistryError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:336:5
    |
336 |     pub fn get_hooks(&self, point: &HookPoint) -> Vec<ArcHook> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hooks(&self, point: &HookPoint) -> Vec<ArcHook>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:341:5
    |
341 |     pub fn get_hooks_by_language(&self, point: &HookPoint, language: Language) -> Vec<ArcHook> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hooks_by_language(&self, point: &HookPoint, language: Language) -> Vec<ArcHook>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be rewritten as `let...else`
   --> llmspell-hooks/src/selective/registry.rs:356:9
    |
356 | /         let hooks = match self.hooks.get(point) {
357 | |             Some(hooks) => hooks,
358 | |             None => return Vec::new(),
359 | |         };
    | |__________^ help: consider writing: `let Some(hooks) = self.hooks.get(point) else { return Vec::new() };`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else
    = note: `-W clippy::manual-let-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::manual_let_else)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-hooks/src/selective/registry.rs:456:5
    |
456 |     pub fn set_hook_enabled(&self, hook_name: &str, enabled: bool) -> Result<(), RegistryError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:485:5
    |
485 |     pub fn features(&self) -> HookFeatures {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn features(&self) -> HookFeatures`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:523:5
    |
523 |     pub fn stats(&self) -> SelectiveRegistryStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn stats(&self) -> SelectiveRegistryStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/selective/registry.rs:548:5
    |
548 |     pub fn memory_usage_estimate(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn memory_usage_estimate(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-hooks/src/traits.rs:60:5
   |
60 |     fn serialize_context(&self, ctx: &HookContext) -> Result<Vec<u8>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-hooks/src/traits.rs:65:5
   |
65 |     fn deserialize_context(&self, data: &[u8]) -> Result<HookContext> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-hooks/src/traits.rs:127:5
    |
127 | /     pub fn with_metadata(mut self, metadata: HookMetadata) -> Self {
128 | |         self.metadata = metadata;
129 | |         self
130 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/types.rs:77:40
   |
77 |             HookPoint::Custom(name) => write!(f, "custom:{}", name),
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
77 -             HookPoint::Custom(name) => write!(f, "custom:{}", name),
77 +             HookPoint::Custom(name) => write!(f, "custom:{name}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-hooks/src/types.rs:78:18
   |
78 |             _ => write!(f, "{:?}", self),
   |                  ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
78 -             _ => write!(f, "{:?}", self),
78 +             _ => write!(f, "{self:?}"),
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-hooks/src/types.rs:112:5
    |
112 |     pub fn new(component_type: ComponentType, name: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(component_type: ComponentType, name: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/coordination/event_correlation.rs:544:5
    |
544 | /     async fn cleanup_expired_traces(&self, traces: &mut HashMap<CorrelationId, EventTrace>) {
545 | |         let retention_cutoff = SystemTime::now() - self.config.trace_retention;
546 | |         let initial_count = traces.len();
...   |
560 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/coordination/event_correlation.rs:563:5
    |
563 | /     async fn collect_event_metrics(&self, _component_id: &ComponentId) -> EventMetrics {
564 | |         // This would collect actual system metrics in a real implementation
565 | |         EventMetrics {
566 | |             memory_usage: None, // Would use a memory profiler
...   |
571 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/coordination/mod.rs:268:5
    |
268 | /     pub async fn execute_next_component(
269 | |         &self,
270 | |         correlation_id: &CorrelationId,
271 | |         hook_context: HookContext,
...   |
283 | |         Ok((HookResult::Continue, None))
284 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/inspector.rs:133:5
    |
133 | /     pub async fn analyze_executions(
134 | |         &self,
135 | |         executions: &[SerializedHookExecution],
136 | |     ) -> Result<ExecutionAnalysis> {
...   |
246 | |         })
247 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/inspector.rs:250:5
    |
250 | /     pub async fn detect_patterns(
251 | |         &self,
252 | |         executions: &[SerializedHookExecution],
253 | |     ) -> Result<Vec<ExecutionPattern>> {
...   |
271 | |         Ok(patterns)
272 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/replay_manager.rs:166:5
    |
166 | /     pub async fn start_replay_session(&self, config: ReplaySessionConfig) -> Result<String> {
167 | |         let session_name = config.name.clone();
168 | |         let session = ReplaySession {
169 | |             config,
...   |
182 | |         Ok(session_name)
183 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/replay_manager.rs:440:5
    |
440 | /     async fn handle_breakpoint(
441 | |         &self,
442 | |         _session: &mut ReplaySession,
443 | |         execution: &SerializedHookExecution,
...   |
452 | |         Ok(())
453 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/retention.rs:134:5
    |
134 | /     pub async fn apply_retention_policies(&self, hook_id: &str) -> Result<()> {
135 | |         let policy = self.get_policy(hook_id);
136 | |
137 | |         info!(
...   |
155 | |         Ok(())
156 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/storage.rs:212:5
    |
212 | /     pub async fn delete_metadata(&self, correlation_id: &Uuid) -> Result<()> {
213 | |         let key = self.generate_metadata_key(correlation_id);
214 | |         self.metadata_cache.write().remove(&key);
215 | |         Ok(())
216 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/persistence/storage.rs:219:5
    |
219 | /     pub async fn list_metadata_keys(&self, prefix: &str) -> Result<Vec<String>> {
220 | |         let cache = self.metadata_cache.read();
221 | |         let keys: Vec<String> = cache
222 | |             .keys()
...   |
226 | |         Ok(keys)
227 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-hooks/src/replay/scheduler.rs:340:5
    |
340 | /     async fn check_and_execute_replays(
341 | |         scheduled: &Arc<RwLock<HashMap<Uuid, ScheduledReplay>>>,
342 | |         queue: &Arc<RwLock<BinaryHeap<ScheduledReplay>>>,
343 | |     ) {
...   |
387 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: `llmspell-hooks` (lib) generated 665 warnings (run `cargo clippy --fix --lib -p llmspell-hooks` to apply 407 suggestions)
    Checking llmspell-state-persistence v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-state-persistence)
warning: unnecessary hashes around raw string literal
  --> llmspell-state-persistence/src/sensitive_data.rs:20:20
   |
20 |         Regex::new(r#"eyJ[a-zA-Z0-9_-]+\.eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+"#).unwrap(),
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_raw_string_hashes
   = note: `-W clippy::needless-raw-string-hashes` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_raw_string_hashes)]`
help: remove all the hashes around the string literal
   |
20 -         Regex::new(r#"eyJ[a-zA-Z0-9_-]+\.eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+"#).unwrap(),
20 +         Regex::new(r"eyJ[a-zA-Z0-9_-]+\.eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+").unwrap(),
   |

warning: item in documentation is missing backticks
 --> llmspell-state-persistence/src/lib.rs:7:48
  |
7 | //! - Multiple storage backends (Memory, Sled, RocksDB)
  |                                                ^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
7 - //! - Multiple storage backends (Memory, Sled, RocksDB)
7 + //! - Multiple storage backends (Memory, Sled, `RocksDB`)
  |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/agent_state.rs:97:5
   |
97 |     pub fn new(agent_id: String, agent_type: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(agent_id: String, agent_type: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/agent_state.rs:192:5
    |
192 |     pub fn safe_to_storage_bytes(&self) -> StateResult<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/agent_state.rs:201:5
    |
201 |     pub fn safe_from_storage_bytes(bytes: &[u8]) -> StateResult<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/agent_state.rs:210:5
    |
210 |     pub fn fast_to_bytes(&self) -> StateResult<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/agent_state.rs:218:5
    |
218 |     pub fn fast_from_bytes(bytes: &[u8]) -> StateResult<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/agent_state.rs:233:5
    |
233 |     fn get_persistent_state(&self) -> StateResult<PersistentAgentState>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/agent_state.rs:236:5
    |
236 |     fn apply_persistent_state(&self, state: PersistentAgentState) -> StateResult<()>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backend_adapter.rs:12:1
   |
12 | / pub async fn create_storage_backend(
13 | |     backend_type: &StorageBackendType,
14 | | ) -> StateResult<Arc<dyn StorageBackend>> {
   | |_________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backend_adapter.rs:51:5
   |
51 |     pub async fn store<T: StorageSerialize>(&self, key: &str, value: &T) -> StateResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backend_adapter.rs:64:5
   |
64 |     pub async fn load<T: StorageSerialize>(&self, key: &str) -> StateResult<Option<T>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backend_adapter.rs:79:5
   |
79 |     pub async fn delete(&self, key: &str) -> StateResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backend_adapter.rs:88:5
   |
88 |     pub async fn exists(&self, key: &str) -> StateResult<bool> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backend_adapter.rs:97:5
   |
97 |     pub async fn list_keys(&self, prefix: &str) -> StateResult<Vec<String>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backend_adapter.rs:120:5
    |
120 |     pub async fn clear_namespace(&self) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/backend_adapter.rs:134:33
    |
134 |     /// Fast store method using UnifiedSerializer for benchmark data
    |                                 ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
134 -     /// Fast store method using UnifiedSerializer for benchmark data
134 +     /// Fast store method using `UnifiedSerializer` for benchmark data
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backend_adapter.rs:135:5
    |
135 |     pub async fn store_fast<T: Serialize>(&self, key: &str, value: &T) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/backend_adapter.rs:145:32
    |
145 |     /// Fast load method using UnifiedSerializer
    |                                ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
145 -     /// Fast load method using UnifiedSerializer
145 +     /// Fast load method using `UnifiedSerializer`
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backend_adapter.rs:146:5
    |
146 | /     pub async fn load_fast<T: for<'de> Deserialize<'de>>(
147 | |         &self,
148 | |         key: &str,
149 | |     ) -> StateResult<Option<T>> {
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backup/atomic.rs:88:5
   |
88 | /     pub fn new(
89 | |         backup_id: String,
90 | |         state_manager: Arc<StateManager>,
91 | |         parent_backup: Option<String>,
92 | |     ) -> Result<Self> {
   | |_____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/atomic.rs:104:5
    |
104 |     pub fn builder(backup_id: String) -> AtomicBackupBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder(backup_id: String) -> AtomicBackupBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/atomic.rs:116:5
    |
116 |     pub async fn capture(&self) -> Result<Vec<u8>, StateError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/atomic.rs:228:37
    |
228 |                     let entry_key = format!("{}:{}", scope, key);
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
228 -                     let entry_key = format!("{}:{}", scope, key);
228 +                     let entry_key = format!("{scope}:{key}");
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/atomic.rs:245:27
    |
245 |     fn serialize_snapshot(&self, snapshot: &StateSnapshot) -> Result<Vec<u8>, StateError> {
    |                           ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/atomic.rs:251:5
    |
251 |     pub async fn restore(&self, snapshot_data: &[u8]) -> Result<(), StateError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: matching over `()` is more explicit
   --> llmspell-state-persistence/src/backup/atomic.rs:272:20
    |
272 |                 Ok(_) => {
    |                    ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns
    = note: `-W clippy::ignored-unit-patterns` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::ignored_unit_patterns)]`

warning: matching over `()` is more explicit
   --> llmspell-state-persistence/src/backup/atomic.rs:291:20
    |
291 |                 Ok(_) => {
    |                    ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/atomic.rs:309:5
    |
309 | /     pub async fn restore_with_progress<F>(
310 | |         &self,
311 | |         snapshot_data: &[u8],
312 | |         mut progress_callback: F,
313 | |     ) -> Result<(), StateError>
314 | |     where
315 | |         F: FnMut(usize, usize) + Send,
    | |______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: matching over `()` is more explicit
   --> llmspell-state-persistence/src/backup/atomic.rs:340:20
    |
340 |                 Ok(_) => {
    |                    ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: matching over `()` is more explicit
   --> llmspell-state-persistence/src/backup/atomic.rs:362:20
    |
362 |                 Ok(_) => {
    |                    ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/atomic.rs:400:5
    |
400 |     pub fn with_parent(mut self, parent_id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_parent(mut self, parent_id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/backup/atomic.rs:400:5
    |
400 | /     pub fn with_parent(mut self, parent_id: String) -> Self {
401 | |         self.parent_backup = Some(parent_id);
402 | |         self
403 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
    = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/atomic.rs:406:5
    |
406 |     pub fn include_scopes(mut self, scopes: Vec<StateScope>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn include_scopes(mut self, scopes: Vec<StateScope>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/backup/atomic.rs:406:5
    |
406 | /     pub fn include_scopes(mut self, scopes: Vec<StateScope>) -> Self {
407 | |         self.include_scopes = Some(scopes);
408 | |         self
409 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/atomic.rs:412:5
    |
412 |     pub fn exclude_scopes(mut self, scopes: Vec<StateScope>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn exclude_scopes(mut self, scopes: Vec<StateScope>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/backup/atomic.rs:412:5
    |
412 | /     pub fn exclude_scopes(mut self, scopes: Vec<StateScope>) -> Self {
413 | |         self.exclude_scopes = Some(scopes);
414 | |         self
415 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/atomic.rs:418:5
    |
418 |     pub fn include_patterns(mut self, patterns: Vec<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn include_patterns(mut self, patterns: Vec<String>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/backup/atomic.rs:418:5
    |
418 | /     pub fn include_patterns(mut self, patterns: Vec<String>) -> Self {
419 | |         self.include_patterns = Some(patterns);
420 | |         self
421 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/atomic.rs:424:5
    |
424 |     pub fn exclude_patterns(mut self, patterns: Vec<String>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn exclude_patterns(mut self, patterns: Vec<String>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/backup/atomic.rs:424:5
    |
424 | /     pub fn exclude_patterns(mut self, patterns: Vec<String>) -> Self {
425 | |         self.exclude_patterns = Some(patterns);
426 | |         self
427 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/atomic.rs:430:5
    |
430 |     pub fn build(self, state_manager: Arc<StateManager>) -> Result<AtomicBackup, StateError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/cleanup.rs:32:5
   |
32 |     pub fn new(backup_dir: PathBuf, dry_run: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(backup_dir: PathBuf, dry_run: bool) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backup/cleanup.rs:41:5
   |
41 | /     pub async fn execute_cleanup(
42 | |         &self,
43 | |         decisions: Vec<RetentionDecision>,
44 | |         backup_index: &HashMap<BackupId, BackupMetadata>,
45 | |     ) -> Result<CleanupResult, StateError> {
   | |__________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/cleanup.rs:125:48
    |
125 |         let backup_path = self.backup_dir.join(format!("{}.backup", backup_id));
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
125 -         let backup_path = self.backup_dir.join(format!("{}.backup", backup_id));
125 +         let backup_path = self.backup_dir.join(format!("{backup_id}.backup"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/cleanup.rs:126:50
    |
126 |         let metadata_path = self.backup_dir.join(format!("{}.meta", backup_id));
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
126 -         let metadata_path = self.backup_dir.join(format!("{}.meta", backup_id));
126 +         let metadata_path = self.backup_dir.join(format!("{backup_id}.meta"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/cleanup.rs:147:46
    |
147 |             .map_err(|e| StateError::storage(format!("Failed to delete backup file: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
147 -             .map_err(|e| StateError::storage(format!("Failed to delete backup file: {}", e)))?;
147 +             .map_err(|e| StateError::storage(format!("Failed to delete backup file: {e}")))?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/cleanup.rs:152:37
    |
152 |                 StateError::storage(format!("Failed to delete metadata file: {}", e))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
152 -                 StateError::storage(format!("Failed to delete metadata file: {}", e))
152 +                 StateError::storage(format!("Failed to delete metadata file: {e}"))
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/cleanup.rs:160:30
    |
160 |     fn generate_operation_id(&self) -> String {
    |                              ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/cleanup.rs:174:5
    |
174 |     pub async fn rollback_operation(&self, operation_id: &str) -> Result<(), StateError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/cleanup.rs:210:5
    |
210 |     pub fn is_success(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_success(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/cleanup.rs:239:5
    |
239 |     pub fn new(interval: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(interval: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backup/compression.rs:19:5
   |
19 |     pub fn new(level: u32) -> Result<Self, StateError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/compression.rs:29:5
   |
29 |     pub fn as_u32(&self) -> u32 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_u32(&self) -> u32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/compression.rs:34:5
   |
34 |     pub fn fast() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn fast() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/compression.rs:39:5
   |
39 |     pub fn default_level() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn default_level() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/compression.rs:44:5
   |
44 |     pub fn best() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn best() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/compression.rs:63:5
   |
63 |     pub fn new(compression_type: CompressionType, level: CompressionLevel) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(compression_type: CompressionType, level: CompressionLevel) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/backup/compression.rs:71:5
   |
71 |     pub fn compress(&self, data: &[u8]) -> Result<Vec<u8>, StateError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/compression.rs:106:5
    |
106 |     pub fn decompress(&self, data: &[u8]) -> Result<Vec<u8>, StateError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:133:46
    |
133 |             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
133 -             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))?;
133 +             .map_err(|e| StateError::storage(format!("Compression error: {e}")))?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:136:46
    |
136 |             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
136 -             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))
136 +             .map_err(|e| StateError::storage(format!("Compression error: {e}")))
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/compression.rs:140:24
    |
140 |     fn decompress_gzip(&self, data: &[u8]) -> Result<Vec<u8>, StateError> {
    |                        ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:147:46
    |
147 |             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
147 -             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))?;
147 +             .map_err(|e| StateError::storage(format!("Decompression error: {e}")))?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:156:46
    |
156 |             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
156 -             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))
156 +             .map_err(|e| StateError::storage(format!("Compression error: {e}")))
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/compression.rs:160:24
    |
160 |     fn decompress_zstd(&self, data: &[u8]) -> Result<Vec<u8>, StateError> {
    |                        ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:162:46
    |
162 |             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
162 -             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))
162 +             .map_err(|e| StateError::storage(format!("Decompression error: {e}")))
    |

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-state-persistence/src/backup/compression.rs:170:13
    |
170 |             4..=6 => 3, // Default
    |             ^^^^^^^^^^^^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-state-persistence/src/backup/compression.rs:172:13
    |
172 |             _ => 3,
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:180:42
    |
180 |         .map_err(|e| StateError::storage(format!("Compression error: {}", e)))
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
180 -         .map_err(|e| StateError::storage(format!("Compression error: {}", e)))
180 +         .map_err(|e| StateError::storage(format!("Compression error: {e}")))
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/compression.rs:184:23
    |
184 |     fn decompress_lz4(&self, data: &[u8]) -> Result<Vec<u8>, StateError> {
    |                       ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:186:46
    |
186 |             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
186 -             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))
186 +             .map_err(|e| StateError::storage(format!("Decompression error: {e}")))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:199:46
    |
199 |             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
199 -             .map_err(|e| StateError::storage(format!("Compression error: {}", e)))?;
199 +             .map_err(|e| StateError::storage(format!("Compression error: {e}")))?;
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/compression.rs:205:26
    |
205 |     fn decompress_brotli(&self, data: &[u8]) -> Result<Vec<u8>, StateError> {
    |                          ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/compression.rs:208:46
    |
208 |             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
208 -             .map_err(|e| StateError::storage(format!("Decompression error: {}", e)))?;
208 +             .map_err(|e| StateError::storage(format!("Decompression error: {e}")))?;
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/compression.rs:214:5
    |
214 |     pub fn analyze_compression(&self, data: &[u8]) -> CompressionAnalysis {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn analyze_compression(&self, data: &[u8]) -> CompressionAnalysis`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be rewritten as `let...else`
   --> llmspell-state-persistence/src/backup/compression.rs:218:9
    |
218 | /         let compressed = match self.compress(data) {
219 | |             Ok(c) => c,
220 | |             Err(_) => {
221 | |                 return CompressionAnalysis {
...   |
232 | |         };
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else
    = note: `-W clippy::manual-let-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::manual_let_else)]`
help: consider writing
    |
218 ~         let Ok(compressed) = self.compress(data) else {
219 +                 return CompressionAnalysis {
220 +                     original_size,
221 +                     compressed_size: original_size,
222 +                     compression_ratio: 0.0,
223 +                     compression_time_ms: 0,
224 +                     estimated_decompression_time_ms: 0,
225 +                     algorithm: self.compression_type,
226 +                     level: self.compression_level,
227 +                     is_compressible: false,
228 +                 };
229 +             };
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/compression.rs:281:1
    |
281 | / pub fn find_optimal_compression(
282 | |     data: &[u8],
283 | |     max_time_ms: u64,
284 | | ) -> Result<(CompressionType, CompressionLevel), StateError> {
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/backup/events.rs:144:20
    |
144 |     /// Convert to UniversalEvent for EventBus
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
144 -     /// Convert to UniversalEvent for EventBus
144 +     /// Convert to `UniversalEvent` for EventBus
    |

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/backup/events.rs:144:39
    |
144 |     /// Convert to UniversalEvent for EventBus
    |                                       ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
144 -     /// Convert to UniversalEvent for EventBus
144 +     /// Convert to UniversalEvent for `EventBus`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:145:5
    |
145 |     pub fn to_universal_event(&self) -> UniversalEvent {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_universal_event(&self) -> UniversalEvent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:188:5
    |
188 |     pub fn correlation_id(&self) -> Uuid {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn correlation_id(&self) -> Uuid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:216:5
    |
216 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:223:5
    |
223 |     pub fn with_correlation_id(correlation_id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_correlation_id(correlation_id: Uuid) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:228:5
    |
228 | /     pub fn backup_started(
229 | |         &self,
230 | |         backup_id: BackupId,
231 | |         backup_type: BackupType,
232 | |         parent_id: Option<BackupId>,
233 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
228 ~     #[must_use] pub fn backup_started(
229 +         &self,
230 +         backup_id: BackupId,
231 +         backup_type: BackupType,
232 +         parent_id: Option<BackupId>,
233 ~     ) -> BackupEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:243:5
    |
243 | /     pub fn backup_progress(
244 | |         &self,
245 | |         backup_id: BackupId,
246 | |         entries_processed: usize,
...   |
249 | |         compression_ratio: Option<f64>,
250 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
243 ~     #[must_use] pub fn backup_progress(
244 +         &self,
245 +         backup_id: BackupId,
246 +         entries_processed: usize,
247 +         total_entries: usize,
248 +         bytes_processed: u64,
249 +         compression_ratio: Option<f64>,
250 ~     ) -> BackupEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:262:5
    |
262 | /     pub fn restore_started(
263 | |         &self,
264 | |         backup_id: BackupId,
265 | |         restore_chain: Vec<BackupId>,
266 | |         dry_run: bool,
267 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
262 ~     #[must_use] pub fn restore_started(
263 +         &self,
264 +         backup_id: BackupId,
265 +         restore_chain: Vec<BackupId>,
266 +         dry_run: bool,
267 ~     ) -> BackupEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:277:5
    |
277 | /     pub fn restore_progress(
278 | |         &self,
279 | |         backup_id: BackupId,
280 | |         current_backup_index: usize,
...   |
283 | |         total_entries: usize,
284 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
277 ~     #[must_use] pub fn restore_progress(
278 +         &self,
279 +         backup_id: BackupId,
280 +         current_backup_index: usize,
281 +         total_backups: usize,
282 +         entries_restored: usize,
283 +         total_entries: usize,
284 ~     ) -> BackupEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:296:5
    |
296 | /     pub fn cleanup_started(
297 | |         &self,
298 | |         total_backups: usize,
299 | |         retention_policy: String,
300 | |         dry_run: bool,
301 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
296 ~     #[must_use] pub fn cleanup_started(
297 +         &self,
298 +         total_backups: usize,
299 +         retention_policy: String,
300 +         dry_run: bool,
301 ~     ) -> BackupEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:311:5
    |
311 | /     pub fn backup_deleted(
312 | |         &self,
313 | |         backup_id: BackupId,
314 | |         size_freed: u64,
315 | |         reason: String,
316 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
311 ~     #[must_use] pub fn backup_deleted(
312 +         &self,
313 +         backup_id: BackupId,
314 +         size_freed: u64,
315 +         reason: String,
316 ~     ) -> BackupEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/events.rs:326:5
    |
326 | /     pub fn cleanup_completed(
327 | |         &self,
328 | |         evaluated_count: usize,
329 | |         deleted_count: usize,
...   |
332 | |         duration: Duration,
333 | |     ) -> BackupEvent {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
326 ~     #[must_use] pub fn cleanup_completed(
327 +         &self,
328 +         evaluated_count: usize,
329 +         deleted_count: usize,
330 +         retained_count: usize,
331 +         space_freed: u64,
332 +         duration: Duration,
333 ~     ) -> BackupEvent {
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:158:5
    |
158 |     pub fn new(config: BackupConfig, state_manager: Arc<StateManager>) -> Result<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:176:5
    |
176 |     pub async fn create_backup(&self, incremental: bool) -> BackupResult<BackupStatus> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:209:43
    |
209 |                   StateError::serialization(format!(
    |  ___________________________________________^
210 | |                     "Failed to deserialize snapshot for metadata: {}",
211 | |                     e
212 | |                 ))
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: casts from `u8` to `u32` can be expressed infallibly using `From`
   --> llmspell-state-persistence/src/backup/manager.rs:221:24
    |
221 |                 level: self.config.compression_level as u32,
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `u32::from` instead
    |
221 -                 level: self.config.compression_level as u32,
221 +                 level: u32::from(self.config.compression_level),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:234:46
    |
234 |             .map_err(|e| StateError::storage(format!("Failed to write backup file: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
234 -             .map_err(|e| StateError::storage(format!("Failed to write backup file: {}", e)))?;
234 +             .map_err(|e| StateError::storage(format!("Failed to write backup file: {e}")))?;
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:290:5
    |
290 | /     pub async fn restore_backup(
291 | |         &self,
292 | |         backup_id: &str,
293 | |         options: RestoreOptions,
294 | |     ) -> BackupResult<()> {
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:342:5
    |
342 |     pub async fn list_backups(&self) -> BackupResult<Vec<BackupStatus>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:367:5
    |
367 |     pub async fn validate_backup(&self, backup_id: &str) -> BackupResult<BackupValidation> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:377:29
    |
377 |                 errors.push(format!("Failed to load metadata: {}", e));
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
377 -                 errors.push(format!("Failed to load metadata: {}", e));
377 +                 errors.push(format!("Failed to load metadata: {e}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:394:29
    |
394 |                 errors.push(format!("Failed to read backup file: {}", e));
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
394 -                 errors.push(format!("Failed to read backup file: {}", e));
394 +                 errors.push(format!("Failed to read backup file: {e}"));
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/manager.rs:435:27
    |
435 |     fn generate_backup_id(&self) -> BackupId {
    |                           ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: use of `format!` to build up a string from an iterator
   --> llmspell-state-persistence/src/backup/manager.rs:440:37
    |
440 |           let random_suffix: String = (0..8)
    |  _____________________________________^
441 | |             .map(|_| format!("{:x}", rand::random::<u8>()))
442 | |             .collect();
    | |______________________^
    |
help: call `fold` instead
   --> llmspell-state-persistence/src/backup/manager.rs:441:14
    |
441 |             .map(|_| format!("{:x}", rand::random::<u8>()))
    |              ^^^
help: ... and use the `write!` macro here
   --> llmspell-state-persistence/src/backup/manager.rs:441:22
    |
441 |             .map(|_| format!("{:x}", rand::random::<u8>()))
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: this can be written more efficiently by appending to a `String` directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_collect
    = note: `-W clippy::format-collect` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_collect)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:443:9
    |
443 |         format!("backup_{}_{}", timestamp, random_suffix)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
443 -         format!("backup_{}_{}", timestamp, random_suffix)
443 +         format!("backup_{timestamp}_{random_suffix}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:457:37
    |
457 |         self.config.backup_dir.join(format!("{}.backup", backup_id))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
457 -         self.config.backup_dir.join(format!("{}.backup", backup_id))
457 +         self.config.backup_dir.join(format!("{backup_id}.backup"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:465:48
    |
465 |             .ok_or_else(|| StateError::storage(format!("Backup not found: {}", backup_id)))
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
465 -             .ok_or_else(|| StateError::storage(format!("Backup not found: {}", backup_id)))
465 +             .ok_or_else(|| StateError::storage(format!("Backup not found: {backup_id}")))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:471:39
    |
471 |             StateError::serialization(format!("Failed to serialize metadata: {}", e))
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
471 -             StateError::serialization(format!("Failed to serialize metadata: {}", e))
471 +             StateError::serialization(format!("Failed to serialize metadata: {e}"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:475:46
    |
475 |             .map_err(|e| StateError::storage(format!("Failed to write metadata file: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
475 -             .map_err(|e| StateError::storage(format!("Failed to write metadata file: {}", e)))?;
475 +             .map_err(|e| StateError::storage(format!("Failed to write metadata file: {e}")))?;
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/manager.rs:479:28
    |
479 |     fn calculate_checksums(&self, data: &[u8]) -> HashMap<String, String> {
    |                            ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:484:48
    |
484 |         checksums.insert("sha256".to_string(), format!("{:x}", hash));
    |                                                ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
484 -         checksums.insert("sha256".to_string(), format!("{:x}", hash));
484 +         checksums.insert("sha256".to_string(), format!("{hash:x}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/manager.rs:566:46
    |
566 |             .map_err(|e| StateError::storage(format!("Failed to read backup: {}", e)))?;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
566 -             .map_err(|e| StateError::storage(format!("Failed to read backup: {}", e)))?;
566 +             .map_err(|e| StateError::storage(format!("Failed to read backup: {e}")))?;
    |

warning: this function's return value is unnecessary
   --> llmspell-state-persistence/src/backup/manager.rs:618:5
    |
618 | /     fn load_backup_index(&mut self) -> Result<()> {
619 | |         // Load existing backup metadata from disk
620 | |         let mut loaded_backups = Vec::new();
...   |
650 | |         Ok(())
651 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove the return type...
    |
618 -     fn load_backup_index(&mut self) -> Result<()> {
618 +     fn load_backup_index(&mut self) -> () {
    |
help: ...and then remove returned values
    |
650 -         Ok(())
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:654:5
    |
654 |     pub async fn apply_retention_policies(&self) -> BackupResult<RetentionReport> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/manager.rs:776:5
    |
776 |     pub async fn cleanup_backups(&self) -> BackupResult<RetentionReport> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/recovery.rs:97:5
   |
97 |     pub fn new(backup_manager: Arc<BackupManager>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(backup_manager: Arc<BackupManager>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/recovery.rs:106:5
    |
106 | /     pub async fn recover(
107 | |         &mut self,
108 | |         target_backup: &str,
109 | |         options: AdvancedRecoveryOptions,
110 | |     ) -> Result<RecoveryStatus, StateError> {
    | |___________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/recovery.rs:139:40
    |
139 |                     status.errors.push(format!("Validation failed: {}", e));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
139 -                     status.errors.push(format!("Validation failed: {}", e));
139 +                     status.errors.push(format!("Validation failed: {e}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/recovery.rs:159:31
    |
159 |                         .push(format!("Rollback point creation failed: {}", e));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
159 -                         .push(format!("Rollback point creation failed: {}", e));
159 +                         .push(format!("Rollback point creation failed: {e}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/recovery.rs:197:35
    |
197 | ...                   .push(format!("Rollback failed: {}", rollback_err));
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
197 -                             .push(format!("Rollback failed: {}", rollback_err));
197 +                             .push(format!("Rollback failed: {rollback_err}"));
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/backup/recovery.rs:277:5
    |
277 |     pub async fn rollback(&mut self) -> Result<(), StateError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/retention.rs:55:5
   |
55 |     pub fn new(max_age: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(max_age: Duration) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: returning a `str` unnecessarily tied to the lifetime of arguments
  --> llmspell-state-persistence/src/backup/retention.rs:82:23
   |
82 |     fn name(&self) -> &str {
   |                       ^^^^ help: try: `&'static str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound
   = note: `-W clippy::unnecessary-literal-bound` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_literal_bound)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/backup/retention.rs:93:5
   |
93 |     pub fn new(max_count: usize) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(max_count: usize) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: returning a `str` unnecessarily tied to the lifetime of arguments
   --> llmspell-state-persistence/src/backup/retention.rs:124:23
    |
124 |     fn name(&self) -> &str {
    |                       ^^^^ help: try: `&'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/retention.rs:133:5
    |
133 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unused `self` argument
   --> llmspell-state-persistence/src/backup/retention.rs:170:9
    |
170 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/backup/retention.rs:204:21
    |
204 |             reason: format!("Importance: {:?}", priority),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
204 -             reason: format!("Importance: {:?}", priority),
204 +             reason: format!("Importance: {priority:?}"),
    |

warning: returning a `str` unnecessarily tied to the lifetime of arguments
   --> llmspell-state-persistence/src/backup/retention.rs:208:23
    |
208 |     fn name(&self) -> &str {
    |                       ^^^^ help: try: `&'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/retention.rs:219:5
    |
219 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/backup/retention.rs:225:5
    |
225 |     pub fn add_policy(mut self, policy: Box<dyn RetentionPolicy>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_policy(mut self, policy: Box<dyn RetentionPolicy>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/backup/retention.rs:225:5
    |
225 | /     pub fn add_policy(mut self, policy: Box<dyn RetentionPolicy>) -> Self {
226 | |         self.policies.push(policy);
227 | |         self
228 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: returning a `str` unnecessarily tied to the lifetime of arguments
   --> llmspell-state-persistence/src/backup/retention.rs:278:23
    |
278 |     fn name(&self) -> &str {
    |                       ^^^^ help: try: `&'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_literal_bound

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/circular_ref.rs:22:5
   |
22 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/circular_ref.rs:27:5
   |
27 |     pub fn check_value(&mut self, value: &Value) -> Result<(), CircularReferenceError> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/circular_ref.rs:55:38
   |
55 |                     let field_path = format!("{}.{}", path, key);
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
55 -                     let field_path = format!("{}.{}", path, key);
55 +                     let field_path = format!("{path}.{key}");
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/circular_ref.rs:67:37
   |
67 |                     let elem_path = format!("{}[{}]", path, idx);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
67 -                     let elem_path = format!("{}[{}]", path, idx);
67 +                     let elem_path = format!("{path}[{idx}]");
   |

warning: unused `self` argument
  --> llmspell-state-persistence/src/circular_ref.rs:81:20
   |
81 |     fn hash_object(&self, map: &serde_json::Map<String, Value>) -> u64 {
   |                    ^^^^^
   |
   = help: consider refactoring to an associated function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/circular_ref.rs:105:5
    |
105 |     fn check_circular_references(&self) -> Result<(), CircularReferenceError>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/circular_ref.rs:121:1
    |
121 | pub fn safe_serialize<T: Serialize>(value: &T) -> Result<Vec<u8>, String> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/circular_ref.rs:124:20
    |
124 |         return Err(format!("Circular reference detected: {}", e));
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
124 -         return Err(format!("Circular reference detected: {}", e));
124 +         return Err(format!("Circular reference detected: {e}"));
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/circular_ref.rs:132:1
    |
132 | pub fn safe_to_json<T: Serialize>(value: &T) -> Result<Value, String> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/circular_ref.rs:135:20
    |
135 |         return Err(format!("Circular reference detected: {}", e));
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
135 -         return Err(format!("Circular reference detected: {}", e));
135 +         return Err(format!("Circular reference detected: {e}"));
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/config.rs:37:5
   |
37 |     pub fn builder() -> PersistenceConfigBuilder {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> PersistenceConfigBuilder`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/config.rs:50:5
   |
50 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/config.rs:113:5
    |
113 |     pub fn build(self) -> PersistenceConfig {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> PersistenceConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/config.rs:195:5
    |
195 |     pub fn v1() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn v1() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/config.rs:288:5
    |
288 |     pub fn extension(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn extension(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/hooks.rs:134:1
    |
134 | pub fn aggregate_hook_results(results: &[HookResult]) -> HookResult {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn aggregate_hook_results(results: &[HookResult]) -> HookResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/key_manager.rs:11:5
   |
11 |     pub fn validate_key(key: &str) -> StateResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: single-character string constant used as pattern
  --> llmspell-state-persistence/src/key_manager.rs:25:47
   |
25 |         if key.contains("..") || key.contains("\\") || key.contains("//") {
   |                                               ^^^^ help: consider using a `char`: `'\\'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/key_manager.rs:49:5
   |
49 |     pub fn create_scoped_key(scope: &StateScope, key: &str) -> StateResult<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/key_manager.rs:66:5
   |
66 |     pub fn extract_key(scoped_key: &str, scope: &StateScope) -> Option<String> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn extract_key(scoped_key: &str, scope: &StateScope) -> Option<String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/key_manager.rs:76:5
   |
76 |     pub fn belongs_to_scope(scoped_key: &str, scope: &StateScope) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn belongs_to_scope(scoped_key: &str, scope: &StateScope) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-state-persistence/src/key_manager.rs:87:5
   |
87 |     pub fn generate_internal_key(prefix: &str, id: &str) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-state-persistence/src/key_manager.rs:88:25
   |
88 |           let timestamp = std::time::SystemTime::now()
   |  _________________________^
89 | |             .duration_since(std::time::UNIX_EPOCH)
90 | |             .unwrap()
   | |_____________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/key_manager.rs:87:5
   |
87 |     pub fn generate_internal_key(prefix: &str, id: &str) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_internal_key(prefix: &str, id: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/key_manager.rs:93:9
   |
93 |         format!("__{}:{}:{}", prefix, id, timestamp)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
93 -         format!("__{}:{}:{}", prefix, id, timestamp)
93 +         format!("__{prefix}:{id}:{timestamp}")
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/key_manager.rs:97:5
   |
97 |     pub fn sanitize_key(key: &str) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn sanitize_key(key: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/key_manager.rs:121:5
    |
121 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/key_manager.rs:140:5
    |
140 | /     pub fn has_permission(
141 | |         &self,
142 | |         agent_id: &str,
143 | |         scope: &StateScope,
144 | |         permission: &StatePermission,
145 | |     ) -> bool {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
140 ~     #[must_use] pub fn has_permission(
141 +         &self,
142 +         agent_id: &str,
143 +         scope: &StateScope,
144 +         permission: &StatePermission,
145 ~     ) -> bool {
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/manager.rs:56:5
   |
56 |     pub fn new(storage_adapter: Arc<StateStorageAdapter>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(storage_adapter: Arc<StateStorageAdapter>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/manager.rs:60:5
   |
60 | /     pub async fn persist_hook_execution(
61 | |         &self,
62 | |         hook: &dyn ReplayableHook,
63 | |         context: &HookContext,
64 | |         result: &HookResult,
65 | |         duration: Duration,
66 | |     ) -> StateResult<()> {
   | |________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/manager.rs:89:5
   |
89 | /     pub async fn get_hook_executions_by_correlation(
90 | |         &self,
91 | |         correlation_id: Uuid,
92 | |     ) -> StateResult<Vec<SerializedHookExecution>> {
   | |__________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/manager.rs:93:22
   |
93 |         let prefix = format!("hook_history:{}:", correlation_id);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
93 -         let prefix = format!("hook_history:{}:", correlation_id);
93 +         let prefix = format!("hook_history:{correlation_id}:");
   |

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/manager.rs:107:14
    |
107 | /// Enhanced StateManager with persistent backend
    |              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
107 - /// Enhanced StateManager with persistent backend
107 + /// Enhanced `StateManager` with persistent backend
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:150:5
    |
150 |     pub async fn new() -> StateResult<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:159:5
    |
159 |     pub async fn new_benchmark() -> StateResult<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:199:5
    |
199 | /     pub async fn with_backend(
200 | |         backend_type: crate::config::StorageBackendType,
201 | |         config: PersistenceConfig,
202 | |     ) -> StateResult<Self> {
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:274:5
    |
274 | /     pub async fn set_with_hooks(
275 | |         &self,
276 | |         scope: StateScope,
277 | |         key: &str,
278 | |         value: Value,
279 | |     ) -> StateResult<()> {
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unnecessary boolean `not` operation
   --> llmspell-state-persistence/src/manager.rs:337:27
    |
337 |           let pre_results = if !before_hooks.is_empty() {
    |  ___________________________^
338 | |             self.hook_executor
339 | |                 .execute_hooks(&before_hooks, &mut hook_context)
340 | |                 .await
...   |
343 | |             vec![]
344 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::if_not_else)]`
help: try
    |
337 ~         let pre_results = if before_hooks.is_empty() {
338 +             vec![]
339 +         } else {
340 +             self.hook_executor
341 +                 .execute_hooks(&before_hooks, &mut hook_context)
342 +                 .await
343 +                 .map_err(|e| StateError::hook_error(e.to_string()))?
344 ~         };
    |

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-state-persistence/src/manager.rs:348:13
    |
348 | /             HookResult::Continue => value,
349 | |             HookResult::Modified(new_data) => new_data
    | |____________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-state-persistence/src/manager.rs:358:13
    |
358 |             _ => value,
    |             ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: unnecessary boolean `not` operation
   --> llmspell-state-persistence/src/manager.rs:463:27
    |
463 |           let pre_results = if !hooks_to_execute.is_empty() {
    |  ___________________________^
464 | |             self.hook_executor
465 | |                 .execute_hooks(&hooks_to_execute, &mut hook_context)
466 | |                 .await
...   |
469 | |             vec![]
470 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
463 ~         let pre_results = if hooks_to_execute.is_empty() {
464 +             vec![]
465 +         } else {
466 +             self.hook_executor
467 +                 .execute_hooks(&hooks_to_execute, &mut hook_context)
468 +                 .await
469 +                 .map_err(|e| StateError::hook_error(e.to_string()))?
470 ~         };
    |

warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-state-persistence/src/manager.rs:474:13
    |
474 | /             HookResult::Continue => value,
475 | |             HookResult::Modified(new_data) => new_data
    | |____________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-state-persistence/src/manager.rs:484:13
    |
484 |             _ => value,
    |             ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:552:5
    |
552 |     pub async fn set(&self, scope: StateScope, key: &str, value: Value) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:557:5
    |
557 | /     pub async fn set_with_class(
558 | |         &self,
559 | |         scope: StateScope,
560 | |         key: &str,
561 | |         value: Value,
562 | |         class: Option<StateClass>,
563 | |     ) -> StateResult<()> {
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:660:5
    |
660 |     pub async fn get(&self, scope: StateScope, key: &str) -> StateResult<Option<Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:665:5
    |
665 | /     pub async fn get_with_class(
666 | |         &self,
667 | |         scope: StateScope,
668 | |         key: &str,
669 | |         class: Option<StateClass>,
670 | |     ) -> StateResult<Option<Value>> {
    | |___________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:755:5
    |
755 |     pub async fn delete(&self, scope: StateScope, key: &str) -> StateResult<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:773:5
    |
773 |     pub async fn list_keys(&self, scope: StateScope) -> StateResult<Vec<String>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:796:5
    |
796 |     pub async fn clear_scope(&self, scope: StateScope) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/manager.rs:845:5
    |
845 | /     pub async fn save_agent_state(
846 | |         &self,
847 | |         agent_state: &crate::agent_state::PersistentAgentState,
848 | |     ) -> StateResult<()> {
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1079:5
     |
1079 | /     pub async fn load_agent_state(
1080 | |         &self,
1081 | |         agent_id: &str,
1082 | |     ) -> StateResult<Option<crate::agent_state::PersistentAgentState>> {
     | |______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1088:19
     |
1088 |         let key = format!("agent_state:{}", agent_id);
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1088 -         let key = format!("agent_state:{}", agent_id);
1088 +         let key = format!("agent_state:{agent_id}");
     |

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1105:5
     |
1105 |     pub async fn delete_agent_state(&self, agent_id: &str) -> StateResult<bool> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1106:19
     |
1106 |         let key = format!("agent_state:{}", agent_id);
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1106 -         let key = format!("agent_state:{}", agent_id);
1106 +         let key = format!("agent_state:{agent_id}");
     |

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1193:5
     |
1193 |     pub async fn list_agent_states(&self) -> StateResult<Vec<String>> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: redundant closure
    --> llmspell-state-persistence/src/manager.rs:1200:56
     |
1200 |             .filter_map(|k| k.strip_prefix(prefix).map(|s| s.to_string()))
     |                                                        ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
     = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1205:5
     |
1205 | /     pub async fn get_agent_metadata(
1206 | |         &self,
1207 | |         agent_id: &str,
1208 | |     ) -> StateResult<Option<crate::agent_state::AgentMetadata>> {
     | |_______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1242:5
     |
1242 | /     pub async fn load_agent_state_fast(
1243 | |         &self,
1244 | |         agent_id: &str,
1245 | |     ) -> StateResult<Option<crate::agent_state::PersistentAgentState>> {
     | |______________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1253:23
     |
1253 |             let key = format!("agent_state:{}", agent_id);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1253 -             let key = format!("agent_state:{}", agent_id);
1253 +             let key = format!("agent_state:{agent_id}");
     |

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1263:5
     |
1263 |     pub async fn get_scoped(&self, scope: StateScope, key: &str) -> StateResult<Option<Value>> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1268:5
     |
1268 |     pub async fn set_scoped(&self, scope: StateScope, key: &str, value: Value) -> StateResult<()> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1273:5
     |
1273 |     pub async fn delete_scoped(&self, scope: StateScope, key: &str) -> StateResult<bool> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1278:5
     |
1278 |     pub async fn list_keys_in_scope(&self, scope: StateScope) -> StateResult<Vec<String>> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1283:5
     |
1283 |     pub async fn exists_in_scope(&self, scope: StateScope, key: &str) -> StateResult<bool> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1303:5
     |
1303 |     pub async fn get_all_in_scope(&self, scope: StateScope) -> StateResult<HashMap<String, Value>> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1317:5
     |
1317 |     pub async fn clear_scope_count(&self, scope: StateScope) -> StateResult<usize> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1329:5
     |
1329 | /     pub async fn copy_scope(
1330 | |         &self,
1331 | |         from_scope: StateScope,
1332 | |         to_scope: StateScope,
1333 | |     ) -> StateResult<usize> {
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1345:5
     |
1345 | /     pub async fn move_scope(
1346 | |         &self,
1347 | |         from_scope: StateScope,
1348 | |         to_scope: StateScope,
1349 | |     ) -> StateResult<usize> {
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unused `self` argument
    --> llmspell-state-persistence/src/manager.rs:1357:9
     |
1357 |         &self,
     |         ^^^^^
     |
     = help: consider refactoring to an associated function
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: it is more idiomatic to use `Option<&T>` instead of `&Option<T>`
    --> llmspell-state-persistence/src/manager.rs:1356:5
     |
1356 | /     fn create_state_change_event(
1357 | |         &self,
1358 | |         event_type: &str,
1359 | |         scope: &StateScope,
1360 | |         key: &str,
1361 | |         old_value: &Option<Value>,
     | |                    -------------- help: change this to: `Option<&Value>`
...    |
1376 | |             .with_tag("state_change")
1377 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_option
     = note: `-W clippy::ref-option` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::ref_option)]`

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1392:5
     |
1392 | /     pub fn save_agent_state_benchmark_sync(
1393 | |         &self,
1394 | |         agent_state: &crate::agent_state::PersistentAgentState,
1395 | |     ) -> StateResult<()> {
     | |________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1404:5
     |
1404 |     pub fn enable_async_hooks(&mut self) -> StateResult<()> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1415:5
     |
1415 |     pub async fn disable_async_hooks(&mut self) -> StateResult<()> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
    --> llmspell-state-persistence/src/manager.rs:1428:48
     |
1428 |     /// Start async hook processing (alias for enable_async_hooks for compatibility)
     |                                                ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
     |
1428 -     /// Start async hook processing (alias for enable_async_hooks for compatibility)
1428 +     /// Start async hook processing (alias for `enable_async_hooks` for compatibility)
     |

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1429:5
     |
1429 |     pub async fn start_async_hooks(&mut self) -> StateResult<()> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
    --> llmspell-state-persistence/src/manager.rs:1433:47
     |
1433 |     /// Stop async hook processing (alias for disable_async_hooks for compatibility)
     |                                               ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
     |
1433 -     /// Stop async hook processing (alias for disable_async_hooks for compatibility)
1433 +     /// Stop async hook processing (alias for `disable_async_hooks` for compatibility)
     |

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1434:5
     |
1434 |     pub async fn stop_async_hooks(&mut self) -> StateResult<()> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1440:5
     |
1440 |     pub async fn wait_for_hooks(&self, timeout: Duration) -> StateResult<()> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1460:5
     |
1460 | /     pub fn configure_hook_batching(
1461 | |         &mut self,
1462 | |         _batch_size: usize,
1463 | |         _batch_timeout: Duration,
1464 | |     ) -> StateResult<()> {
     | |________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1471:5
     |
1471 | /     pub async fn set_with_async_hooks_public(
1472 | |         &self,
1473 | |         key: &str,
1474 | |         value: Value,
1475 | |         class: StateClass,
1476 | |         hooks: Vec<Arc<dyn Hook>>,
1477 | |     ) -> StateResult<()> {
     | |________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1512:5
     |
1512 | /     pub async fn save_agent_state_with_hooks(
1513 | |         &self,
1514 | |         agent_id: &str,
1515 | |         agent_state: Value,
1516 | |         hooks: Vec<Arc<dyn Hook>>,
1517 | |     ) -> StateResult<()> {
     | |________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: calling `ToolUsageStats::default()` is more clear than this expression
    --> llmspell-state-persistence/src/manager.rs:1522:31
     |
1522 |             tool_usage_stats: Default::default(),
     |                               ^^^^^^^^^^^^^^^^^^ help: try: `ToolUsageStats::default()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
     = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: docs for function which may panic missing `# Panics` section
    --> llmspell-state-persistence/src/manager.rs:1596:5
     |
1596 | /     pub async fn track_artifact_in_state(
1597 | |         &self,
1598 | |         scope: StateScope,
1599 | |         key: &str,
1600 | |         artifact_id: ArtifactId,
1601 | |         operation: StateOperation,
1602 | |     ) -> StateResult<()> {
     | |________________________^
     |
note: first possible panic found here
    --> llmspell-state-persistence/src/manager.rs:1637:26
     |
1637 |               "timestamp": SystemTime::now()
     |  __________________________^
1638 | |                 .duration_since(SystemTime::UNIX_EPOCH)
1639 | |                 .unwrap()
     | |_________________________^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-state-persistence/src/manager.rs:1596:5
     |
1596 | /     pub async fn track_artifact_in_state(
1597 | |         &self,
1598 | |         scope: StateScope,
1599 | |         key: &str,
1600 | |         artifact_id: ArtifactId,
1601 | |         operation: StateOperation,
1602 | |     ) -> StateResult<()> {
     | |________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1605:66
     |
1605 |             StateScope::Agent(id) => CoreComponentId::from_name(&format!("agent:{}", id)),
     |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1605 -             StateScope::Agent(id) => CoreComponentId::from_name(&format!("agent:{}", id)),
1605 +             StateScope::Agent(id) => CoreComponentId::from_name(&format!("agent:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1606:65
     |
1606 |             StateScope::Tool(id) => CoreComponentId::from_name(&format!("tool:{}", id)),
     |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1606 -             StateScope::Tool(id) => CoreComponentId::from_name(&format!("tool:{}", id)),
1606 +             StateScope::Tool(id) => CoreComponentId::from_name(&format!("tool:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1607:69
     |
1607 |             StateScope::Workflow(id) => CoreComponentId::from_name(&format!("workflow:{}", id)),
     |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1607 -             StateScope::Workflow(id) => CoreComponentId::from_name(&format!("workflow:{}", id)),
1607 +             StateScope::Workflow(id) => CoreComponentId::from_name(&format!("workflow:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1608:67
     |
1608 |             StateScope::Custom(id) => CoreComponentId::from_name(&format!("custom:{}", id)),
     |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1608 -             StateScope::Custom(id) => CoreComponentId::from_name(&format!("custom:{}", id)),
1608 +             StateScope::Custom(id) => CoreComponentId::from_name(&format!("custom:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1610:68
     |
1610 |             StateScope::Session(id) => CoreComponentId::from_name(&format!("session:{}", id)),
     |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1610 -             StateScope::Session(id) => CoreComponentId::from_name(&format!("session:{}", id)),
1610 +             StateScope::Session(id) => CoreComponentId::from_name(&format!("session:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1611:65
     |
1611 |             StateScope::User(id) => CoreComponentId::from_name(&format!("user:{}", id)),
     |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1611 -             StateScope::User(id) => CoreComponentId::from_name(&format!("user:{}", id)),
1611 +             StateScope::User(id) => CoreComponentId::from_name(&format!("user:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1612:65
     |
1612 |             StateScope::Hook(id) => CoreComponentId::from_name(&format!("hook:{}", id)),
     |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1612 -             StateScope::Hook(id) => CoreComponentId::from_name(&format!("hook:{}", id)),
1612 +             StateScope::Hook(id) => CoreComponentId::from_name(&format!("hook:{id}")),
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-state-persistence/src/manager.rs:1633:28
     |
1633 |         let artifact_key = format!("artifact:{}:{}", key, artifact_id_str);
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1633 -         let artifact_key = format!("artifact:{}:{}", key, artifact_id_str);
1633 +         let artifact_key = format!("artifact:{key}:{artifact_id_str}");
     |

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/migration/engine.rs:49:52
   |
49 | /// Migration engine that integrates with existing StateManager infrastructure
   |                                                    ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
49 - /// Migration engine that integrates with existing StateManager infrastructure
49 + /// Migration engine that integrates with existing `StateManager` infrastructure
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/engine.rs:76:5
   |
76 | /     pub fn new(
77 | |         storage_adapter: Arc<StateStorageAdapter>,
78 | |         schema_registry: SchemaRegistry,
79 | |         hook_executor: Arc<HookExecutor>,
80 | |         correlation_tracker: Arc<EventCorrelationTracker>,
81 | |         event_bus: Arc<EventBus>,
82 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
76 ~     #[must_use] pub fn new(
77 +         storage_adapter: Arc<StateStorageAdapter>,
78 +         schema_registry: SchemaRegistry,
79 +         hook_executor: Arc<HookExecutor>,
80 +         correlation_tracker: Arc<EventCorrelationTracker>,
81 +         event_bus: Arc<EventBus>,
82 ~     ) -> Self {
   |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/engine.rs:97:5
    |
97  | /     pub async fn migrate(
98  | |         &self,
99  | |         from_version: &SemanticVersion,
100 | |         to_version: &SemanticVersion,
101 | |         config: MigrationConfig,
102 | |     ) -> StateResult<MigrationResult> {
    | |_____________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function has too many lines (114/100)
   --> llmspell-state-persistence/src/migration/engine.rs:97:5
    |
97  | /     pub async fn migrate(
98  | |         &self,
99  | |         from_version: &SemanticVersion,
100 | |         to_version: &SemanticVersion,
...   |
247 | |         Ok(result)
248 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: matching over `()` is more explicit
   --> llmspell-state-persistence/src/migration/engine.rs:212:28
    |
212 |                         Ok(_) => {
    |                            ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/engine.rs:221:46
    |
221 | ...                   result.add_error(format!("Rollback failed: {}", rollback_err));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
221 -                             result.add_error(format!("Rollback failed: {}", rollback_err));
221 +                             result.add_error(format!("Rollback failed: {rollback_err}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/engine.rs:278:17
    |
278 |                 format!("migration_step_{}", step_index),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
278 -                 format!("migration_step_{}", step_index),
278 +                 format!("migration_step_{step_index}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/engine.rs:318:25
    |
318 |                 reason: format!("Failed to list keys: {}", e),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
318 -                 reason: format!("Failed to list keys: {}", e),
318 +                 reason: format!("Failed to list keys: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/engine.rs:340:41
    |
340 | ...                   reason: format!("Transformation failed for key '{}': {}", key, e),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
340 -                                 reason: format!("Transformation failed for key '{}': {}", key, e),
340 +                                 reason: format!("Transformation failed for key '{key}': {e}"),
    |

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/migration/engine.rs:524:46
    |
524 |     /// Emit typed migration event using new MigrationEvent system
    |                                              ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
524 -     /// Emit typed migration event using new MigrationEvent system
524 +     /// Emit typed migration event using new `MigrationEvent` system
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/engine.rs:591:5
    |
591 |     pub fn get_active_migrations(&self) -> HashMap<Uuid, MigrationContext> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_active_migrations(&self) -> HashMap<Uuid, MigrationContext>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/engine.rs:597:5
    |
597 |     pub async fn cancel_migration(&self, migration_id: Uuid) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/engine.rs:603:44
    |
603 |               Err(StateError::MigrationError(format!(
    |  ____________________________________________^
604 | |                 "Migration {} not found or already completed",
605 | |                 migration_id
606 | |             )))
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:132:5
    |
132 |     pub fn migration_id(&self) -> Uuid {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn migration_id(&self) -> Uuid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:149:5
    |
149 |     pub fn event_type(&self) -> &'static str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn event_type(&self) -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:166:5
    |
166 |     pub fn is_error(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_error(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:180:5
    |
180 |     pub fn is_completion(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_completion(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:191:5
    |
191 |     pub fn create_metadata(&self, correlation_id: Uuid) -> EventMetadata {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_metadata(&self, correlation_id: Uuid) -> EventMetadata`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/migration/events.rs:226:13
    |
226 | /// Convert MigrationEvent to UniversalEvent for existing event system integration
    |             ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
226 - /// Convert MigrationEvent to UniversalEvent for existing event system integration
226 + /// Convert `MigrationEvent` to UniversalEvent for existing event system integration
    |

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/migration/events.rs:226:31
    |
226 | /// Convert MigrationEvent to UniversalEvent for existing event system integration
    |                               ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
226 - /// Convert MigrationEvent to UniversalEvent for existing event system integration
226 + /// Convert MigrationEvent to `UniversalEvent` for existing event system integration
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:257:5
    |
257 |     pub fn new(migration_id: Uuid) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(migration_id: Uuid) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:261:5
    |
261 | /     pub fn migration_started(
262 | |         &self,
263 | |         from_version: SemanticVersion,
264 | |         to_version: SemanticVersion,
265 | |         total_steps: usize,
266 | |         dry_run: bool,
267 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
261 ~     #[must_use] pub fn migration_started(
262 +         &self,
263 +         from_version: SemanticVersion,
264 +         to_version: SemanticVersion,
265 +         total_steps: usize,
266 +         dry_run: bool,
267 ~     ) -> MigrationEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:277:5
    |
277 |     pub fn step_started(&self, step_index: usize, step_description: String) -> MigrationEvent {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn step_started(&self, step_index: usize, step_description: String) -> MigrationEvent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:285:5
    |
285 | /     pub fn step_completed(
286 | |         &self,
287 | |         step_index: usize,
288 | |         items_processed: usize,
289 | |         duration: Duration,
290 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
285 ~     #[must_use] pub fn step_completed(
286 +         &self,
287 +         step_index: usize,
288 +         items_processed: usize,
289 +         duration: Duration,
290 ~     ) -> MigrationEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:299:5
    |
299 | /     pub fn step_failed(
300 | |         &self,
301 | |         step_index: usize,
302 | |         error: String,
303 | |         items_processed: usize,
304 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
299 ~     #[must_use] pub fn step_failed(
300 +         &self,
301 +         step_index: usize,
302 +         error: String,
303 +         items_processed: usize,
304 ~     ) -> MigrationEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:313:5
    |
313 | /     pub fn migration_completed(
314 | |         &self,
315 | |         from_version: SemanticVersion,
316 | |         to_version: SemanticVersion,
...   |
319 | |         steps_completed: usize,
320 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
313 ~     #[must_use] pub fn migration_completed(
314 +         &self,
315 +         from_version: SemanticVersion,
316 +         to_version: SemanticVersion,
317 +         total_duration: Duration,
318 +         items_migrated: usize,
319 +         steps_completed: usize,
320 ~     ) -> MigrationEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:331:5
    |
331 | /     pub fn migration_failed(
332 | |         &self,
333 | |         from_version: SemanticVersion,
334 | |         to_version: SemanticVersion,
...   |
337 | |         rollback_initiated: bool,
338 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
331 ~     #[must_use] pub fn migration_failed(
332 +         &self,
333 +         from_version: SemanticVersion,
334 +         to_version: SemanticVersion,
335 +         error: String,
336 +         items_processed: usize,
337 +         rollback_initiated: bool,
338 ~     ) -> MigrationEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:349:5
    |
349 | /     pub fn validation_event(
350 | |         &self,
351 | |         phase: ValidationPhase,
352 | |         result: ValidationResult,
353 | |         items_validated: usize,
354 | |         duration: Duration,
355 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
349 ~     #[must_use] pub fn validation_event(
350 +         &self,
351 +         phase: ValidationPhase,
352 +         result: ValidationResult,
353 +         items_validated: usize,
354 +         duration: Duration,
355 ~     ) -> MigrationEvent {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/events.rs:365:5
    |
365 | /     pub fn backup_event(
366 | |         &self,
367 | |         backup_type: BackupType,
368 | |         backup_size_bytes: usize,
369 | |         duration: Duration,
370 | |     ) -> MigrationEvent {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
365 ~     #[must_use] pub fn backup_event(
366 +         &self,
367 +         backup_type: BackupType,
368 +         backup_size_bytes: usize,
369 +         duration: Duration,
370 ~     ) -> MigrationEvent {
    |

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/migration/planner.rs:37:58
   |
37 | /// Enhanced migration step with more detail than legacy MigrationStep
   |                                                          ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
37 - /// Enhanced migration step with more detail than legacy MigrationStep
37 + /// Enhanced migration step with more detail than legacy `MigrationStep`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/planner.rs:52:5
   |
52 |     pub fn from_legacy(legacy: &LegacyMigrationStep) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_legacy(legacy: &LegacyMigrationStep) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/planner.rs:66:5
   |
66 |     pub fn to_legacy(&self) -> LegacyMigrationStep {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_legacy(&self) -> LegacyMigrationStep`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/migration/planner.rs:76:50
   |
76 | /// Enhanced migration plan that integrates with StateManager
   |                                                  ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
76 - /// Enhanced migration plan that integrates with StateManager
76 + /// Enhanced migration plan that integrates with `StateManager`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/planner.rs:93:5
   |
93 | /     pub fn from_schema_plan(
94 | |         schema_plan: SchemaMigrationPlan,
95 | |         compatibility: CompatibilityResult,
96 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
93 ~     #[must_use] pub fn from_schema_plan(
94 +         schema_plan: SchemaMigrationPlan,
95 +         compatibility: CompatibilityResult,
96 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:128:5
    |
128 |     pub fn is_safe(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_safe(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:133:5
    |
133 |     pub fn has_breaking_changes(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_breaking_changes(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:137:5
    |
137 |     pub fn get_affected_fields(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_affected_fields(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/migration/planner.rs:146:44
    |
146 | /// Migration planner that integrates with StateManager
    |                                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
146 - /// Migration planner that integrates with StateManager
146 + /// Migration planner that integrates with `StateManager`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:153:5
    |
153 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:160:5
    |
160 |     pub fn with_registry(schema_registry: SchemaRegistry) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_registry(schema_registry: SchemaRegistry) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/planner.rs:168:5
    |
168 |     pub fn register_schema(&mut self, schema: EnhancedStateSchema) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/planner.rs:179:5
    |
179 | /     pub fn create_migration_plan(
180 | |         &mut self,
181 | |         from_version: &SemanticVersion,
182 | |         to_version: &SemanticVersion,
183 | |     ) -> StateResult<MigrationPlan> {
    | |___________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/planner.rs:189:25
    |
189 |                 reason: format!("Source schema {} not found", from_version),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
189 -                 reason: format!("Source schema {} not found", from_version),
189 +                 reason: format!("Source schema {from_version} not found"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/planner.rs:194:25
    |
194 |                 reason: format!("Target schema {} not found", to_version),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
194 -                 reason: format!("Target schema {} not found", to_version),
194 +                 reason: format!("Target schema {to_version} not found"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/planner.rs:219:5
    |
219 |     pub fn validate_plan(&self, plan: &MigrationPlan) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/planner.rs:269:5
    |
269 | /     pub fn find_migration_paths(
270 | |         &self,
271 | |         from_version: &SemanticVersion,
272 | |     ) -> StateResult<Vec<SemanticVersion>> {
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:277:5
    |
277 | /     pub fn is_migration_possible(
278 | |         &self,
279 | |         from_version: &SemanticVersion,
280 | |         to_version: &SemanticVersion,
281 | |     ) -> bool {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
277 ~     #[must_use] pub fn is_migration_possible(
278 +         &self,
279 +         from_version: &SemanticVersion,
280 +         to_version: &SemanticVersion,
281 ~     ) -> bool {
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/planner.rs:294:5
    |
294 | /     pub fn estimate_complexity(
295 | |         &self,
296 | |         from_version: &SemanticVersion,
297 | |         to_version: &SemanticVersion,
298 | |     ) -> StateResult<MigrationComplexity> {
    | |_________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/planner.rs:327:35
    |
327 |     fn calculate_complexity_score(&self, compatibility: &CompatibilityResult) -> u32 {
    |                                   ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers
   --> llmspell-state-persistence/src/migration/planner.rs:336:18
    |
336 |         score += compatibility.breaking_changes.len() as u32 * 50;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
336 -         score += compatibility.breaking_changes.len() as u32 * 50;
336 +         score += u32::try_from(compatibility.breaking_changes.len()) * 50;
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:350:5
    |
350 |     pub fn schema_registry(&self) -> &SchemaRegistry {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn schema_registry(&self) -> &SchemaRegistry`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:373:5
    |
373 |     pub fn is_simple(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_simple(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/planner.rs:378:5
    |
378 |     pub fn is_complex(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_complex(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/transforms.rs:84:5
   |
84 |     pub fn source_fields(&self) -> Vec<&str> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn source_fields(&self) -> Vec<&str>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
  --> llmspell-state-persistence/src/migration/transforms.rs:87:13
   |
87 |             FieldTransform::Convert { from_field, .. } => vec![from_field],
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: try changing either arm body
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
   |
86 -             FieldTransform::Copy { from_field, .. } => vec![from_field],
87 -             FieldTransform::Convert { from_field, .. } => vec![from_field],
86 +             FieldTransform::Convert { from_field, .. } | FieldTransform::Copy { from_field, .. } => vec![from_field],
   |

warning: this match arm has an identical body to another arm
  --> llmspell-state-persistence/src/migration/transforms.rs:90:13
   |
90 |             FieldTransform::Split { from_field, .. } => vec![from_field],
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: try changing either arm body
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
   |
86 ~             FieldTransform::Convert { from_field, .. } => vec![from_field],
87 |             FieldTransform::Default { .. } => vec![],
88 |             FieldTransform::Remove { field } => vec![field],
89 ~             FieldTransform::Split { from_field, .. } | FieldTransform::Copy { from_field, .. } => vec![from_field],
   |

warning: this match arm has an identical body to another arm
  --> llmspell-state-persistence/src/migration/transforms.rs:87:13
   |
87 |             FieldTransform::Convert { from_field, .. } => vec![from_field],
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: try changing either arm body
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
   |
87 ~             FieldTransform::Convert { from_field, .. } | FieldTransform::Split { from_field, .. } => vec![from_field],
88 |             FieldTransform::Default { .. } => vec![],
89 |             FieldTransform::Remove { field } => vec![field],
90 ~             FieldTransform::Merge { from_fields, .. } => {
   |

warning: redundant closure
  --> llmspell-state-persistence/src/migration/transforms.rs:92:40
   |
92 |                 from_fields.iter().map(|s| s.as_str()).collect()
   |                                        ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
  --> llmspell-state-persistence/src/migration/transforms.rs:95:40
   |
95 |                 from_fields.iter().map(|s| s.as_str()).collect()
   |                                        ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:101:5
    |
101 |     pub fn target_fields(&self) -> Vec<&str> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn target_fields(&self) -> Vec<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-state-persistence/src/migration/transforms.rs:104:13
    |
104 |             FieldTransform::Convert { to_field, .. } => vec![to_field],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
103 -             FieldTransform::Copy { to_field, .. } => vec![to_field],
104 -             FieldTransform::Convert { to_field, .. } => vec![to_field],
103 +             FieldTransform::Convert { to_field, .. } | FieldTransform::Copy { to_field, .. } => vec![to_field],
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-persistence/src/migration/transforms.rs:110:13
    |
110 |             FieldTransform::Merge { to_field, .. } => vec![to_field],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
103 ~             FieldTransform::Convert { to_field, .. } => vec![to_field],
104 |             FieldTransform::Default { field, .. } => vec![field],
...
108 |             }
109 ~             FieldTransform::Merge { to_field, .. } | FieldTransform::Copy { to_field, .. } => vec![to_field],
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-persistence/src/migration/transforms.rs:104:13
    |
104 |             FieldTransform::Convert { to_field, .. } => vec![to_field],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
104 ~             FieldTransform::Convert { to_field, .. } | FieldTransform::Merge { to_field, .. } => vec![to_field],
105 |             FieldTransform::Default { field, .. } => vec![field],
...
109 |             }
110 ~             FieldTransform::Custom { to_fields, .. } => {
    |

warning: redundant closure
   --> llmspell-state-persistence/src/migration/transforms.rs:108:38
    |
108 |                 to_fields.iter().map(|s| s.as_str()).collect()
    |                                      ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-state-persistence/src/migration/transforms.rs:112:38
    |
112 |                 to_fields.iter().map(|s| s.as_str()).collect()
    |                                      ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:132:5
    |
132 |     pub fn new(id: String, description: String, from_version: u32, to_version: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(id: String, description: String, from_version: u32, to_version: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:187:5
    |
187 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: calling `SensitiveDataConfig::default()` is more clear than this expression
   --> llmspell-state-persistence/src/migration/transforms.rs:189:67
    |
189 |             sensitive_data_protector: SensitiveDataProtector::new(Default::default()),
    |                                                                   ^^^^^^^^^^^^^^^^^^ help: try: `SensitiveDataConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `to_string` on `&&str`
   --> llmspell-state-persistence/src/migration/transforms.rs:213:32
    |
213 |                     obj.insert(part.to_string(), Value::Object(serde_json::Map::new()));
    |                                ^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*part).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string
    = note: `-W clippy::inefficient-to-string` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::inefficient_to_string)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:272:5
    |
272 |     pub fn with_sensitive_data_config(config: crate::sensitive_data::SensitiveDataConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_sensitive_data_config(config: crate::sensitive_data::SensitiveDataConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/transforms.rs:279:5
    |
279 | /     pub fn transform_state(
280 | |         &self,
281 | |         state: &mut SerializableState,
282 | |         transformation: &StateTransformation,
283 | |     ) -> StateResult<TransformationResult> {
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/transforms.rs:308:38
    |
308 |                     result.add_error(format!("Transform failed: {}", e));
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
308 -                     result.add_error(format!("Transform failed: {}", e));
308 +                     result.add_error(format!("Transform failed: {e}"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/transforms.rs:334:34
    |
334 |                 result.add_error(format!("Validation failed: {}", e));
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
334 -                 result.add_error(format!("Validation failed: {}", e));
334 +                 result.add_error(format!("Validation failed: {e}"));
    |

warning: this function has too many lines (108/100)
   --> llmspell-state-persistence/src/migration/transforms.rs:346:5
    |
346 | /     fn apply_field_transform(
347 | |         &self,
348 | |         source: &Value,
349 | |         target: &mut Value,
...   |
472 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/transforms.rs:476:9
    |
476 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/transforms.rs:534:9
    |
534 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> llmspell-state-persistence/src/migration/transforms.rs:539:9
    |
539 | /         match splitter {
540 | |             "comma_split" => {
541 | |                 if let Some(s) = value.as_str() {
542 | |                     let parts: Vec<&str> = s.split(',').map(|s| s.trim()).collect();
...   |
567 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
    = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
    |
539 ~         if splitter == "comma_split" {
540 +             if let Some(s) = value.as_str() {
541 +                 let parts: Vec<&str> = s.split(',').map(|s| s.trim()).collect();
542 +                 let mut result = Vec::new();
543 +                 for (i, field) in to_fields.iter().enumerate() {
544 +                     let value = if i < parts.len() {
545 +                         Value::String(parts[i].to_string())
546 +                     } else {
547 +                         Value::Null
548 +                     };
549 +                     result.push((field.clone(), value));
550 +                 }
551 +                 Ok(result)
552 +             } else {
553 +                 Err(TransformationError::FieldTransformFailed {
554 +                     field: "unknown".to_string(),
555 +                     reason: "Value is not a string for comma_split".to_string(),
556 +                 })
557 +             }
558 +         } else {
559 +             debug!("Unknown splitter '{}', using identity split", splitter);
560 +             Ok(to_fields
561 +                 .iter()
562 +                 .map(|f| (f.clone(), value.clone()))
563 +                 .collect())
564 +         }
    |

warning: redundant closure
   --> llmspell-state-persistence/src/migration/transforms.rs:542:61
    |
542 |                     let parts: Vec<&str> = s.split(',').map(|s| s.trim()).collect();
    |                                                             ^^^^^^^^^^^^ help: replace the closure with the method itself: `str::trim`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/transforms.rs:571:21
    |
571 |     fn merge_values(&self, values: &[&Value], merger: &str) -> Result<Value, TransformationError> {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/transforms.rs:571:5
    |
571 | /     fn merge_values(&self, values: &[&Value], merger: &str) -> Result<Value, TransformationError> {
572 | |         match merger {
573 | |             "concat_strings" => {
574 | |                 let strings: Vec<String> = values
...   |
598 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
571 -     fn merge_values(&self, values: &[&Value], merger: &str) -> Result<Value, TransformationError> {
571 +     fn merge_values(&self, values: &[&Value], merger: &str) -> serde_json::Value {
    |
help: ...and then change returning expressions
    |
579 ~                 Value::String(strings.join(" "))
580 |             }
581 |             "sum_numbers" => {
582 |                 let sum: f64 = values.iter().filter_map(|v| v.as_f64()).sum();
583 ~                 Value::Number(serde_json::Number::from_f64(sum).unwrap())
584 |             }
...
587 |                     if !value.is_null() {
588 ~                         return (*value).clone();
589 |                     }
590 |                 }
591 ~                 Value::Null
592 |             }
593 |             _ => {
594 |                 debug!("Unknown merger '{}', using first value", merger);
595 ~                 values.first().copied().unwrap_or(&Value::Null).clone()
    |

warning: redundant closure
   --> llmspell-state-persistence/src/migration/transforms.rs:577:26
    |
577 |                     .map(|s| s.to_string())
    |                          ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/transforms.rs:602:9
    |
602 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/transforms.rs:601:5
    |
601 | /     fn apply_custom_transform(
602 | |         &self,
603 | |         _source_values: &HashMap<String, &Value>,
604 | |         transformer: &str,
...   |
612 | |         Ok(vec![])
613 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
606 -     ) -> Result<Vec<Value>, TransformationError> {
606 +     ) -> std::vec::Vec<serde_json::Value> {
    |
help: ...and then change returning expressions
    |
612 -         Ok(vec![])
612 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/transforms.rs:617:9
    |
617 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function has too many lines (109/100)
   --> llmspell-state-persistence/src/migration/transforms.rs:616:5
    |
616 | /     fn apply_validation_rule(
617 | |         &self,
618 | |         data: &Value,
619 | |         rule: &ValidationRule,
...   |
733 | |         Ok(())
734 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:755:5
    |
755 |     pub fn new(transformation_id: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(transformation_id: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:779:5
    |
779 |     pub fn has_errors(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_errors(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/transforms.rs:783:5
    |
783 |     pub fn has_warnings(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_warnings(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:114:5
    |
114 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:142:5
    |
142 |     pub fn has_errors(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_errors(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:146:5
    |
146 |     pub fn has_warnings(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_warnings(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:150:5
    |
150 |     pub fn is_critical(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_critical(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:180:5
    |
180 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:189:5
    |
189 |     pub fn strict() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn strict() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:198:5
    |
198 |     pub fn permissive() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn permissive() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:259:5
    |
259 |     pub fn get_enabled_rules(&self) -> Vec<&ValidationRule> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_enabled_rules(&self) -> Vec<&ValidationRule>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/migration/validator.rs:270:55
    |
270 | /// Migration validator that integrates with existing StateManager
    |                                                       ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
270 - /// Migration validator that integrates with existing StateManager
270 + /// Migration validator that integrates with existing `StateManager`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:278:5
    |
278 |     pub fn new(rules: ValidationRules) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(rules: ValidationRules) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/validator.rs:285:5
    |
285 |     pub fn with_schema_registry(rules: ValidationRules, schema_registry: SchemaRegistry) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_schema_registry(rules: ValidationRules, schema_registry: SchemaRegistry) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/validator.rs:293:5
    |
293 | /     pub fn validate_pre_migration(
294 | |         &self,
295 | |         data: &[SerializableState],
296 | |         source_schema: &EnhancedStateSchema,
297 | |     ) -> StateResult<ValidationResult> {
    | |______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/validator.rs:320:34
    |
320 |                         message: format!("Maximum issue limit reached ({})", max_issues),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
320 -                         message: format!("Maximum issue limit reached ({})", max_issues),
320 +                         message: format!("Maximum issue limit reached ({max_issues})"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/migration/validator.rs:339:5
    |
339 | /     pub fn validate_post_migration(
340 | |         &self,
341 | |         data: &[SerializableState],
342 | |         target_schema: &EnhancedStateSchema,
343 | |     ) -> StateResult<ValidationResult> {
    | |______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/validator.rs:367:34
    |
367 |                         message: format!("Maximum issue limit reached ({})", max_issues),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
367 -                         message: format!("Maximum issue limit reached ({})", max_issues),
367 +                         message: format!("Maximum issue limit reached ({max_issues})"),
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:386:5
    |
386 | /     fn validate_state_item(
387 | |         &self,
388 | |         state: &SerializableState,
389 | |         schema: &EnhancedStateSchema,
...   |
416 | |         Ok(result)
417 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
391 -     ) -> StateResult<ValidationResult> {
391 +     ) -> migration::validator::ValidationResult {
    |
help: ...and then change returning expressions
    |
416 -         Ok(result)
416 +         result
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/validator.rs:407:38
    |
407 | ...                   message: format!("Validation rule execution failed: {}", e),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
407 -                             message: format!("Validation rule execution failed: {}", e),
407 +                             message: format!("Validation rule execution failed: {e}"),
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:466:9
    |
466 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:465:5
    |
465 | /     fn validate_schema_conformance(
466 | |         &self,
467 | |         state: &SerializableState,
468 | |         schema: &EnhancedStateSchema,
...   |
488 | |         Ok(issues)
489 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
470 -     ) -> StateResult<Vec<ValidationIssue>> {
470 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
488 -         Ok(issues)
488 +         issues
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:493:9
    |
493 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:492:5
    |
492 | /     fn validate_required_fields(
493 | |         &self,
494 | |         state: &SerializableState,
495 | |         schema: &EnhancedStateSchema,
...   |
520 | |         Ok(issues)
521 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
497 -     ) -> StateResult<Vec<ValidationIssue>> {
497 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
520 -         Ok(issues)
520 +         issues
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/validator.rs:507:34
    |
507 |                         message: format!("Required field '{}' is missing", field_name),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
507 -                         message: format!("Required field '{}' is missing", field_name),
507 +                         message: format!("Required field '{field_name}' is missing"),
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:524:5
    |
524 | /     fn validate_field_types(
525 | |         &self,
526 | |         state: &SerializableState,
527 | |         schema: &EnhancedStateSchema,
...   |
558 | |         Ok(issues)
559 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
529 -     ) -> StateResult<Vec<ValidationIssue>> {
529 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
558 -         Ok(issues)
558 +         issues
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/validator.rs:543:38
    |
543 |   ...                   message: format!(
    |  ________________________________^
544 | | ...                       "Type mismatch: expected '{}', got '{}'",
545 | | ...                       expected_type, actual_type
546 | | ...                   ),
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/migration/validator.rs:547:43
    |
547 |   ...                   details: Some(format!(
    |  _____________________________________^
548 | | ...                       "Field '{}' value: {:?}",
549 | | ...                       field_name, field_value
550 | | ...                   )),
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:563:9
    |
563 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:562:5
    |
562 | /     fn validate_value_ranges(
563 | |         &self,
564 | |         _state: &SerializableState,
565 | |         _schema: &EnhancedStateSchema,
...   |
568 | |         Ok(vec![])
569 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
567 -     ) -> StateResult<Vec<ValidationIssue>> {
567 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
568 -         Ok(vec![])
568 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:572:9
    |
572 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:571:5
    |
571 | /     fn validate_field_lengths(
572 | |         &self,
573 | |         _state: &SerializableState,
574 | |         _schema: &EnhancedStateSchema,
...   |
577 | |         Ok(vec![])
578 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
576 -     ) -> StateResult<Vec<ValidationIssue>> {
576 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
577 -         Ok(vec![])
577 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:581:9
    |
581 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:580:5
    |
580 | /     fn validate_field_patterns(
581 | |         &self,
582 | |         _state: &SerializableState,
583 | |         _schema: &EnhancedStateSchema,
...   |
586 | |         Ok(vec![])
587 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
585 -     ) -> StateResult<Vec<ValidationIssue>> {
585 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
586 -         Ok(vec![])
586 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:590:9
    |
590 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:589:5
    |
589 | /     fn validate_custom(
590 | |         &self,
591 | |         _state: &SerializableState,
592 | |         _schema: &EnhancedStateSchema,
...   |
600 | |         Ok(vec![])
601 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
595 -     ) -> StateResult<Vec<ValidationIssue>> {
595 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
600 -         Ok(vec![])
600 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:604:9
    |
604 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:603:5
    |
603 | /     fn validate_referential_integrity(
604 | |         &self,
605 | |         _state: &SerializableState,
606 | |         _schema: &EnhancedStateSchema,
...   |
609 | |         Ok(vec![])
610 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
608 -     ) -> StateResult<Vec<ValidationIssue>> {
608 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
609 -         Ok(vec![])
609 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:613:9
    |
613 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:612:5
    |
612 | /     fn validate_uniqueness(
613 | |         &self,
614 | |         _state: &SerializableState,
615 | |         _schema: &EnhancedStateSchema,
...   |
618 | |         Ok(vec![])
619 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
617 -     ) -> StateResult<Vec<ValidationIssue>> {
617 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
618 -         Ok(vec![])
618 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:622:9
    |
622 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/migration/validator.rs:621:5
    |
621 | /     fn validate_cross_field(
622 | |         &self,
623 | |         _state: &SerializableState,
624 | |         _schema: &EnhancedStateSchema,
...   |
627 | |         Ok(vec![])
628 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
626 -     ) -> StateResult<Vec<ValidationIssue>> {
626 +     ) -> std::vec::Vec<migration::validator::ValidationIssue> {
    |
help: ...and then change returning expressions
    |
627 -         Ok(vec![])
627 +         vec![]
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:631:30
    |
631 |     fn rule_applies_to_phase(&self, _rule: &ValidationRule, _phase: &str) -> bool {
    |                              ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:635:23
    |
635 |     fn get_value_type(&self, value: &Value) -> String {
    |                       ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-state-persistence/src/migration/validator.rs:646:25
    |
646 |     fn types_compatible(&self, expected: &str, actual: &str) -> bool {
    |                         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/mod.rs:48:5
   |
48 | /     pub fn new(
49 | |         from_version: SemanticVersion,
50 | |         to_version: SemanticVersion,
51 | |         total_steps: usize,
52 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
48 ~     #[must_use] pub fn new(
49 +         from_version: SemanticVersion,
50 +         to_version: SemanticVersion,
51 +         total_steps: usize,
52 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/mod.rs:93:5
   |
93 |     pub fn is_successful(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_successful(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/migration/mod.rs:97:5
   |
97 |     pub fn is_failed(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_failed(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/mod.rs:149:5
    |
149 | /     pub fn new(
150 | |         config: MigrationConfig,
151 | |         schema_registry: SchemaRegistry,
152 | |         total_steps: usize,
153 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
149 ~     #[must_use] pub fn new(
150 +         config: MigrationConfig,
151 +         schema_registry: SchemaRegistry,
152 +         total_steps: usize,
153 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/mod.rs:164:5
    |
164 |     pub fn progress(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn progress(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/mod.rs:176:5
    |
176 |     pub fn elapsed_time(&self) -> std::time::Duration {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn elapsed_time(&self) -> std::time::Duration`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/migration/mod.rs:184:5
    |
184 |     pub fn get_metadata(&self, key: &str) -> Option<&serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_metadata(&self, key: &str) -> Option<&serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/async_hooks.rs:77:5
   |
77 |     pub fn new(hook_executor: Arc<HookExecutor>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(hook_executor: Arc<HookExecutor>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/async_hooks.rs:95:5
   |
95 |     pub fn start(&mut self) -> StateResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/async_hooks.rs:160:5
    |
160 |     pub async fn stop(&mut self) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/async_hooks.rs:173:5
    |
173 |     pub fn queue_hook_event(&self, event: HookEvent) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/async_hooks.rs:181:5
    |
181 |     pub fn queue_hook_events(&self, events: Vec<HookEvent>) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/async_hooks.rs:192:5
    |
192 |     pub fn queue_depth(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn queue_depth(&self) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/async_hooks.rs:197:5
    |
197 |     pub fn stats(&self) -> HookProcessorStatsSnapshot {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn stats(&self) -> HookProcessorStatsSnapshot`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/async_hooks.rs:216:5
    |
216 |     pub async fn wait_for_drain(&self, timeout: Duration) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/async_hooks.rs:242:5
    |
242 |     pub fn average_processing_time_micros(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn average_processing_time_micros(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/async_hooks.rs:255:5
    |
255 |     pub fn success_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_rate(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/async_hooks.rs:277:5
    |
277 |     pub fn new(batch_size: usize, batch_timeout: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(batch_size: usize, batch_timeout: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/performance/fast_path.rs:13:16
   |
13 |     /// Enable MessagePack for better performance than JSON
   |                ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
13 -     /// Enable MessagePack for better performance than JSON
13 +     /// Enable `MessagePack` for better performance than JSON
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/fast_path.rs:48:5
   |
48 |     pub fn new(config: FastPathConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: FastPathConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/fast_path.rs:56:5
   |
56 |     pub fn serialize_trusted(&self, value: &Value) -> StateResult<Vec<u8>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/performance/fast_path.rs:59:43
   |
59 |                 StateError::serialization(format!("MessagePack serialization failed: {}", e))
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
59 -                 StateError::serialization(format!("MessagePack serialization failed: {}", e))
59 +                 StateError::serialization(format!("MessagePack serialization failed: {e}"))
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/performance/fast_path.rs:63:56
   |
63 |                 .map_err(|e| StateError::serialization(format!("JSON serialization failed: {}", e)))
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
63 -                 .map_err(|e| StateError::serialization(format!("JSON serialization failed: {}", e)))
63 +                 .map_err(|e| StateError::serialization(format!("JSON serialization failed: {e}")))
   |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/fast_path.rs:68:5
   |
68 |     pub fn deserialize_trusted(&self, bytes: &[u8]) -> StateResult<Value> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/performance/fast_path.rs:71:43
   |
71 |                 StateError::serialization(format!("MessagePack deserialization failed: {}", e))
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
71 -                 StateError::serialization(format!("MessagePack deserialization failed: {}", e))
71 +                 StateError::serialization(format!("MessagePack deserialization failed: {e}"))
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/performance/fast_path.rs:75:43
   |
75 |                 StateError::serialization(format!("JSON deserialization failed: {}", e))
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
75 -                 StateError::serialization(format!("JSON deserialization failed: {}", e))
75 +                 StateError::serialization(format!("JSON deserialization failed: {e}"))
   |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/fast_path.rs:81:5
   |
81 |     pub fn store_ephemeral(&self, scope: &StateScope, key: &str, value: Value) -> StateResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/performance/fast_path.rs:86:25
   |
86 |         let cache_key = format!("{}:{}", scope, key);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
86 -         let cache_key = format!("{}:{}", scope, key);
86 +         let cache_key = format!("{scope}:{key}");
   |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/fast_path.rs:103:5
    |
103 |     pub fn get_ephemeral(&self, scope: &StateScope, key: &str) -> StateResult<Option<Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/performance/fast_path.rs:108:25
    |
108 |         let cache_key = format!("{}:{}", scope, key);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
108 -         let cache_key = format!("{}:{}", scope, key);
108 +         let cache_key = format!("{scope}:{key}");
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-persistence/src/performance/fast_path.rs:138:13
    |
138 |             Value::Bool(_) => 4,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
137 -             Value::Null => 4,
138 -             Value::Bool(_) => 4,
137 +             Value::Bool(_) | Value::Null => 4,
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/fast_path.rs:157:5
    |
157 |     pub fn maybe_compress(&self, data: Vec<u8>) -> StateResult<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-state-persistence/src/performance/fast_path.rs:162:9
    |
162 |         use flate2::write::GzEncoder;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-state-persistence/src/performance/fast_path.rs:163:9
    |
163 |         use flate2::Compression;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-state-persistence/src/performance/fast_path.rs:164:9
    |
164 |         use std::io::Write;
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/performance/fast_path.rs:169:56
    |
169 |             .map_err(|e| StateError::compression_error(format!("Compression failed: {}", e)))?;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
169 -             .map_err(|e| StateError::compression_error(format!("Compression failed: {}", e)))?;
169 +             .map_err(|e| StateError::compression_error(format!("Compression failed: {e}")))?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/performance/fast_path.rs:173:56
    |
173 |             .map_err(|e| StateError::compression_error(format!("Compression finish failed: {}", e)))
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
173 -             .map_err(|e| StateError::compression_error(format!("Compression finish failed: {}", e)))
173 +             .map_err(|e| StateError::compression_error(format!("Compression finish failed: {e}")))
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/fast_path.rs:177:5
    |
177 |     pub fn maybe_decompress(&self, data: &[u8]) -> StateResult<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/performance/fast_path.rs:186:47
    |
186 |                 StateError::compression_error(format!("Decompression failed: {}", e))
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
186 -                 StateError::compression_error(format!("Decompression failed: {}", e))
186 +                 StateError::compression_error(format!("Decompression failed: {e}"))
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/fast_path.rs:204:5
    |
204 |     pub fn utilization_percent(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn utilization_percent(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:13:39
   |
13 | /// Lock-free agent state store using SkipMap for concurrent access
   |                                       ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
13 - /// Lock-free agent state store using SkipMap for concurrent access
13 + /// Lock-free agent state store using `SkipMap` for concurrent access
   |

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:15:33
   |
15 |     /// Agent states indexed by agent_id
   |                                 ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
15 -     /// Agent states indexed by agent_id
15 +     /// Agent states indexed by `agent_id`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:40:5
   |
40 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:45:5
   |
45 |     pub fn get(&self, agent_id: &str) -> Option<Arc<VersionedAgentState>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, agent_id: &str) -> Option<Arc<VersionedAgentState>>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:50:5
   |
50 | /     pub fn update<F>(&self, agent_id: &str, update_fn: F) -> StateResult<Arc<VersionedAgentState>>
51 | |     where
52 | |         F: Fn(Option<&PersistentAgentState>) -> StateResult<PersistentAgentState>,
   | |__________________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:60:35
   |
60 |             let current_version = current.as_ref().map(|e| e.value().version).unwrap_or(0);
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
   = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`
help: use `map_or(<a>, <f>)` instead
   |
60 -             let current_version = current.as_ref().map(|e| e.value().version).unwrap_or(0);
60 +             let current_version = current.as_ref().map_or(0, |e| e.value().version);
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/performance/lockfree_agent.rs:91:51
   |
91 |                   return Err(StateError::lock_error(format!(
   |  ___________________________________________________^
92 | |                     "Failed to update agent state after {} retries",
93 | |                     max_retries
94 | |                 )));
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:103:5
    |
103 |     pub fn remove(&self, agent_id: &str) -> Option<Arc<VersionedAgentState>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn remove(&self, agent_id: &str) -> Option<Arc<VersionedAgentState>>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:110:5
    |
110 |     pub fn list_agents(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_agents(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:118:5
    |
118 |     pub fn agent_count(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn agent_count(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:128:5
    |
128 |     pub fn memory_stats(&self) -> AgentStoreStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn memory_stats(&self) -> AgentStoreStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this match arm has an identical body to another arm
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:194:9
    |
194 |         Value::Bool(_) => 4,
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 -         Value::Null => 4,
194 -         Value::Bool(_) => 4,
193 +         Value::Bool(_) | Value::Null => 4,
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:215:5
    |
215 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:223:5
    |
223 |     pub fn save_fast(&self, state: &PersistentAgentState) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:232:5
    |
232 |     pub fn save_benchmark(&self, state: &PersistentAgentState) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:242:5
    |
242 |     pub fn load_fast(&self, agent_id: &str) -> StateResult<Option<PersistentAgentState>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:250:5
    |
250 |     pub fn update_field(&self, agent_id: &str, field: &str, value: Value) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-state-persistence/src/performance/lockfree_agent.rs:250:68
    |
250 |     pub fn update_field(&self, agent_id: &str, field: &str, value: Value) -> StateResult<()> {
    |                                                                    ^^^^^ help: consider taking a reference instead: `&Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/state_class.rs:37:5
   |
37 |     pub fn requires_circular_check(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn requires_circular_check(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/state_class.rs:45:5
   |
45 |     pub fn requires_redaction(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn requires_redaction(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/state_class.rs:53:5
   |
53 |     pub fn should_persist(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn should_persist(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/state_class.rs:61:5
   |
61 |     pub fn should_execute_hooks(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn should_execute_hooks(&self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/state_class.rs:69:5
   |
69 |     pub fn target_overhead_percent(&self) -> f64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn target_overhead_percent(&self) -> f64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/state_class.rs:79:5
   |
79 |     pub fn infer_from_key(key: &str) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn infer_from_key(key: &str) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/state_class.rs:123:5
    |
123 |     pub fn benchmark() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn benchmark() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/state_class.rs:133:5
    |
133 |     pub fn production() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn production() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/state_class.rs:149:5
    |
149 |     pub fn classify_key(&self, key: &str) -> StateClass {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn classify_key(&self, key: &str) -> StateClass`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unused `self` argument
   --> llmspell-state-persistence/src/performance/state_class.rs:170:24
    |
170 |     fn matches_pattern(&self, key: &str, pattern: &str) -> bool {
    |                        ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: item in documentation is missing backticks
  --> llmspell-state-persistence/src/performance/unified_serialization.rs:17:24
   |
17 |     /// Whether to use MessagePack (true) or JSON (false)
   |                        ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
17 -     /// Whether to use MessagePack (true) or JSON (false)
17 +     /// Whether to use `MessagePack` (true) or JSON (false)
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/unified_serialization.rs:26:5
   |
26 |     pub fn new(sensitive_config: SensitiveDataConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(sensitive_config: SensitiveDataConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/performance/unified_serialization.rs:35:5
   |
35 |     pub fn fast() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn fast() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/unified_serialization.rs:44:5
   |
44 |     pub fn serialize<T: Serialize>(&self, value: &T) -> StateResult<Vec<u8>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/performance/unified_serialization.rs:59:5
   |
59 |     pub fn deserialize<T: for<'de> Deserialize<'de>>(&self, data: &[u8]) -> StateResult<T> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: reference as raw pointer
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:106:46
    |
106 |                 let obj_id = format!("{:p}", map as *const _);
    |                                              ^^^^^^^^^^^^^^^ help: try: `std::ptr::from_ref(map)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_as_ptr
    = note: `-W clippy::ref-as-ptr` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::ref_as_ptr)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:134:31
    |
134 |                     path.push(format!("[{}]", i));
    |                               ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
134 -                     path.push(format!("[{}]", i));
134 +                     path.push(format!("[{i}]"));
    |

warning: this match arm has an identical body to another arm
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:168:13
    |
168 |             Value::Number(_) => Value::String(self.sensitive_config.redaction_text.clone()),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
167 -             Value::String(_) => Value::String(self.sensitive_config.redaction_text.clone()),
168 -             Value::Number(_) => Value::String(self.sensitive_config.redaction_text.clone()),
167 +             Value::Number(_) | Value::String(_) => Value::String(self.sensitive_config.redaction_text.clone()),
    |

warning: item in documentation is missing backticks
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:174:17
    |
174 | /// Builder for UnifiedSerializer with fluent API
    |                 ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
174 - /// Builder for UnifiedSerializer with fluent API
174 + /// Builder for `UnifiedSerializer` with fluent API
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:182:5
    |
182 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:190:5
    |
190 |     pub fn with_sensitive_config(mut self, config: SensitiveDataConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_sensitive_config(mut self, config: SensitiveDataConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:190:5
    |
190 | /     pub fn with_sensitive_config(mut self, config: SensitiveDataConfig) -> Self {
191 | |         self.sensitive_config = Some(config);
192 | |         self
193 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:195:5
    |
195 |     pub fn use_json(mut self) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn use_json(mut self) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:195:5
    |
195 | /     pub fn use_json(mut self) -> Self {
196 | |         self.use_msgpack = false;
197 | |         self
198 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:200:5
    |
200 |     pub fn skip_validation(mut self) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn skip_validation(mut self) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:200:5
    |
200 | /     pub fn skip_validation(mut self) -> Self {
201 | |         self.skip_validation = true;
202 | |         self
203 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:205:5
    |
205 |     pub fn build(self) -> UnifiedSerializer {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> UnifiedSerializer`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/performance/unified_serialization.rs:231:5
    |
231 |     pub fn serialize<T: Serialize>(&mut self, value: &T) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/compatibility.rs:82:5
   |
82 | /     pub fn check_compatibility(
83 | |         from_schema: &EnhancedStateSchema,
84 | |         to_schema: &EnhancedStateSchema,
85 | |     ) -> CompatibilityResult {
   | |____________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
82 ~     #[must_use] pub fn check_compatibility(
83 +         from_schema: &EnhancedStateSchema,
84 +         to_schema: &EnhancedStateSchema,
85 ~     ) -> CompatibilityResult {
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:116:5
    |
116 | /     pub fn is_compatible(
117 | |         from_schema: &EnhancedStateSchema,
118 | |         to_schema: &EnhancedStateSchema,
119 | |     ) -> bool {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
116 ~     #[must_use] pub fn is_compatible(
117 +         from_schema: &EnhancedStateSchema,
118 +         to_schema: &EnhancedStateSchema,
119 ~     ) -> bool {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:125:5
    |
125 | /     pub fn is_safe_upgrade(
126 | |         from_schema: &EnhancedStateSchema,
127 | |         to_schema: &EnhancedStateSchema,
128 | |     ) -> bool {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
125 ~     #[must_use] pub fn is_safe_upgrade(
126 +         from_schema: &EnhancedStateSchema,
127 +         to_schema: &EnhancedStateSchema,
128 ~     ) -> bool {
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:139:42
    |
139 |               result.breaking_changes.push(format!(
    |  __________________________________________^
140 | |                 "Major version change: {} -> {}",
141 | |                 from_version, to_version
142 | |             ));
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:146:42
    |
146 |               result.breaking_changes.push(format!(
    |  __________________________________________^
147 | |                 "Downgrade detected: {} -> {}",
148 | |                 from_version, to_version
149 | |             ));
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:152:34
    |
152 |               result.warnings.push(format!(
    |  __________________________________^
153 | |                 "Minor version upgrade: {} -> {}",
154 | |                 from_version, to_version
155 | |             ));
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:174:27
    |
174 |                     .push(format!("Required field '{}' was removed", removed_field));
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
174 -                     .push(format!("Required field '{}' was removed", removed_field));
174 +                     .push(format!("Required field '{removed_field}' was removed"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:178:27
    |
178 |                     .push(format!("Optional field '{}' was removed", removed_field));
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
178 -                     .push(format!("Optional field '{}' was removed", removed_field));
178 +                     .push(format!("Optional field '{removed_field}' was removed"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:195:46
    |
195 |                   result.breaking_changes.push(format!(
    |  ______________________________________________^
196 | |                     "Required field '{}' was added without default value",
197 | |                     added_field
198 | |                 ));
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:202:27
    |
202 |                     .push(format!("Field '{}' was added", added_field));
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
202 -                     .push(format!("Field '{}' was added", added_field));
202 +                     .push(format!("Field '{added_field}' was added"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:255:46
    |
255 |                   result.breaking_changes.push(format!(
    |  ______________________________________________^
256 | |                     "Field '{}' changed from optional to required",
257 | |                     field_name
258 | |                 ));
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:261:38
    |
261 |                   result.warnings.push(format!(
    |  ______________________________________^
262 | |                     "Field '{}' changed from required to optional",
263 | |                     field_name
264 | |                 ));
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:284:23
    |
284 |                 .push(format!("Field '{}' default value changed", field_name));
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
284 -                 .push(format!("Field '{}' default value changed", field_name));
284 +                 .push(format!("Field '{field_name}' default value changed"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:292:23
    |
292 |                 .push(format!("Field '{}' validators changed", field_name));
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
292 -                 .push(format!("Field '{}' validators changed", field_name));
292 +                 .push(format!("Field '{field_name}' validators changed"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:321:23
    |
321 |                 .push(format!("Dependency on schema {} was removed", removed_dep));
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
321 -                 .push(format!("Dependency on schema {} was removed", removed_dep));
321 +                 .push(format!("Dependency on schema {removed_dep} was removed"));
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/compatibility.rs:328:23
    |
328 |                 .push(format!("Dependency on schema {} was added", added_dep));
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
328 -                 .push(format!("Dependency on schema {} was added", added_dep));
328 +                 .push(format!("Dependency on schema {added_dep} was added"));
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:366:5
    |
366 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:383:5
    |
383 | /     pub fn get_result(
384 | |         &self,
385 | |         from: &SemanticVersion,
386 | |         to: &SemanticVersion,
387 | |     ) -> Option<&CompatibilityResult> {
    | |_____________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
383 ~     #[must_use] pub fn get_result(
384 +         &self,
385 +         from: &SemanticVersion,
386 +         to: &SemanticVersion,
387 ~     ) -> Option<&CompatibilityResult> {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:392:5
    |
392 |     pub fn has_upgrade_path(&self, from: &SemanticVersion, to: &SemanticVersion) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_upgrade_path(&self, from: &SemanticVersion, to: &SemanticVersion) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:402:5
    |
402 | /     pub fn find_upgrade_path(
403 | |         &self,
404 | |         from: &SemanticVersion,
405 | |         to: &SemanticVersion,
406 | |     ) -> Option<Vec<SemanticVersion>> {
    | |_____________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
402 ~     #[must_use] pub fn find_upgrade_path(
403 +         &self,
404 +         from: &SemanticVersion,
405 +         to: &SemanticVersion,
406 ~     ) -> Option<Vec<SemanticVersion>> {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:443:5
    |
443 |     pub fn get_compatible_targets(&self, from: &SemanticVersion) -> Vec<SemanticVersion> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_compatible_targets(&self, from: &SemanticVersion) -> Vec<SemanticVersion>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/compatibility.rs:457:5
    |
457 |     pub fn get_stats(&self) -> CompatibilityStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> CompatibilityStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/migration.rs:101:5
    |
101 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/schema/migration.rs:114:5
    |
114 | /     pub fn create_migration_plan(
115 | |         &mut self,
116 | |         from_version: &SemanticVersion,
117 | |         to_version: &SemanticVersion,
118 | |     ) -> Result<MigrationPlan, MigrationPlannerError> {
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:125:26
    |
125 |                 details: format!("Source schema {} not found", from_version),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
125 -                 details: format!("Source schema {} not found", from_version),
125 +                 details: format!("Source schema {from_version} not found"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:131:26
    |
131 |                 details: format!("Target schema {} not found", to_version),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
131 -                 details: format!("Target schema {} not found", to_version),
131 +                 details: format!("Target schema {to_version} not found"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:165:30
    |
165 |                 description: format!("Migrate from {} to {}", step_from, step_to),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
165 -                 description: format!("Migrate from {} to {}", step_from, step_to),
165 +                 description: format!("Migrate from {step_from} to {step_to}"),
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/schema/migration.rs:261:30
    |
261 |     fn is_migration_possible(&self, from: &SemanticVersion, to: &SemanticVersion) -> bool {
    |                              ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:280:26
    |
280 |                 details: format!("Schema {} not found", from),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
280 -                 details: format!("Schema {} not found", from),
280 +                 details: format!("Schema {from} not found"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:288:30
    |
288 |                     details: format!("Schema {} not found", to),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
288 -                     details: format!("Schema {} not found", to),
288 +                     details: format!("Schema {to} not found"),
    |

warning: unused `self` argument
   --> llmspell-state-persistence/src/schema/migration.rs:299:9
    |
299 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/schema/migration.rs:298:5
    |
298 | /     fn create_data_transformation(
299 | |         &self,
300 | |         from_version: &SemanticVersion,
301 | |         to_version: &SemanticVersion,
...   |
399 | |         })
400 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
303 -     ) -> Result<DataTransformation, MigrationPlannerError> {
303 +     ) -> schema::migration::DataTransformation {
    |
help: ...and then change returning expressions
    |
393 ~         DataTransformation {
394 +             transformation_id,
395 +             description,
396 +             field_mappings,
397 +             custom_logic: None,
398 +             validation_rules,
399 +         }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:304:33
    |
304 |         let transformation_id = format!("transform_{}_{}", from_version, to_version);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
304 -         let transformation_id = format!("transform_{}_{}", from_version, to_version);
304 +         let transformation_id = format!("transform_{from_version}_{to_version}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:305:27
    |
305 |         let description = format!("Transform data from {} to {}", from_version, to_version);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
305 -         let description = format!("Transform data from {} to {}", from_version, to_version);
305 +         let description = format!("Transform data from {from_version} to {to_version}");
    |

warning: unnecessary `!=` operation
   --> llmspell-state-persistence/src/schema/migration.rs:337:21
    |
337 | /                     if old_field.field_type != new_field.field_type {
338 | |                         field_mappings.insert(
339 | |                             field_name.clone(),
340 | |                             FieldMapping::Transform {
...   |
356 | |                         );
357 | |                     }
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
337 ~                     if old_field.field_type == new_field.field_type {
338 +                         field_mappings.insert(
339 +                             field_name.clone(),
340 +                             FieldMapping::Direct {
341 +                                 from_field: field_name.clone(),
342 +                                 to_field: field_name.clone(),
343 +                             },
344 +                         );
345 +                     } else {
346 +                         field_mappings.insert(
347 +                             field_name.clone(),
348 +                             FieldMapping::Transform {
349 +                                 from_field: field_name.clone(),
350 +                                 to_field: field_name.clone(),
351 +                                 transformation: format!(
352 +                                     "convert_{}_to_{}",
353 +                                     old_field.field_type, new_field.field_type
354 +                                 ),
355 +                             },
356 +                         );
357 +                     }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:365:45
    |
365 | ...                   transformation: format!("convert_{}_to_{}", old_type, new_type),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
365 -                             transformation: format!("convert_{}_to_{}", old_type, new_type),
365 +                             transformation: format!("convert_{old_type}_to_{new_type}"),
    |

warning: wildcard matches only a single variant and will also match any future added variants
   --> llmspell-state-persistence/src/schema/migration.rs:390:13
    |
390 |             _ => {}
    |             ^ help: try: `RiskLevel::Low`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_wildcard_for_single_variants
    = note: `-W clippy::match-wildcard-for-single-variants` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_wildcard_for_single_variants)]`

warning: unused `self` argument
   --> llmspell-state-persistence/src/schema/migration.rs:404:9
    |
404 |         &mut self,
    |         ^^^^^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-state-persistence/src/schema/migration.rs:403:5
    |
403 | /     fn create_rollback_plan(
404 | |         &mut self,
405 | |         from_version: &SemanticVersion,
406 | |         to_version: &SemanticVersion,
...   |
424 | |         })
425 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
407 -     ) -> Result<MigrationPlan, MigrationPlannerError> {
407 +     ) -> schema::migration::MigrationPlan {
    |
help: ...and then change returning expressions
    |
409 ~         MigrationPlan {
410 +             from_version: from_version.clone(),
411 +             to_version: to_version.clone(),
412 +             steps: vec![MigrationStep {
413 +                 from_version: from_version.major,
414 +                 to_version: to_version.major,
415 +                 migration_type: "rollback".to_string(),
416 +                 description: format!("Rollback from {} to {}", from_version, to_version),
417 +             }],
418 +             estimated_duration: std::time::Duration::from_secs(300), // 5 minutes default
419 +             risk_level: RiskLevel::High,                             // Rollbacks are always risky
420 +             requires_backup: true,
421 +             data_transformations: vec![],
422 +             rollback_plan: None, // No nested rollback plans
423 +             warnings: vec!["Rollback may cause data loss".to_string()],
424 +         }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:416:30
    |
416 |                 description: format!("Rollback from {} to {}", from_version, to_version),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
416 -                 description: format!("Rollback from {} to {}", from_version, to_version),
416 +                 description: format!("Rollback from {from_version} to {to_version}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/schema/migration.rs:476:5
    |
476 |     pub fn validate_plan(&self, plan: &MigrationPlan) -> Result<(), MigrationPlannerError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/migration.rs:511:29
    |
511 |                     reason: format!("Transformation {} has no field mappings", i),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
511 -                     reason: format!("Transformation {} has no field mappings", i),
511 +                     reason: format!("Transformation {i} has no field mappings"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/migration.rs:520:5
    |
520 |     pub fn get_migration_stats(&self) -> MigrationStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_migration_stats(&self) -> MigrationStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unnecessary boolean `not` operation
   --> llmspell-state-persistence/src/schema/migration.rs:532:44
    |
532 |           let average_migration_complexity = if !self.compatibility_cache.is_empty() {
    |  ____________________________________________^
533 | |             #[allow(clippy::cast_precision_loss)]
534 | |             let sum_f64 = self
535 | |                 .compatibility_cache
...   |
543 | |             0.0
544 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
532 ~         let average_migration_complexity = if self.compatibility_cache.is_empty() {
533 +             0.0
534 +         } else {
535 +             #[allow(clippy::cast_precision_loss)]
536 +             let sum_f64 = self
537 +                 .compatibility_cache
538 +                 .values()
539 +                 .map(|r| r.field_changes.len())
540 +                 .sum::<usize>() as f64;
541 +             #[allow(clippy::cast_precision_loss)]
542 +             let len_f64 = self.compatibility_cache.len() as f64;
543 +             sum_f64 / len_f64
544 ~         };
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/registry.rs:56:5
   |
56 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-state-persistence/src/schema/registry.rs:66:5
   |
66 | /     pub fn register_schema(
67 | |         &self,
68 | |         schema: EnhancedStateSchema,
69 | |         metadata: Option<SchemaVersion>,
70 | |     ) -> Result<(), SchemaRegistryError> {
   | |________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/schema/registry.rs:112:5
    |
112 |     pub fn register_named_schema(&self, name: String, version: SemanticVersion) -> StateResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/registry.rs:117:55
    |
117 |                   return Err(StateError::MigrationError(format!(
    |  _______________________________________________________^
118 | |                     "Cannot register named schema '{}': version {} not found",
119 | |                     name, version
120 | |                 )));
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:130:5
    |
130 |     pub fn get_schema(&self, version: &SemanticVersion) -> Option<Arc<EnhancedStateSchema>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_schema(&self, version: &SemanticVersion) -> Option<Arc<EnhancedStateSchema>>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:136:5
    |
136 |     pub fn get_schema_by_name(&self, name: &str) -> Option<Arc<EnhancedStateSchema>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_schema_by_name(&self, name: &str) -> Option<Arc<EnhancedStateSchema>>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:145:5
    |
145 |     pub fn get_current_schema(&self) -> Option<Arc<EnhancedStateSchema>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_current_schema(&self) -> Option<Arc<EnhancedStateSchema>>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:154:5
    |
154 |     pub fn get_schema_metadata(&self, version: &SemanticVersion) -> Option<SchemaVersion> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_schema_metadata(&self, version: &SemanticVersion) -> Option<SchemaVersion>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:160:5
    |
160 |     pub fn list_versions(&self) -> Vec<SemanticVersion> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_versions(&self) -> Vec<SemanticVersion>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:166:5
    |
166 |     pub fn list_named_schemas(&self) -> HashMap<String, SemanticVersion> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_named_schemas(&self) -> HashMap<String, SemanticVersion>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:172:5
    |
172 |     pub fn find_compatible_schemas(&self, version: &SemanticVersion) -> Vec<SemanticVersion> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn find_compatible_schemas(&self, version: &SemanticVersion) -> Vec<SemanticVersion>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:182:5
    |
182 | /     pub fn find_migration_candidates(
183 | |         &self,
184 | |         from_version: &SemanticVersion,
185 | |     ) -> Vec<SemanticVersion> {
    | |_____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
182 ~     #[must_use] pub fn find_migration_candidates(
183 +         &self,
184 +         from_version: &SemanticVersion,
185 ~     ) -> Vec<SemanticVersion> {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:195:5
    |
195 |     pub fn get_latest_in_major(&self, major: u32) -> Option<SemanticVersion> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_latest_in_major(&self, major: u32) -> Option<SemanticVersion>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:201:5
    |
201 |     pub fn has_version(&self, version: &SemanticVersion) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_version(&self, version: &SemanticVersion) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/schema/registry.rs:207:5
    |
207 |     pub fn remove_schema(&self, version: &SemanticVersion) -> Result<(), SchemaRegistryError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/schema/registry.rs:239:5
    |
239 |     pub fn set_current_version(&self, version: SemanticVersion) -> Result<(), SchemaRegistryError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/registry.rs:253:5
    |
253 |     pub fn get_stats(&self) -> RegistryStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> RegistryStats`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unused `self` argument
   --> llmspell-state-persistence/src/schema/registry.rs:280:24
    |
280 |     fn validate_schema(&self, schema: &EnhancedStateSchema) -> Result<(), SchemaRegistryError> {
    |                        ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/registry.rs:305:30
    |
305 |                     details: format!("Field '{}' must have a type", field_name),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
305 -                     details: format!("Field '{}' must have a type", field_name),
305 +                     details: format!("Field '{field_name}' must have a type"),
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/version.rs:30:5
   |
30 |     pub fn new(major: u32, minor: u32, patch: u32) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(major: u32, minor: u32, patch: u32) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/version.rs:40:5
   |
40 |     pub fn with_pre_release(mut self, pre_release: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_pre_release(mut self, pre_release: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-state-persistence/src/schema/version.rs:40:5
   |
40 | /     pub fn with_pre_release(mut self, pre_release: String) -> Self {
41 | |         self.pre_release = Some(pre_release);
42 | |         self
43 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/version.rs:45:5
   |
45 |     pub fn with_build(mut self, build: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_build(mut self, build: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-state-persistence/src/schema/version.rs:45:5
   |
45 | /     pub fn with_build(mut self, build: String) -> Self {
46 | |         self.build = Some(build);
47 | |         self
48 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/version.rs:50:5
   |
50 |     pub fn is_compatible_with(&self, other: &Self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_compatible_with(&self, other: &Self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/version.rs:64:5
   |
64 |     pub fn is_breaking_change_from(&self, other: &Self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_breaking_change_from(&self, other: &Self) -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/schema/version.rs:89:13
   |
89 |             write!(f, "-{}", pre)?;
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
89 -             write!(f, "-{}", pre)?;
89 +             write!(f, "-{pre}")?;
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-state-persistence/src/schema/version.rs:93:13
   |
93 |             write!(f, "+{}", build)?;
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
93 -             write!(f, "+{}", build)?;
93 +             write!(f, "+{build}")?;
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/version.rs:126:52
    |
126 |               return Err(VersionError::InvalidFormat(format!(
    |  ____________________________________________________^
127 | |                 "Expected format 'major.minor.patch', got: {}",
128 | |                 s
129 | |             )));
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/version.rs:199:5
    |
199 |     pub fn new(version: SemanticVersion) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(version: SemanticVersion) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/version.rs:209:5
    |
209 |     pub fn with_description(mut self, description: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_description(mut self, description: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-state-persistence/src/schema/version.rs:209:5
    |
209 | /     pub fn with_description(mut self, description: String) -> Self {
210 | |         self.description = Some(description);
211 | |         self
212 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/version.rs:222:5
    |
222 |     pub fn is_breaking_change_from(&self, other: &Self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_breaking_change_from(&self, other: &Self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/schema/version.rs:226:5
    |
226 |     pub fn has_deprecated_fields(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_deprecated_fields(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/schema/version.rs:236:13
    |
236 |             write!(f, " ({})", desc)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
236 -             write!(f, " ({})", desc)?;
236 +             write!(f, " ({desc})")?;
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/mod.rs:32:5
   |
32 |     pub fn new(version: SemanticVersion) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(version: SemanticVersion) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/mod.rs:45:5
   |
45 |     pub fn from_legacy(legacy: StateSchema) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_legacy(legacy: StateSchema) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/schema/mod.rs:58:5
   |
58 |     pub fn to_legacy(&self) -> StateSchema {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_legacy(&self) -> StateSchema`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-state-persistence/src/sensitive_data.rs:86:5
   |
86 |     pub fn disabled() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn disabled() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/sensitive_data.rs:135:5
    |
135 |     pub fn new(config: SensitiveDataConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: SensitiveDataConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/sensitive_data.rs:142:5
    |
142 |     pub fn with_default() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_default() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-state-persistence/src/sensitive_data.rs:264:13
    |
264 |             *s = self.config.redaction_text.clone();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `s.clone_from(&self.config.redaction_text)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones
    = note: `-W clippy::assigning-clones` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::assigning_clones)]`

warning: unused `self` argument
   --> llmspell-state-persistence/src/sensitive_data.rs:268:20
    |
268 |     fn hash_string(&self, s: &str) -> String {
    |                    ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
   --> llmspell-state-persistence/src/sensitive_data.rs:282:5
    |
282 |     pub fn redaction_map(&self) -> &HashMap<String, String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn redaction_map(&self) -> &HashMap<String, String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/sensitive_data.rs:325:5
    |
325 |     fn redact_sensitive_data(&mut self, config: &SensitiveDataConfig) -> Result<(), String>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/sensitive_data.rs:332:26
    |
332 |             .map_err(|e| format!("Failed to serialize for redaction: {}", e))?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
332 -             .map_err(|e| format!("Failed to serialize for redaction: {}", e))?;
332 +             .map_err(|e| format!("Failed to serialize for redaction: {e}"))?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/sensitive_data.rs:340:26
    |
340 |             .map_err(|e| format!("Failed to deserialize after redaction: {}", e))?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
340 -             .map_err(|e| format!("Failed to deserialize after redaction: {}", e))?;
340 +             .map_err(|e| format!("Failed to deserialize after redaction: {e}"))?;
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-state-persistence/src/sensitive_data.rs:347:1
    |
347 | / pub fn safe_serialize_with_redaction<T: Serialize + Clone>(
348 | |     value: &T,
349 | |     config: &SensitiveDataConfig,
350 | | ) -> Result<Vec<u8>, String> {
    | |____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/sensitive_data.rs:353:49
    |
353 |         serde_json::to_value(value).map_err(|e| format!("Serialization failed: {}", e))?;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
353 -         serde_json::to_value(value).map_err(|e| format!("Serialization failed: {}", e))?;
353 +         serde_json::to_value(value).map_err(|e| format!("Serialization failed: {e}"))?;
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-state-persistence/src/sensitive_data.rs:360:49
    |
360 |     serde_json::to_vec(&json_value).map_err(|e| format!("Final serialization failed: {}", e))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
360 -     serde_json::to_vec(&json_value).map_err(|e| format!("Final serialization failed: {}", e))
360 +     serde_json::to_vec(&json_value).map_err(|e| format!("Final serialization failed: {e}"))
    |

warning: unused `async` for function with no await statements
   --> llmspell-state-persistence/src/backup/manager.rs:489:5
    |
489 | /     async fn compress_backup(&self, data: &[u8]) -> BackupResult<Vec<u8>> {
490 | |         let compressor = BackupCompression::new(
491 | |             self.config.compression_type,
492 | |             CompressionLevel::new(self.config.compression_level.into())?,
493 | |         );
494 | |         compressor.compress(data)
495 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
   --> llmspell-state-persistence/src/backup/manager.rs:497:5
    |
497 | /     async fn get_current_schema_version(&self) -> BackupResult<String> {
498 | |         // TODO: Get actual schema version from state manager
499 | |         Ok("1.0.0".to_string())
500 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
    --> llmspell-state-persistence/src/manager.rs:1429:5
     |
1429 | /     pub async fn start_async_hooks(&mut self) -> StateResult<()> {
1430 | |         self.enable_async_hooks()
1431 | |     }
     | |_____^
     |
     = help: consider removing the `async` from this function
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-state-persistence/src/migration/engine.rs:579:5
    |
579 | /     async fn rollback_migration(
580 | |         &self,
581 | |         _plan: &MigrationPlan,
582 | |         _context: &MigrationContext,
...   |
587 | |         Ok(())
588 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-state-persistence/src/migration/engine.rs:597:5
    |
597 | /     pub async fn cancel_migration(&self, migration_id: Uuid) -> StateResult<()> {
598 | |         let mut active = self.active_migrations.write();
599 | |         if active.remove(&migration_id).is_some() {
600 | |             info!("Migration {} cancelled", migration_id);
...   |
608 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: this type has been superceded by `LazyLock` in the standard library
  --> llmspell-state-persistence/src/sensitive_data.rs:11:26
   |
11 | static API_KEY_PATTERNS: Lazy<Vec<Regex>> = Lazy::new(|| {
   |                          ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_std_lazy_statics
   = note: `-W clippy::non-std-lazy-statics` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::non_std_lazy_statics)]`
help: use `std::sync::LazyLock` instead
   |
11 - static API_KEY_PATTERNS: Lazy<Vec<Regex>> = Lazy::new(|| {
11 + static API_KEY_PATTERNS: std::sync::LazyLock<Vec<Regex>> = std::sync::LazyLock::new(|| {
   |

warning: this type has been superceded by `LazyLock` in the standard library
  --> llmspell-state-persistence/src/sensitive_data.rs:32:31
   |
32 | static SENSITIVE_FIELD_NAMES: Lazy<Vec<&'static str>> = Lazy::new(|| {
   |                               ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_std_lazy_statics
help: use `std::sync::LazyLock` instead
   |
32 - static SENSITIVE_FIELD_NAMES: Lazy<Vec<&'static str>> = Lazy::new(|| {
32 + static SENSITIVE_FIELD_NAMES: std::sync::LazyLock<Vec<&'static str>> = std::sync::LazyLock::new(|| {
   |

warning: `llmspell-state-persistence` (lib) generated 538 warnings (run `cargo clippy --fix --lib -p llmspell-state-persistence` to apply 325 suggestions)
    Checking llmspell-tools v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-tools)
    Checking llmspell-workflows v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-workflows)
    Checking llmspell-sessions v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-sessions)
warning: redundant else block
   --> llmspell-workflows/src/conditional.rs:643:26
    |
643 |                           } else {
    |  __________________________^
644 | |                             warn!(
645 | |                                 "All retries exhausted for step {}, stopping branch",
646 | |                                 step.name
647 | |                             );
648 | |                             break;
649 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else
    = note: `-W clippy::redundant-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_else)]`
help: remove the `else` block and move the contents out
    |
643 ~                         }
644 +                         warn!(
645 +                             "All retries exhausted for step {}, stopping branch",
646 +                             step.name
647 +                         );
648 +                         break;
    |

warning: redundant else block
   --> llmspell-workflows/src/conditions.rs:644:26
    |
644 |                           } else {
    |  __________________________^
645 | |                             return Some(ConditionResult::success_false(format!(
646 | |                                 "Custom: shared_data.{} is {:?}, expected {}",
647 | |                                 key, actual_value, right
648 | |                             )));
649 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else
help: remove the `else` block and move the contents out
    |
644 ~                         }
645 +                         return Some(ConditionResult::success_false(format!(
646 +                             "Custom: shared_data.{} is {:?}, expected {}",
647 +                             key, actual_value, right
648 +                         )));
    |

warning: redundant else block
   --> llmspell-workflows/src/conditions.rs:685:30
    |
685 |   ...                   } else {
    |  ________________________^
686 | | ...                       return Some(ConditionResult::success_false(description));
687 | | ...                   }
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else
help: remove the `else` block and move the contents out
    |
685 ~                             }
686 +                             return Some(ConditionResult::success_false(description));
    |

warning: redundant else block
   --> llmspell-workflows/src/conditions.rs:693:30
    |
693 |   ...                   } else {
    |  ________________________^
694 | | ...                       return Some(ConditionResult::success_false(description));
695 | | ...                   }
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else
help: remove the `else` block and move the contents out
    |
693 ~                             }
694 +                             return Some(ConditionResult::success_false(description));
    |

warning: this `continue` expression is redundant
   --> llmspell-workflows/src/loop.rs:582:29
    |
582 | ...                   continue;
    |                       ^^^^^^^^
    |
    = help: consider dropping the `continue` expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue
    = note: `-W clippy::needless-continue` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_continue)]`

warning: this `continue` expression is redundant
   --> llmspell-workflows/src/loop.rs:586:29
    |
586 | ...                   continue;
    |                       ^^^^^^^^
    |
    = help: consider dropping the `continue` expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue

warning: this `continue` expression is redundant
   --> llmspell-workflows/src/sequential.rs:245:25
    |
245 |                         continue;
    |                         ^^^^^^^^
    |
    = help: consider dropping the `continue` expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue

warning: this `continue` expression is redundant
   --> llmspell-workflows/src/sequential.rs:253:29
    |
253 | ...                   continue;
    |                       ^^^^^^^^
    |
    = help: consider dropping the `continue` expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue

warning: redundant else block
   --> llmspell-workflows/src/sequential.rs:254:26
    |
254 |                           } else {
    |  __________________________^
255 | |                             warn!(
256 | |                                 "All retries exhausted for step {}, stopping workflow",
257 | |                                 step.name
...   |
270 | |                             ));
271 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else
help: remove the `else` block and move the contents out
    |
254 ~                         }
255 +                         warn!(
256 +                             "All retries exhausted for step {}, stopping workflow",
257 +                             step.name
258 +                         );
259 +                         self.state_manager.complete_execution(false).await?;
260 +                         return Ok(SequentialWorkflowResult::failure(
261 +                             self.name.clone(),
262 +                             successful_steps,
263 +                             failed_steps,
264 +                             start_time.elapsed(),
265 +                             format!(
266 +                                 "Workflow stopped after retries exhausted at step {}: {}",
267 +                                 index + 1,
268 +                                 step.name
269 +                             ),
270 +                         ));
    |

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/adapters.rs:16:17
   |
16 |     /// Convert AgentInput to WorkflowInput
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
   = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
   |
16 -     /// Convert AgentInput to WorkflowInput
16 +     /// Convert `AgentInput` to WorkflowInput
   |

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/adapters.rs:16:31
   |
16 |     /// Convert AgentInput to WorkflowInput
   |                               ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
16 -     /// Convert AgentInput to WorkflowInput
16 +     /// Convert AgentInput to `WorkflowInput`
   |

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/adapters.rs:18:52
   |
18 |     /// Extracts workflow-specific parameters from AgentInput:
   |                                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
18 -     /// Extracts workflow-specific parameters from AgentInput:
18 +     /// Extracts workflow-specific parameters from `AgentInput`:
   |

warning: redundant closure
  --> llmspell-workflows/src/adapters.rs:27:23
   |
27 |             .and_then(|v| v.as_u64())
   |                       ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_u64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
   = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: redundant closure
  --> llmspell-workflows/src/adapters.rs:33:31
   |
33 |                     .and_then(|v| v.as_u64())
   |                               ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_u64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/adapters.rs:70:17
   |
70 |     /// Convert WorkflowInput back to AgentInput
   |                 ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
70 -     /// Convert WorkflowInput back to AgentInput
70 +     /// Convert `WorkflowInput` back to AgentInput
   |

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/adapters.rs:70:39
   |
70 |     /// Convert WorkflowInput back to AgentInput
   |                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
70 -     /// Convert WorkflowInput back to AgentInput
70 +     /// Convert WorkflowInput back to `AgentInput`
   |

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
  --> llmspell-workflows/src/adapters.rs:75:20
   |
75 |           let text = workflow_input
   |  ____________________^
76 | |             .input
77 | |             .get("text")
78 | |             .and_then(|v| v.as_str())
...  |
82 | |                 workflow_input.input.to_string()
83 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
   = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: redundant closure
  --> llmspell-workflows/src/adapters.rs:79:18
   |
79 |             .map(|s| s.to_string())
   |                  ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:116:17
    |
116 |     /// Convert WorkflowOutput to AgentOutput
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
116 -     /// Convert WorkflowOutput to AgentOutput
116 +     /// Convert `WorkflowOutput` to AgentOutput
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:116:35
    |
116 |     /// Convert WorkflowOutput to AgentOutput
    |                                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
116 -     /// Convert WorkflowOutput to AgentOutput
116 +     /// Convert WorkflowOutput to `AgentOutput`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/adapters.rs:119:5
    |
119 |     pub fn to_agent_output(workflow_output: WorkflowOutput) -> AgentOutput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_agent_output(workflow_output: WorkflowOutput) -> AgentOutput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: casting `u128` to `u64` may truncate the value
   --> llmspell-workflows/src/adapters.rs:140:37
    |
140 |             execution_time_ms: Some(workflow_output.duration.as_millis() as u64),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
140 -             execution_time_ms: Some(workflow_output.duration.as_millis() as u64),
140 +             execution_time_ms: Some(u64::try_from(workflow_output.duration.as_millis())),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/adapters.rs:160:35
    |
160 |             metadata.extra.insert(format!("context_{}", key), value);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
160 -             metadata.extra.insert(format!("context_{}", key), value);
160 +             metadata.extra.insert(format!("context_{key}"), value);
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:185:17
    |
185 |     /// Convert AgentOutput back to WorkflowOutput
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
185 -     /// Convert AgentOutput back to WorkflowOutput
185 +     /// Convert `AgentOutput` back to WorkflowOutput
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:185:37
    |
185 |     /// Convert AgentOutput back to WorkflowOutput
    |                                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
185 -     /// Convert AgentOutput back to WorkflowOutput
185 +     /// Convert AgentOutput back to `WorkflowOutput`
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-workflows/src/adapters.rs:188:5
    |
188 |     pub fn from_agent_output(agent_output: AgentOutput, duration: Duration) -> WorkflowOutput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-workflows/src/adapters.rs:217:35
    |
217 |                 let context_key = key.strip_prefix("context_").unwrap().to_string();
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/adapters.rs:188:5
    |
188 |     pub fn from_agent_output(agent_output: AgentOutput, duration: Duration) -> WorkflowOutput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_agent_output(agent_output: AgentOutput, duration: Duration) -> WorkflowOutput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-workflows/src/adapters.rs:188:44
    |
188 |     pub fn from_agent_output(agent_output: AgentOutput, duration: Duration) -> WorkflowOutput {
    |                                            ^^^^^^^^^^^ help: consider taking a reference instead: `&AgentOutput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: redundant closure
   --> llmspell-workflows/src/adapters.rs:194:23
    |
194 |             .and_then(|v| v.as_bool())
    |                       ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: unnecessary boolean `not` operation
   --> llmspell-workflows/src/adapters.rs:198:21
    |
198 |           let error = if !success {
    |  _____________________^
199 | |             Some(agent_output.text.clone())
200 | |         } else {
201 | |             None
202 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::if_not_else)]`
help: try
    |
198 ~         let error = if success {
199 +             None
200 +         } else {
201 +             Some(agent_output.text.clone())
202 ~         };
    |

warning: boolean to int conversion using if
   --> llmspell-workflows/src/adapters.rs:227:27
    |
227 |             steps_failed: if success { 0 } else { 1 },
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with from: `usize::from(!success)`
    |
    = note: `!success as usize` or `(!success).into()` can also be valid options
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_to_int_with_if
    = note: `-W clippy::bool-to-int-with-if` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::bool_to_int_with_if)]`

warning: usage of wildcard import
   --> llmspell-workflows/src/adapters.rs:236:9
    |
236 |     use super::*;
    |         ^^^^^^^^ help: try: `super::{AgentInput, AgentOutput, Duration, WorkflowInput, WorkflowInputAdapter, WorkflowOutput, WorkflowOutputAdapter}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_imports
    = note: `-W clippy::wildcard-imports` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::wildcard_imports)]`

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:238:17
    |
238 |     /// Convert AgentInput to WorkflowInput
    |                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
238 -     /// Convert AgentInput to WorkflowInput
238 +     /// Convert `AgentInput` to WorkflowInput
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:238:31
    |
238 |     /// Convert AgentInput to WorkflowInput
    |                               ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
238 -     /// Convert AgentInput to WorkflowInput
238 +     /// Convert AgentInput to `WorkflowInput`
    |

warning: this function could have a `#[must_use]` attribute
   --> llmspell-workflows/src/adapters.rs:239:5
    |
239 |     pub fn agent_to_workflow_input(input: AgentInput) -> WorkflowInput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn agent_to_workflow_input(input: AgentInput) -> WorkflowInput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:243:17
    |
243 |     /// Convert WorkflowInput to AgentInput
    |                 ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
243 -     /// Convert WorkflowInput to AgentInput
243 +     /// Convert `WorkflowInput` to AgentInput
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:243:34
    |
243 |     /// Convert WorkflowInput to AgentInput
    |                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
243 -     /// Convert WorkflowInput to AgentInput
243 +     /// Convert WorkflowInput to `AgentInput`
    |

warning: this function could have a `#[must_use]` attribute
   --> llmspell-workflows/src/adapters.rs:244:5
    |
244 |     pub fn workflow_to_agent_input(input: WorkflowInput) -> AgentInput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn workflow_to_agent_input(input: WorkflowInput) -> AgentInput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:248:17
    |
248 |     /// Convert WorkflowOutput to AgentOutput
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
248 -     /// Convert WorkflowOutput to AgentOutput
248 +     /// Convert `WorkflowOutput` to AgentOutput
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:248:35
    |
248 |     /// Convert WorkflowOutput to AgentOutput
    |                                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
248 -     /// Convert WorkflowOutput to AgentOutput
248 +     /// Convert WorkflowOutput to `AgentOutput`
    |

warning: this function could have a `#[must_use]` attribute
   --> llmspell-workflows/src/adapters.rs:249:5
    |
249 |     pub fn workflow_to_agent_output(output: WorkflowOutput) -> AgentOutput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn workflow_to_agent_output(output: WorkflowOutput) -> AgentOutput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:253:17
    |
253 |     /// Convert AgentOutput to WorkflowOutput
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
253 -     /// Convert AgentOutput to WorkflowOutput
253 +     /// Convert `AgentOutput` to WorkflowOutput
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/adapters.rs:253:32
    |
253 |     /// Convert AgentOutput to WorkflowOutput
    |                                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
253 -     /// Convert AgentOutput to WorkflowOutput
253 +     /// Convert AgentOutput to `WorkflowOutput`
    |

warning: this function could have a `#[must_use]` attribute
   --> llmspell-workflows/src/adapters.rs:254:5
    |
254 |     pub fn agent_to_workflow_output(output: AgentOutput, duration: Duration) -> WorkflowOutput {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn agent_to_workflow_output(output: AgentOutput, duration: Duration) -> WorkflowOutput`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditional.rs:48:5
   |
48 |     pub fn new(name: String, condition: Condition) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, condition: Condition) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditional.rs:59:5
   |
59 |     pub fn default(name: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn default(name: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditional.rs:70:5
   |
70 |     pub fn with_step(mut self, step: WorkflowStep) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_step(mut self, step: WorkflowStep) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/conditional.rs:70:5
   |
70 | /     pub fn with_step(mut self, step: WorkflowStep) -> Self {
71 | |         self.steps.push(step);
72 | |         self
73 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
   = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditional.rs:76:5
   |
76 |     pub fn with_steps(mut self, steps: Vec<WorkflowStep>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_steps(mut self, steps: Vec<WorkflowStep>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/conditional.rs:76:5
   |
76 | /     pub fn with_steps(mut self, steps: Vec<WorkflowStep>) -> Self {
77 | |         self.steps.extend(steps);
78 | |         self
79 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:101:5
    |
101 | /     pub fn success(
102 | |         branch_id: ComponentId,
103 | |         branch_name: String,
104 | |         condition_result: ConditionResult,
105 | |         step_results: Vec<StepResult>,
106 | |         duration: Duration,
107 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
101 ~     #[must_use] pub fn success(
102 +         branch_id: ComponentId,
103 +         branch_name: String,
104 +         condition_result: ConditionResult,
105 +         step_results: Vec<StepResult>,
106 +         duration: Duration,
107 ~     ) -> Self {
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/conditional.rs:136:34
    |
136 |     /// Create a new builder for ConditionalWorkflowConfig
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
136 -     /// Create a new builder for ConditionalWorkflowConfig
136 +     /// Create a new builder for `ConditionalWorkflowConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:137:5
    |
137 |     pub fn builder() -> ConditionalConfigBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> ConditionalConfigBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/conditional.rs:157:17
    |
157 | /// Builder for ConditionalWorkflowConfig
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
157 - /// Builder for ConditionalWorkflowConfig
157 + /// Builder for `ConditionalWorkflowConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:164:5
    |
164 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:171:5
    |
171 |     pub fn execute_all_matching(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execute_all_matching(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:171:5
    |
171 | /     pub fn execute_all_matching(mut self, enabled: bool) -> Self {
172 | |         self.config.execute_all_matching = enabled;
173 | |         self
174 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:177:5
    |
177 |     pub fn execute_default_on_no_match(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execute_default_on_no_match(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:177:5
    |
177 | /     pub fn execute_default_on_no_match(mut self, enabled: bool) -> Self {
178 | |         self.config.execute_default_on_no_match = enabled;
179 | |         self
180 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:183:5
    |
183 |     pub fn max_branches_to_evaluate(mut self, max: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn max_branches_to_evaluate(mut self, max: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:183:5
    |
183 | /     pub fn max_branches_to_evaluate(mut self, max: usize) -> Self {
184 | |         self.config.max_branches_to_evaluate = max;
185 | |         self
186 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:189:5
    |
189 |     pub fn condition_evaluation_timeout_ms(mut self, timeout_ms: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn condition_evaluation_timeout_ms(mut self, timeout_ms: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:189:5
    |
189 | /     pub fn condition_evaluation_timeout_ms(mut self, timeout_ms: u64) -> Self {
190 | |         self.config.condition_evaluation_timeout_ms = timeout_ms;
191 | |         self
192 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:195:5
    |
195 |     pub fn short_circuit_evaluation(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn short_circuit_evaluation(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:195:5
    |
195 | /     pub fn short_circuit_evaluation(mut self, enabled: bool) -> Self {
196 | |         self.config.short_circuit_evaluation = enabled;
197 | |         self
198 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/conditional.rs:200:25
    |
200 |     /// Build the final ConditionalWorkflowConfig with validation
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
200 -     /// Build the final ConditionalWorkflowConfig with validation
200 +     /// Build the final `ConditionalWorkflowConfig` with validation
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:201:5
    |
201 |     pub fn build(self) -> Result<ConditionalWorkflowConfig> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:250:5
    |
250 |     pub fn new(name: String, workflow_config: WorkflowConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, workflow_config: WorkflowConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-workflows/src/conditional.rs:250:47
    |
250 |     pub fn new(name: String, workflow_config: WorkflowConfig) -> Self {
    |                                               ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&WorkflowConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:287:5
    |
287 | /     pub fn new_with_hooks(
288 | |         name: String,
289 | |         workflow_config: WorkflowConfig,
290 | |         workflow_executor: Arc<WorkflowExecutor>,
291 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
287 ~     #[must_use] pub fn new_with_hooks(
288 +         name: String,
289 +         workflow_config: WorkflowConfig,
290 +         workflow_executor: Arc<WorkflowExecutor>,
291 ~     ) -> Self {
    |

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-workflows/src/conditional.rs:289:26
    |
289 |         workflow_config: WorkflowConfig,
    |                          ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&WorkflowConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:331:5
    |
331 |     pub fn builder(name: String) -> ConditionalWorkflowBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder(name: String) -> ConditionalWorkflowBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:346:5
    |
346 |     pub fn name(&self) -> &str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn name(&self) -> &str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:351:5
    |
351 |     pub fn branch_count(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn branch_count(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:356:5
    |
356 |     pub async fn execute_workflow(&self) -> Result<ConditionalWorkflowResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function has too many lines (183/100)
   --> llmspell-workflows/src/conditional.rs:356:5
    |
356 | /     pub async fn execute_workflow(&self) -> Result<ConditionalWorkflowResult> {
357 | |         let start_time = Instant::now();
358 | |         info!("Starting conditional workflow: {}", self.name);
...   |
571 | |         })
572 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:671:5
    |
671 |     pub async fn get_status(&self) -> Result<WorkflowStatus> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:676:5
    |
676 |     pub async fn get_execution_stats(&self) -> Result<ExecutionStats> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:681:5
    |
681 |     pub async fn cancel(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:687:5
    |
687 |     pub async fn reset(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:693:5
    |
693 |     pub async fn get_shared_data(&self, key: &str) -> Result<Option<serde_json::Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditional.rs:698:5
    |
698 |     pub async fn set_shared_data(&self, key: String, value: serde_json::Value) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditional.rs:836:21
    |
836 | /                     format!(
837 | |                         "Conditional workflow error in step '{}': {}",
838 | |                         step_name, message
839 | |                     )
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditional.rs:841:21
    |
841 |                     format!("Conditional workflow error: {}", message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
841 -                     format!("Conditional workflow error: {}", message)
841 +                     format!("Conditional workflow error: {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditional.rs:846:21
    |
846 |                     format!("Validation error in field '{}': {}", field_name, message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
846 -                     format!("Validation error in field '{}': {}", field_name, message)
846 +                     format!("Validation error in field '{field_name}': {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditional.rs:848:21
    |
848 |                     format!("Validation error: {}", message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
848 -                     format!("Validation error: {}", message)
848 +                     format!("Validation error: {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditional.rs:851:18
    |
851 |             _ => format!("Conditional workflow error: {}", error),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
851 -             _ => format!("Conditional workflow error: {}", error),
851 +             _ => format!("Conditional workflow error: {error}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:931:5
    |
931 |     pub fn new(name: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:943:5
    |
943 |     pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:943:5
    |
943 | /     pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self {
944 | |         self.workflow_config = config;
945 | |         self
946 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:949:5
    |
949 |     pub fn with_conditional_config(mut self, config: ConditionalWorkflowConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_conditional_config(mut self, config: ConditionalWorkflowConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:949:5
    |
949 | /     pub fn with_conditional_config(mut self, config: ConditionalWorkflowConfig) -> Self {
950 | |         self.conditional_config = config;
951 | |         self
952 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:955:5
    |
955 |     pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:955:5
    |
955 | /     pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self {
956 | |         self.error_strategy = Some(strategy);
957 | |         self
958 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:961:5
    |
961 |     pub fn add_branch(mut self, branch: ConditionalBranch) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_branch(mut self, branch: ConditionalBranch) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:961:5
    |
961 | /     pub fn add_branch(mut self, branch: ConditionalBranch) -> Self {
962 | |         self.branches.push(branch);
963 | |         self
964 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:967:5
    |
967 |     pub fn add_branches(mut self, branches: Vec<ConditionalBranch>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_branches(mut self, branches: Vec<ConditionalBranch>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:967:5
    |
967 | /     pub fn add_branches(mut self, branches: Vec<ConditionalBranch>) -> Self {
968 | |         self.branches.extend(branches);
969 | |         self
970 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/conditional.rs:972:40
    |
972 |     /// Enable hook integration with a WorkflowExecutor
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
972 -     /// Enable hook integration with a WorkflowExecutor
972 +     /// Enable hook integration with a `WorkflowExecutor`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:973:5
    |
973 |     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditional.rs:973:5
    |
973 | /     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
974 | |         self.workflow_executor = Some(workflow_executor);
975 | |         self
976 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditional.rs:979:5
    |
979 |     pub fn build(mut self) -> ConditionalWorkflow {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(mut self) -> ConditionalWorkflow`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/conditional.rs:1010:5
     |
1010 | /     pub fn timeout(
1011 | |         workflow_name: String,
1012 | |         executed_branches: Vec<BranchExecutionResult>,
1013 | |         duration: Duration,
1014 | |     ) -> Self {
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
     |
1010 ~     #[must_use] pub fn timeout(
1011 +         workflow_name: String,
1012 +         executed_branches: Vec<BranchExecutionResult>,
1013 +         duration: Duration,
1014 ~     ) -> Self {
     |

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/conditional.rs:1027:5
     |
1027 |     pub fn total_steps(&self) -> usize {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn total_steps(&self) -> usize`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/conditional.rs:1035:5
     |
1035 |     pub fn successful_steps(&self) -> usize {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn successful_steps(&self) -> usize`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/conditional.rs:1044:5
     |
1044 |     pub fn failed_steps(&self) -> usize {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn failed_steps(&self) -> usize`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/conditional.rs:1049:5
     |
1049 |     pub fn success_rate(&self) -> f64 {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_rate(&self) -> f64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/conditional.rs:1062:5
     |
1062 |     pub fn generate_report(&self) -> String {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_report(&self) -> String`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:49:5
   |
49 |     pub fn shared_data_equals(key: String, expected_value: serde_json::Value) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn shared_data_equals(key: String, expected_value: serde_json::Value) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:57:5
   |
57 |     pub fn shared_data_exists(key: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn shared_data_exists(key: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:62:5
   |
62 |     pub fn step_result_equals(step_id: ComponentId, expected_output: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn step_result_equals(step_id: ComponentId, expected_output: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:70:5
   |
70 |     pub fn step_succeeded(step_id: ComponentId) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn step_succeeded(step_id: ComponentId) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:75:5
   |
75 |     pub fn step_failed(step_id: ComponentId) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn step_failed(step_id: ComponentId) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:80:5
   |
80 |     pub fn and(conditions: Vec<Condition>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn and(conditions: Vec<Condition>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:85:5
   |
85 |     pub fn or(conditions: Vec<Condition>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn or(conditions: Vec<Condition>) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:90:5
   |
90 |     pub fn not_condition(condition: Condition) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn not_condition(condition: Condition) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/conditions.rs:97:5
   |
97 |     pub fn custom(expression: String, description: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn custom(expression: String, description: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:118:5
    |
118 |     pub fn success_true(description: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_true(description: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:127:5
    |
127 |     pub fn success_false(description: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_false(description: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:136:5
    |
136 |     pub fn error(description: String, error: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn error(description: String, error: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:145:5
    |
145 |     pub fn is_success(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_success(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:150:5
    |
150 |     pub fn is_error(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_error(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:170:5
    |
170 |     pub fn new(execution_id: ComponentId) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(execution_id: ComponentId) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:180:5
    |
180 |     pub fn with_shared_data(mut self, shared_data: HashMap<String, serde_json::Value>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_shared_data(mut self, shared_data: HashMap<String, serde_json::Value>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditions.rs:180:5
    |
180 | /     pub fn with_shared_data(mut self, shared_data: HashMap<String, serde_json::Value>) -> Self {
181 | |         self.shared_data = shared_data;
182 | |         self
183 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:186:5
    |
186 | /     pub fn with_step_outputs(
187 | |         mut self,
188 | |         step_outputs: HashMap<ComponentId, serde_json::Value>,
189 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
186 ~     #[must_use] pub fn with_step_outputs(
187 +         mut self,
188 +         step_outputs: HashMap<ComponentId, serde_json::Value>,
189 ~     ) -> Self {
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditions.rs:186:5
    |
186 | /     pub fn with_step_outputs(
187 | |         mut self,
188 | |         step_outputs: HashMap<ComponentId, serde_json::Value>,
189 | |     ) -> Self {
190 | |         self.step_outputs = step_outputs;
191 | |         self
192 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:195:5
    |
195 |     pub fn with_step_results(mut self, step_results: HashMap<ComponentId, StepResult>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_step_results(mut self, step_results: HashMap<ComponentId, StepResult>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/conditions.rs:195:5
    |
195 | /     pub fn with_step_results(mut self, step_results: HashMap<ComponentId, StepResult>) -> Self {
196 | |         self.step_results = step_results;
197 | |         self
198 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:201:5
    |
201 |     pub fn get_shared_data(&self, key: &str) -> Option<&serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_shared_data(&self, key: &str) -> Option<&serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:206:5
    |
206 |     pub fn get_step_output(&self, step_id: ComponentId) -> Option<&serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_step_output(&self, step_id: ComponentId) -> Option<&serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:211:5
    |
211 |     pub fn get_step_result(&self, step_id: ComponentId) -> Option<&StepResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_step_result(&self, step_id: ComponentId) -> Option<&StepResult>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/conditions.rs:224:5
    |
224 |     pub fn new(evaluation_timeout: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(evaluation_timeout: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/conditions.rs:229:5
    |
229 | /     pub async fn evaluate(
230 | |         &self,
231 | |         condition: &Condition,
232 | |         context: &ConditionEvaluationContext,
233 | |     ) -> Result<ConditionResult> {
    | |________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:318:27
    |
318 |         let description = format!("Shared data '{}' equals {:?}", key, expected_value);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
318 -         let description = format!("Shared data '{}' equals {:?}", key, expected_value);
318 +         let description = format!("Shared data '{key}' equals {expected_value:?}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:326:55
    |
326 |                       Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
327 | |                         "Shared data '{}' is {:?}, expected {:?}",
328 | |                         key, actual_value, expected_value
329 | |                     )))
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:332:55
    |
332 |               None => Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
333 | |                 "Shared data key '{}' does not exist",
334 | |                 key
335 | |             ))),
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:345:27
    |
345 |         let description = format!("Shared data '{}' exists", key);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
345 -         let description = format!("Shared data '{}' exists", key);
345 +         let description = format!("Shared data '{key}' exists");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:351:47
    |
351 |               Ok(ConditionResult::success_false(format!(
    |  _______________________________________________^
352 | |                 "Shared data key '{}' does not exist",
353 | |                 key
354 | |             )))
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:365:27
    |
365 |         let description = format!("Step {:?} output equals '{}'", step_id, expected_output);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
365 -         let description = format!("Step {:?} output equals '{}'", step_id, expected_output);
365 +         let description = format!("Step {step_id:?} output equals '{expected_output}'");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:378:55
    |
378 |               None => Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
379 | |                 "Step {:?} result not found",
380 | |                 step_id
381 | |             ))),
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:391:27
    |
391 |         let description = format!("Step {:?} succeeded", step_id);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
391 -         let description = format!("Step {:?} succeeded", step_id);
391 +         let description = format!("Step {step_id:?} succeeded");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:398:55
    |
398 |                       Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
399 | |                         "Step {:?} failed",
400 | |                         step_id
401 | |                     )))
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:404:55
    |
404 |               None => Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
405 | |                 "Step {:?} result not found",
406 | |                 step_id
407 | |             ))),
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:417:27
    |
417 |         let description = format!("Step {:?} failed", step_id);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
417 -         let description = format!("Step {:?} failed", step_id);
417 +         let description = format!("Step {step_id:?} failed");
    |

warning: unnecessary boolean `not` operation
   --> llmspell-workflows/src/conditions.rs:421:17
    |
421 | /                 if !step_result.success {
422 | |                     Ok(ConditionResult::success_true(description))
423 | |                 } else {
424 | |                     Ok(ConditionResult::success_false(format!(
...   |
427 | |                     )))
428 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
421 ~                 if step_result.success {
422 +                     Ok(ConditionResult::success_false(format!(
423 +                         "Step {:?} succeeded",
424 +                         step_id
425 +                     )))
426 +                 } else {
427 +                     Ok(ConditionResult::success_true(description))
428 +                 }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:424:55
    |
424 |                       Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
425 | |                         "Step {:?} succeeded",
426 | |                         step_id
427 | |                     )))
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:430:55
    |
430 |               None => Ok(ConditionResult::success_false(format!(
    |  _______________________________________________________^
431 | |                 "Step {:?} result not found",
432 | |                 step_id
433 | |             ))),
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: unnecessary boolean `not` operation
   --> llmspell-workflows/src/conditions.rs:512:9
    |
512 | /         if !errors.is_empty() {
513 | |             Ok(ConditionResult::error(
514 | |                 description,
515 | |                 format!("OR condition errors: {}", errors.join(", ")),
...   |
521 | |             )))
522 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
512 ~         if errors.is_empty() {
513 +             Ok(ConditionResult::success_false(format!(
514 +                 "All {} OR conditions are false",
515 +                 conditions.len()
516 +             )))
517 +         } else {
518 +             Ok(ConditionResult::error(
519 +                 description,
520 +                 format!("OR condition errors: {}", errors.join(", ")),
521 +             ))
522 +         }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:577:17
    |
577 |                 format!("Unsupported custom expression: {}", expression),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
577 -                 format!("Unsupported custom expression: {}", expression),
577 +                 format!("Unsupported custom expression: {expression}"),
    |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/conditions.rs:611:45
    |
611 |     /// Parse shared data expressions like "shared_data.key == 'value'"
    |                                             ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
611 -     /// Parse shared data expressions like "shared_data.key == 'value'"
611 +     /// Parse shared data expressions like "`shared_data.key` == 'value'"
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:634:25
    |
634 |                         format!("Cannot parse value: {}", right),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
634 -                         format!("Cannot parse value: {}", right),
634 +                         format!("Cannot parse value: {right}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:638:35
    |
638 |                 let description = format!("Custom: shared_data.{} == {}", key, right);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
638 -                 let description = format!("Custom: shared_data.{} == {}", key, right);
638 +                 let description = format!("Custom: shared_data.{key} == {right}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:645:72
    |
645 |   ...                   return Some(ConditionResult::success_false(format!(
    |  __________________________________________________________________^
646 | | ...                       "Custom: shared_data.{} is {:?}, expected {}",
647 | | ...                       key, actual_value, right
648 | | ...                   )));
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:652:68
    |
652 |                           return Some(ConditionResult::success_false(format!(
    |  ____________________________________________________________________^
653 | |                             "Custom: shared_data.{} does not exist",
654 | |                             key
655 | |                         )));
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/conditions.rs:664:45
    |
664 |     /// Parse step result expressions like "step_result.step_id.success"
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
664 -     /// Parse step result expressions like "step_result.step_id.success"
664 +     /// Parse step result expressions like "`step_result.step_id.success`"
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:682:47
    |
682 | ...                   let description = format!("Custom: step.{}.success", step_id_str);
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
682 -                             let description = format!("Custom: step.{}.success", step_id_str);
682 +                             let description = format!("Custom: step.{step_id_str}.success");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:690:47
    |
690 | ...                   let description = format!("Custom: step.{}.failed", step_id_str);
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
690 -                             let description = format!("Custom: step.{}.failed", step_id_str);
690 +                             let description = format!("Custom: step.{step_id_str}.failed");
    |

warning: unnecessary boolean `not` operation
   --> llmspell-workflows/src/conditions.rs:691:29
    |
691 | / ...                   if !first_result.success {
692 | | ...                       return Some(ConditionResult::success_true(description));
693 | | ...                   } else {
694 | | ...                       return Some(ConditionResult::success_false(description));
695 | | ...                   }
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
691 ~                             if first_result.success {
692 +                                 return Some(ConditionResult::success_false(description));
693 +                             } else {
694 +                                 return Some(ConditionResult::success_true(description));
695 +                             }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/conditions.rs:700:33
    |
700 | ...                   format!("Unknown step property: {}", property),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
700 -                                 format!("Unknown step property: {}", property),
700 +                                 format!("Unknown step property: {property}"),
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/error_handling.rs:17:5
   |
17 |     pub fn new(default_strategy: ErrorStrategy) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(default_strategy: ErrorStrategy) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/error_handling.rs:22:5
   |
22 | /     pub async fn handle_step_failure(
23 | |         &self,
24 | |         step_result: &StepResult,
25 | |         strategy: Option<&ErrorStrategy>,
26 | |     ) -> Result<ErrorAction> {
   | |____________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/error_handling.rs:73:5
   |
73 | /     pub async fn analyze_workflow_error(
74 | |         &self,
75 | |         error: &LLMSpellError,
76 | |         completed_steps: &[StepResult],
77 | |         remaining_steps: usize,
78 | |     ) -> Result<WorkflowErrorAnalysis> {
   | |______________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/error_handling.rs:124:5
    |
124 | /     pub fn calculate_retry_delay(
125 | |         &self,
126 | |         strategy: &ErrorStrategy,
127 | |         attempt: u32,
128 | |         exponential_backoff: bool,
129 | |     ) -> Duration {
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
124 ~     #[must_use] pub fn calculate_retry_delay(
125 +         &self,
126 +         strategy: &ErrorStrategy,
127 +         attempt: u32,
128 +         exponential_backoff: bool,
129 ~     ) -> Duration {
    |

warning: unused `self` argument
   --> llmspell-workflows/src/error_handling.rs:144:9
    |
144 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
   --> llmspell-workflows/src/error_handling.rs:145:21
    |
145 |         error_type: &WorkflowErrorType,
    |                     ^^^^^^^^^^^^^^^^^^ help: consider passing by value instead: `WorkflowErrorType`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
    = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/error_handling.rs:225:5
    |
225 |     pub fn generate_report(&self) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_report(&self) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/executor.rs:109:31
    |
109 | /// Default implementation of WorkflowExecutor
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
109 - /// Default implementation of WorkflowExecutor
109 + /// Default implementation of `WorkflowExecutor`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/executor.rs:120:5
    |
120 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> llmspell-workflows/src/executor.rs:220:13
    |
220 | /             match tokio::time::timeout(timeout, agent.execute(agent_input, exec_context)).await {
221 | |                 Ok(result) => result,
222 | |                 Err(_) => {
223 | |                     #[allow(clippy::cast_possible_truncation)]
...   |
230 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
    = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
    |
220 ~             if let Ok(result) = tokio::time::timeout(timeout, agent.execute(agent_input, exec_context)).await { result } else {
221 +                 #[allow(clippy::cast_possible_truncation)]
222 +                 let timeout_ms = timeout.as_millis() as u64;
223 +                 return Err(LLMSpellError::Timeout {
224 +                     message: format!("Workflow execution timed out: {}", workflow_name),
225 +                     duration_ms: Some(timeout_ms),
226 +                 });
227 +             }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/executor.rs:226:34
    |
226 |                         message: format!("Workflow execution timed out: {}", workflow_name),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
226 -                         message: format!("Workflow execution timed out: {}", workflow_name),
226 +                         message: format!("Workflow execution timed out: {workflow_name}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/executor.rs:297:26
    |
297 |                 message: format!("No active execution found: {}", execution_id),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
297 -                 message: format!("No active execution found: {}", execution_id),
297 +                 message: format!("No active execution found: {execution_id}"),
    |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/factory.rs:73:5
   |
73 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/factory.rs:78:5
   |
78 | /     pub async fn create_from_type(
79 | |         &self,
80 | |         workflow_type: &str,
81 | |         name: String,
82 | |         config: WorkflowConfig,
83 | |         type_config: serde_json::Value,
84 | |     ) -> Result<Arc<dyn BaseAgent + Send + Sync>> {
   | |_________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/factory.rs:92:30
   |
92 |                     message: format!("Unknown workflow type: {}", workflow_type),
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
92 -                     message: format!("Unknown workflow type: {}", workflow_type),
92 +                     message: format!("Unknown workflow type: {workflow_type}"),
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/factory.rs:130:38
    |
130 | ...                   message: format!("Invalid parallel config: {}", e),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
130 -                             message: format!("Invalid parallel config: {}", e),
130 +                             message: format!("Invalid parallel config: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/factory.rs:147:38
    |
147 | ...                   message: format!("Invalid loop config: {}", e),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
147 -                             message: format!("Invalid loop config: {}", e),
147 +                             message: format!("Invalid loop config: {e}"),
    |

warning: this match arm has an identical body to another arm
   --> llmspell-workflows/src/factory.rs:173:13
    |
173 |             WorkflowType::Conditional => WorkflowConfig::default(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
168 ~             WorkflowType::Parallel => WorkflowConfig {
169 |                 continue_on_error: true,
170 |                 ..Default::default()
171 |             },
172 ~             WorkflowType::Conditional | WorkflowType::Sequential => WorkflowConfig::default(),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/factory.rs:200:5
    |
200 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/factory.rs:217:5
    |
217 |     pub fn get_template(&self, template_name: &str) -> Option<&WorkflowTemplate> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_template(&self, template_name: &str) -> Option<&WorkflowTemplate>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/factory.rs:222:5
    |
222 |     pub fn list_templates(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_templates(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/factory.rs:227:5
    |
227 | /     pub async fn create_from_template(
228 | |         &self,
229 | |         template_name: &str,
230 | |         workflow_name: String,
231 | |     ) -> Result<Arc<dyn BaseAgent + Send + Sync>> {
    | |_________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/factory.rs:236:30
    |
236 |                     message: format!("Workflow template '{}' not found", template_name),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
236 -                     message: format!("Workflow template '{}' not found", template_name),
236 +                     message: format!("Workflow template '{template_name}' not found"),
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
 --> llmspell-workflows/src/hooks/builder.rs:7:5
  |
7 |     fn with_logging_hooks(self) -> Self;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/hooks/builder.rs:10:5
   |
10 |     fn with_lifecycle_hooks(self) -> Self;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
 --> llmspell-workflows/src/hooks/integration.rs:1:44
  |
1 | //! ABOUTME: Integration of llmspell-hooks HookExecutor with workflow infrastructure
  |                                            ^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: Integration of llmspell-hooks HookExecutor with workflow infrastructure
1 + //! ABOUTME: Integration of llmspell-hooks `HookExecutor` with workflow infrastructure
  |

warning: item in documentation is missing backticks
 --> llmspell-workflows/src/hooks/integration.rs:2:23
  |
2 | //! ABOUTME: Provides WorkflowExecutor that orchestrates hook execution for workflows
  |                       ^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
2 - //! ABOUTME: Provides WorkflowExecutor that orchestrates hook execution for workflows
2 + //! ABOUTME: Provides `WorkflowExecutor` that orchestrates hook execution for workflows
  |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/hooks/integration.rs:91:5
   |
91 | /     pub fn new(
92 | |         component_id: HookComponentId,
93 | |         workflow_metadata: ComponentMetadata,
94 | |         workflow_state: WorkflowState,
95 | |         workflow_type: String,
96 | |         execution_phase: WorkflowExecutionPhase,
97 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
91 ~     #[must_use] pub fn new(
92 +         component_id: HookComponentId,
93 +         workflow_metadata: ComponentMetadata,
94 +         workflow_state: WorkflowState,
95 +         workflow_type: String,
96 +         execution_phase: WorkflowExecutionPhase,
97 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/hooks/integration.rs:151:5
    |
151 |     pub fn with_step_context(mut self, step_context: StepContext) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_step_context(mut self, step_context: StepContext) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/hooks/integration.rs:151:5
    |
151 | /     pub fn with_step_context(mut self, step_context: StepContext) -> Self {
152 | |         self.step_context = Some(step_context);
153 | |         self
154 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/hooks/integration.rs:157:5
    |
157 |     pub fn with_shared_data(mut self, shared_data: HashMap<String, JsonValue>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_shared_data(mut self, shared_data: HashMap<String, JsonValue>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/hooks/integration.rs:157:5
    |
157 | /     pub fn with_shared_data(mut self, shared_data: HashMap<String, JsonValue>) -> Self {
158 | |         self.shared_data = shared_data;
159 | |         self
160 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/hooks/integration.rs:163:5
    |
163 |     pub fn with_pattern_context(mut self, key: String, value: JsonValue) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_pattern_context(mut self, key: String, value: JsonValue) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/hooks/integration.rs:163:5
    |
163 | /     pub fn with_pattern_context(mut self, key: String, value: JsonValue) -> Self {
164 | |         self.pattern_context.insert(key, value);
165 | |         self
166 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/hooks/integration.rs:169:5
    |
169 |     pub fn get_hook_point(&self) -> HookPoint {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hook_point(&self) -> HookPoint`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/hooks/integration.rs:192:5
    |
192 | /     pub fn new(
193 | |         config: WorkflowLifecycleConfig,
194 | |         hook_executor: Option<Arc<HookExecutor>>,
195 | |         hook_registry: Option<Arc<HookRegistry>>,
196 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
192 ~     #[must_use] pub fn new(
193 +         config: WorkflowLifecycleConfig,
194 +         hook_executor: Option<Arc<HookExecutor>>,
195 +         hook_registry: Option<Arc<HookRegistry>>,
196 ~     ) -> Self {
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/hooks/integration.rs:228:5
    |
228 | /     pub async fn execute_workflow_hooks(
229 | |         &self,
230 | |         workflow_context: WorkflowHookContext,
231 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/hooks/integration.rs:290:29
    |
290 |                     .insert(format!("pattern_{}", key), value.clone());
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
290 -                     .insert(format!("pattern_{}", key), value.clone());
290 +                     .insert(format!("pattern_{key}"), value.clone());
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/hooks/integration.rs:350:5
    |
350 | /     pub async fn execute_step_hooks(
351 | |         &self,
352 | |         workflow_metadata: ComponentMetadata,
353 | |         workflow_state: WorkflowState,
...   |
356 | |         _is_pre_execution: bool,
357 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/hooks/integration.rs:378:5
    |
378 | /     pub async fn execute_state_change_hooks(
379 | |         &self,
380 | |         workflow_metadata: ComponentMetadata,
381 | |         old_state: WorkflowState,
382 | |         new_state: WorkflowState,
383 | |         workflow_type: String,
384 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/hooks/integration.rs:401:31
    |
401 |             JsonValue::String(format!("{:?}", old_state)),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
401 -             JsonValue::String(format!("{:?}", old_state)),
401 +             JsonValue::String(format!("{old_state:?}")),
    |

warning: unused `self` argument
   --> llmspell-workflows/src/hooks/integration.rs:408:24
    |
408 |     fn log_audit_event(&self, context: &WorkflowHookContext) {
    |                        ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/hooks/lifecycle.rs:35:5
   |
35 |     pub fn as_str(&self) -> &str {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_str(&self) -> &str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/hooks/lifecycle.rs:59:5
   |
59 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/hooks/lifecycle.rs:73:5
   |
73 | /     pub async fn execute(
74 | |         &self,
75 | |         point: &HookPoint,
76 | |         _context: &HookContext,
77 | |     ) -> Result<HookResult, Box<dyn std::error::Error + Send + Sync>> {
   | |_____________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/hooks/lifecycle.rs:96:5
   |
96 |     pub fn create_logging_hook(level: tracing::Level) -> HookFn {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn create_logging_hook(level: tracing::Level) -> HookFn`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/hooks/lifecycle.rs:100:21
    |
100 |                     debug!("Hook: {} - {}", context.hook_point, context.workflow_name)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `debug!("Hook: {} - {}", context.hook_point, context.workflow_name);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
    = note: `-W clippy::semicolon-if-nothing-returned` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::semicolon_if_nothing_returned)]`

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/hooks/lifecycle.rs:103:21
    |
103 |                     info!("Hook: {} - {}", context.hook_point, context.workflow_name)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `info!("Hook: {} - {}", context.hook_point, context.workflow_name);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/hooks/types.rs:47:26
   |
47 |     /// Step output (for after_step hooks)
   |                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
47 -     /// Step output (for after_step hooks)
47 +     /// Step output (for `after_step` hooks)
   |

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/hooks/types.rs:50:28
   |
50 |     /// Step duration (for after_step hooks)
   |                            ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
50 -     /// Step duration (for after_step hooks)
50 +     /// Step duration (for `after_step` hooks)
   |

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/loop.rs:101:34
    |
101 |     /// Create a new builder for LoopConfig
    |                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
101 -     /// Create a new builder for LoopConfig
101 +     /// Create a new builder for `LoopConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:102:5
    |
102 |     pub fn builder() -> LoopConfigBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> LoopConfigBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/loop.rs:107:17
    |
107 | /// Builder for LoopConfig
    |                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
107 - /// Builder for LoopConfig
107 + /// Builder for `LoopConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:120:5
    |
120 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:133:5
    |
133 |     pub fn iterator(mut self, iterator: LoopIterator) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn iterator(mut self, iterator: LoopIterator) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:133:5
    |
133 | /     pub fn iterator(mut self, iterator: LoopIterator) -> Self {
134 | |         self.iterator = Some(iterator);
135 | |         self
136 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:139:5
    |
139 |     pub fn add_step(mut self, step: TraitWorkflowStep) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_step(mut self, step: TraitWorkflowStep) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:139:5
    |
139 | /     pub fn add_step(mut self, step: TraitWorkflowStep) -> Self {
140 | |         self.body.push(step);
141 | |         self
142 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:145:5
    |
145 |     pub fn body(mut self, steps: Vec<TraitWorkflowStep>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn body(mut self, steps: Vec<TraitWorkflowStep>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:145:5
    |
145 | /     pub fn body(mut self, steps: Vec<TraitWorkflowStep>) -> Self {
146 | |         self.body = steps;
147 | |         self
148 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:151:5
    |
151 |     pub fn add_break_condition(mut self, condition: BreakCondition) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_break_condition(mut self, condition: BreakCondition) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:151:5
    |
151 | /     pub fn add_break_condition(mut self, condition: BreakCondition) -> Self {
152 | |         self.break_conditions.push(condition);
153 | |         self
154 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:157:5
    |
157 |     pub fn aggregation(mut self, aggregation: ResultAggregation) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn aggregation(mut self, aggregation: ResultAggregation) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:157:5
    |
157 | /     pub fn aggregation(mut self, aggregation: ResultAggregation) -> Self {
158 | |         self.aggregation = aggregation;
159 | |         self
160 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:163:5
    |
163 |     pub fn continue_on_error(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn continue_on_error(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:163:5
    |
163 | /     pub fn continue_on_error(mut self, enabled: bool) -> Self {
164 | |         self.continue_on_error = enabled;
165 | |         self
166 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:169:5
    |
169 |     pub fn timeout(mut self, timeout: Option<Duration>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn timeout(mut self, timeout: Option<Duration>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:169:5
    |
169 | /     pub fn timeout(mut self, timeout: Option<Duration>) -> Self {
170 | |         self.timeout = timeout;
171 | |         self
172 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:175:5
    |
175 |     pub fn iteration_delay(mut self, delay: Option<Duration>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn iteration_delay(mut self, delay: Option<Duration>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/loop.rs:175:5
    |
175 | /     pub fn iteration_delay(mut self, delay: Option<Duration>) -> Self {
176 | |         self.iteration_delay = delay;
177 | |         self
178 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/loop.rs:180:25
    |
180 |     /// Build the final LoopConfig with validation
    |                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
180 -     /// Build the final LoopConfig with validation
180 +     /// Build the final `LoopConfig` with validation
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/loop.rs:181:5
    |
181 |     pub fn build(self) -> Result<LoopConfig> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:234:5
    |
234 | /     pub fn success(
235 | |         workflow_name: String,
236 | |         total_iterations: usize,
237 | |         completed_iterations: usize,
...   |
240 | |         duration: Duration,
241 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
234 ~     #[must_use] pub fn success(
235 +         workflow_name: String,
236 +         total_iterations: usize,
237 +         completed_iterations: usize,
238 +         aggregated_results: HashMap<String, Value>,
239 +         break_reason: Option<String>,
240 +         duration: Duration,
241 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:254:5
    |
254 | /     pub fn failure(
255 | |         workflow_name: String,
256 | |         total_iterations: usize,
257 | |         completed_iterations: usize,
...   |
260 | |         error: String,
261 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
254 ~     #[must_use] pub fn failure(
255 +         workflow_name: String,
256 +         total_iterations: usize,
257 +         completed_iterations: usize,
258 +         aggregated_results: HashMap<String, Value>,
259 +         duration: Duration,
260 +         error: String,
261 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:297:5
    |
297 |     pub fn new(name: String, config: LoopConfig, workflow_config: WorkflowConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, config: LoopConfig, workflow_config: WorkflowConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-workflows/src/loop.rs:297:67
    |
297 |     pub fn new(name: String, config: LoopConfig, workflow_config: WorkflowConfig) -> Self {
    |                                                                   ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&WorkflowConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:328:5
    |
328 | /     pub fn new_with_hooks(
329 | |         name: String,
330 | |         config: LoopConfig,
331 | |         workflow_config: WorkflowConfig,
332 | |         workflow_executor: Arc<WorkflowExecutor>,
333 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
328 ~     #[must_use] pub fn new_with_hooks(
329 +         name: String,
330 +         config: LoopConfig,
331 +         workflow_config: WorkflowConfig,
332 +         workflow_executor: Arc<WorkflowExecutor>,
333 ~     ) -> Self {
    |

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-workflows/src/loop.rs:331:26
    |
331 |         workflow_config: WorkflowConfig,
    |                          ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&WorkflowConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:366:5
    |
366 |     pub fn builder(name: String) -> LoopWorkflowBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder(name: String) -> LoopWorkflowBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/loop.rs:371:5
    |
371 |     pub fn name(&self) -> &str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn name(&self) -> &str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: single-character string constant used as pattern
   --> llmspell-workflows/src/loop.rs:417:32
    |
417 |         if expression.contains(">") {
    |                                ^^^ help: consider using a `char`: `'>'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
    = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

warning: unused `self` argument
   --> llmspell-workflows/src/loop.rs:436:9
    |
436 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/loop.rs:657:5
    |
657 |     pub async fn execute_workflow(&self) -> Result<LoopWorkflowResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function has too many lines (198/100)
   --> llmspell-workflows/src/loop.rs:657:5
    |
657 | /     pub async fn execute_workflow(&self) -> Result<LoopWorkflowResult> {
658 | |         let start_time = Instant::now();
659 | |         info!("Starting loop workflow: {}", self.name);
...   |
889 | |         ))
890 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/loop.rs:794:29
    |
794 | ...                   format!("iteration_{}", iteration),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
794 -                             format!("iteration_{}", iteration),
794 +                             format!("iteration_{iteration}"),
    |

warning: this function has too many lines (108/100)
    --> llmspell-workflows/src/loop.rs:899:5
     |
899  | /     async fn execute(&self, input: AgentInput, _context: ExecutionContext) -> Result<AgentOutput> {
...    |
1021 | |         Ok(AgentOutput::text(output_text).with_metadata(metadata))
1022 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/loop.rs:912:17
    |
912 |                 format!(" (broke early: {})", reason)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
912 -                 format!(" (broke early: {})", reason)
912 +                 format!(" (broke early: {reason})")
    |

warning: variables can be used directly in the `format!` string
    --> llmspell-workflows/src/loop.rs:1092:21
     |
1092 |                     format!("Loop workflow error in step '{}': {}", step_name, message)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1092 -                     format!("Loop workflow error in step '{}': {}", step_name, message)
1092 +                     format!("Loop workflow error in step '{step_name}': {message}")
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-workflows/src/loop.rs:1094:21
     |
1094 |                     format!("Loop workflow error: {}", message)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1094 -                     format!("Loop workflow error: {}", message)
1094 +                     format!("Loop workflow error: {message}")
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-workflows/src/loop.rs:1099:21
     |
1099 |                     format!("Validation error in field '{}': {}", field_name, message)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1099 -                     format!("Validation error in field '{}': {}", field_name, message)
1099 +                     format!("Validation error in field '{field_name}': {message}")
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-workflows/src/loop.rs:1101:21
     |
1101 |                     format!("Validation error: {}", message)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1101 -                     format!("Validation error: {}", message)
1101 +                     format!("Validation error: {message}")
     |

warning: variables can be used directly in the `format!` string
    --> llmspell-workflows/src/loop.rs:1104:18
     |
1104 |             _ => format!("Loop workflow error: {}", error),
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1104 -             _ => format!("Loop workflow error: {}", error),
1104 +             _ => format!("Loop workflow error: {error}"),
     |

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1204:5
     |
1204 | /     pub fn description(mut self, desc: impl Into<String>) -> Self {
1205 | |         self.description = desc.into();
1206 | |         self
1207 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1209:5
     |
1209 |     pub fn with_collection<T: Into<Value>>(mut self, values: Vec<T>) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_collection<T: Into<Value>>(mut self, values: Vec<T>) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1209:5
     |
1209 | /     pub fn with_collection<T: Into<Value>>(mut self, values: Vec<T>) -> Self {
1210 | |         self.iterator = Some(LoopIterator::Collection {
1211 | |             values: values.into_iter().map(|v| v.into()).collect(),
1212 | |         });
1213 | |         self
1214 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: redundant closure
    --> llmspell-workflows/src/loop.rs:1211:44
     |
1211 |             values: values.into_iter().map(|v| v.into()).collect(),
     |                                            ^^^^^^^^^^^^ help: replace the closure with the method itself: `std::convert::Into::into`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1216:5
     |
1216 |     pub fn with_range(mut self, start: i64, end: i64, step: i64) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_range(mut self, start: i64, end: i64, step: i64) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1216:5
     |
1216 | /     pub fn with_range(mut self, start: i64, end: i64, step: i64) -> Self {
1217 | |         self.iterator = Some(LoopIterator::Range { start, end, step });
1218 | |         self
1219 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1221:5
     |
1221 | /     pub fn with_while_condition(
1222 | |         mut self,
1223 | |         condition: impl Into<String>,
1224 | |         max_iterations: usize,
...    |
1230 | |         self
1231 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1233:5
     |
1233 |     pub fn add_step(mut self, step: TraitWorkflowStep) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_step(mut self, step: TraitWorkflowStep) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1233:5
     |
1233 | /     pub fn add_step(mut self, step: TraitWorkflowStep) -> Self {
1234 | |         self.body.push(step);
1235 | |         self
1236 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1238:5
     |
1238 | /     pub fn add_break_condition(
1239 | |         mut self,
1240 | |         expression: impl Into<String>,
1241 | |         message: Option<String>,
...    |
1247 | |         self
1248 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1250:5
     |
1250 |     pub fn with_aggregation(mut self, aggregation: ResultAggregation) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_aggregation(mut self, aggregation: ResultAggregation) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1250:5
     |
1250 | /     pub fn with_aggregation(mut self, aggregation: ResultAggregation) -> Self {
1251 | |         self.aggregation = aggregation;
1252 | |         self
1253 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1255:5
     |
1255 |     pub fn continue_on_error(mut self, continue_on_error: bool) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn continue_on_error(mut self, continue_on_error: bool) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1255:5
     |
1255 | /     pub fn continue_on_error(mut self, continue_on_error: bool) -> Self {
1256 | |         self.continue_on_error = continue_on_error;
1257 | |         self
1258 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1260:5
     |
1260 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1260:5
     |
1260 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
1261 | |         self.timeout = Some(timeout);
1262 | |         self
1263 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1265:5
     |
1265 |     pub fn with_iteration_delay(mut self, delay: Duration) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_iteration_delay(mut self, delay: Duration) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1265:5
     |
1265 | /     pub fn with_iteration_delay(mut self, delay: Duration) -> Self {
1266 | |         self.iteration_delay = Some(delay);
1267 | |         self
1268 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1270:5
     |
1270 |     pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1270:5
     |
1270 | /     pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self {
1271 | |         self.workflow_config = config;
1272 | |         self
1273 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1275:5
     |
1275 |     pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1275:5
     |
1275 | /     pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self {
1276 | |         self.workflow_config.default_error_strategy = strategy;
1277 | |         self
1278 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
    --> llmspell-workflows/src/loop.rs:1280:40
     |
1280 |     /// Enable hook integration with a WorkflowExecutor
     |                                        ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
     |
1280 -     /// Enable hook integration with a WorkflowExecutor
1280 +     /// Enable hook integration with a `WorkflowExecutor`
     |

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/loop.rs:1281:5
     |
1281 |     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/loop.rs:1281:5
     |
1281 | /     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
1282 | |         self.workflow_executor = Some(workflow_executor);
1283 | |         self
1284 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-workflows/src/loop.rs:1286:5
     |
1286 |     pub fn build(self) -> Result<LoopWorkflow> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/parallel.rs:47:5
   |
47 |     pub fn new(name: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/parallel.rs:57:5
   |
57 |     pub fn with_description(mut self, description: String) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_description(mut self, description: String) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/parallel.rs:57:5
   |
57 | /     pub fn with_description(mut self, description: String) -> Self {
58 | |         self.description = description;
59 | |         self
60 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/parallel.rs:62:5
   |
62 |     pub fn add_step(mut self, step: TraitWorkflowStep) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_step(mut self, step: TraitWorkflowStep) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/parallel.rs:62:5
   |
62 | /     pub fn add_step(mut self, step: TraitWorkflowStep) -> Self {
63 | |         self.steps.push(step);
64 | |         self
65 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/parallel.rs:67:5
   |
67 |     pub fn optional(mut self) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn optional(mut self) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/parallel.rs:67:5
   |
67 | /     pub fn optional(mut self) -> Self {
68 | |         self.required = false;
69 | |         self
70 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/parallel.rs:72:5
   |
72 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/parallel.rs:72:5
   |
72 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
73 | |         self.timeout = Some(timeout);
74 | |         self
75 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/parallel.rs:92:34
   |
92 |     /// Create a new builder for ParallelConfig
   |                                  ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
92 -     /// Create a new builder for ParallelConfig
92 +     /// Create a new builder for `ParallelConfig`
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/parallel.rs:93:5
   |
93 |     pub fn builder() -> ParallelConfigBuilder {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> ParallelConfigBuilder`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/parallel.rs:109:17
    |
109 | /// Builder for ParallelConfig
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
109 - /// Builder for ParallelConfig
109 + /// Builder for `ParallelConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:116:5
    |
116 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:123:5
    |
123 |     pub fn max_concurrency(mut self, concurrency: usize) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn max_concurrency(mut self, concurrency: usize) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/parallel.rs:123:5
    |
123 | /     pub fn max_concurrency(mut self, concurrency: usize) -> Self {
124 | |         self.config.max_concurrency = concurrency;
125 | |         self
126 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:129:5
    |
129 |     pub fn fail_fast(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn fail_fast(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/parallel.rs:129:5
    |
129 | /     pub fn fail_fast(mut self, enabled: bool) -> Self {
130 | |         self.config.fail_fast = enabled;
131 | |         self
132 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:135:5
    |
135 |     pub fn timeout(mut self, timeout: Option<Duration>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn timeout(mut self, timeout: Option<Duration>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/parallel.rs:135:5
    |
135 | /     pub fn timeout(mut self, timeout: Option<Duration>) -> Self {
136 | |         self.config.timeout = timeout;
137 | |         self
138 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:141:5
    |
141 |     pub fn continue_on_optional_failure(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn continue_on_optional_failure(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/parallel.rs:141:5
    |
141 | /     pub fn continue_on_optional_failure(mut self, enabled: bool) -> Self {
142 | |         self.config.continue_on_optional_failure = enabled;
143 | |         self
144 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/parallel.rs:146:25
    |
146 |     /// Build the final ParallelConfig with validation
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
146 -     /// Build the final ParallelConfig with validation
146 +     /// Build the final `ParallelConfig` with validation
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/parallel.rs:147:5
    |
147 |     pub fn build(self) -> Result<ParallelConfig> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:182:5
    |
182 | /     pub fn success(
183 | |         branch_name: String,
184 | |         step_results: Vec<StepResult>,
185 | |         duration: Duration,
186 | |         required: bool,
187 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
182 ~     #[must_use] pub fn success(
183 +         branch_name: String,
184 +         step_results: Vec<StepResult>,
185 +         duration: Duration,
186 +         required: bool,
187 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:198:5
    |
198 | /     pub fn failure(
199 | |         branch_name: String,
200 | |         step_results: Vec<StepResult>,
201 | |         duration: Duration,
202 | |         error: String,
203 | |         required: bool,
204 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
198 ~     #[must_use] pub fn failure(
199 +         branch_name: String,
200 +         step_results: Vec<StepResult>,
201 +         duration: Duration,
202 +         error: String,
203 +         required: bool,
204 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:238:5
    |
238 | /     pub fn new(
239 | |         workflow_name: String,
240 | |         branch_results: Vec<BranchResult>,
241 | |         duration: Duration,
242 | |         stopped_early: bool,
243 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
238 ~     #[must_use] pub fn new(
239 +         workflow_name: String,
240 +         branch_results: Vec<BranchResult>,
241 +         duration: Duration,
242 +         stopped_early: bool,
243 ~     ) -> Self {
    |

warning: unnecessary boolean `not` operation
   --> llmspell-workflows/src/parallel.rs:256:21
    |
256 |           let error = if !success {
    |  _____________________^
257 | |             Some(format!("{} required branches failed", required_failures))
258 | |         } else {
259 | |             None
260 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
256 ~         let error = if success {
257 +             None
258 +         } else {
259 +             Some(format!("{} required branches failed", required_failures))
260 ~         };
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:257:18
    |
257 |             Some(format!("{} required branches failed", required_failures))
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
257 -             Some(format!("{} required branches failed", required_failures))
257 +             Some(format!("{required_failures} required branches failed"))
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:275:5
    |
275 |     pub fn generate_report(&self) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_report(&self) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: `format!(..)` appended to existing `String`
   --> llmspell-workflows/src/parallel.rs:296:17
    |
296 | /                 report.push_str(&format!(
297 | |                     "  - {} ({}): {} in {:?}\n",
298 | |                     result.branch_name,
299 | |                     if result.required {
...   |
305 | |                     result.duration
306 | |                 ));
    | |__________________^
    |
    = help: consider using `write!` to avoid the extra allocation
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string
    = note: `-W clippy::format-push-string` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_push_string)]`

warning: `format!(..)` appended to existing `String`
   --> llmspell-workflows/src/parallel.rs:311:13
    |
311 |             report.push_str(&format!("\nError: {}\n", error));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `write!` to avoid the extra allocation
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:311:30
    |
311 |             report.push_str(&format!("\nError: {}\n", error));
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
311 -             report.push_str(&format!("\nError: {}\n", error));
311 +             report.push_str(&format!("\nError: {error}\n"));
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:341:5
    |
341 | /     pub fn new(
342 | |         name: String,
343 | |         branches: Vec<ParallelBranch>,
344 | |         config: ParallelConfig,
345 | |         workflow_config: WorkflowConfig,
346 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
341 ~     #[must_use] pub fn new(
342 +         name: String,
343 +         branches: Vec<ParallelBranch>,
344 +         config: ParallelConfig,
345 +         workflow_config: WorkflowConfig,
346 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:378:5
    |
378 | /     pub fn new_with_hooks(
379 | |         name: String,
380 | |         branches: Vec<ParallelBranch>,
381 | |         config: ParallelConfig,
382 | |         workflow_config: WorkflowConfig,
383 | |         workflow_executor: Arc<WorkflowExecutor>,
384 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
378 ~     #[must_use] pub fn new_with_hooks(
379 +         name: String,
380 +         branches: Vec<ParallelBranch>,
381 +         config: ParallelConfig,
382 +         workflow_config: WorkflowConfig,
383 +         workflow_executor: Arc<WorkflowExecutor>,
384 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:419:5
    |
419 |     pub fn builder(name: String) -> ParallelWorkflowBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder(name: String) -> ParallelWorkflowBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:424:5
    |
424 |     pub fn name(&self) -> &str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn name(&self) -> &str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/parallel.rs:429:5
    |
429 |     pub fn branch_count(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn branch_count(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function has too many lines (113/100)
   --> llmspell-workflows/src/parallel.rs:434:5
    |
434 | /     async fn execute_branch(
435 | |         branch: ParallelBranch,
436 | |         step_executor: Arc<StepExecutor>,
437 | |         state_manager: Arc<Mutex<StateManager>>,
...   |
570 | |         result
571 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:546:41
    |
546 |                     branch_error = Some(format!("Branch '{}' timed out", branch_name));
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
546 -                     branch_error = Some(format!("Branch '{}' timed out", branch_name));
546 +                     branch_error = Some(format!("Branch '{branch_name}' timed out"));
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-workflows/src/parallel.rs:574:5
    |
574 |     pub async fn execute_workflow(&self) -> Result<ParallelWorkflowResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-workflows/src/parallel.rs:666:31
    |
666 |                 let _permit = semaphore.acquire().await.unwrap();
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/parallel.rs:574:5
    |
574 |     pub async fn execute_workflow(&self) -> Result<ParallelWorkflowResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function has too many lines (198/100)
   --> llmspell-workflows/src/parallel.rs:574:5
    |
574 | /     pub async fn execute_workflow(&self) -> Result<ParallelWorkflowResult> {
575 | |         let start_time = Instant::now();
576 | |         info!(
577 | |             "Starting parallel workflow: {} with {} branches",
...   |
817 | |         Ok(result)
818 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:729:29
    |
729 | ...                   format!("Branch panicked: {}", e),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
729 -                             format!("Branch panicked: {}", e),
729 +                             format!("Branch panicked: {e}"),
    |

warning: matching over `()` is more explicit
   --> llmspell-workflows/src/parallel.rs:747:13
    |
747 |             _ = tokio::time::sleep(timeout_duration) => {
    |             ^ help: use `()` instead of `_`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns
    = note: `-W clippy::ignored-unit-patterns` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::ignored_unit_patterns)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:934:21
    |
934 | /                     format!(
935 | |                         "Parallel workflow error in step '{}': {}",
936 | |                         step_name, message
937 | |                     )
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:939:21
    |
939 |                     format!("Parallel workflow error: {}", message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
939 -                     format!("Parallel workflow error: {}", message)
939 +                     format!("Parallel workflow error: {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:944:21
    |
944 |                     format!("Validation error in field '{}': {}", field_name, message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
944 -                     format!("Validation error in field '{}': {}", field_name, message)
944 +                     format!("Validation error in field '{field_name}': {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:946:21
    |
946 |                     format!("Validation error: {}", message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
946 -                     format!("Validation error: {}", message)
946 +                     format!("Validation error: {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/parallel.rs:949:18
    |
949 |             _ => format!("Parallel workflow error: {}", error),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
949 -             _ => format!("Parallel workflow error: {}", error),
949 +             _ => format!("Parallel workflow error: {error}"),
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1040:5
     |
1040 | /     pub fn description(mut self, desc: impl Into<String>) -> Self {
1041 | |         self.description = desc.into();
1042 | |         self
1043 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1045:5
     |
1045 |     pub fn add_branch(mut self, branch: ParallelBranch) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_branch(mut self, branch: ParallelBranch) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1045:5
     |
1045 | /     pub fn add_branch(mut self, branch: ParallelBranch) -> Self {
1046 | |         self.branches.push(branch);
1047 | |         self
1048 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1050:5
     |
1050 |     pub fn with_max_concurrency(mut self, max: usize) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_max_concurrency(mut self, max: usize) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1050:5
     |
1050 | /     pub fn with_max_concurrency(mut self, max: usize) -> Self {
1051 | |         self.config.max_concurrency = max;
1052 | |         self
1053 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1055:5
     |
1055 |     pub fn fail_fast(mut self, enabled: bool) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn fail_fast(mut self, enabled: bool) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1055:5
     |
1055 | /     pub fn fail_fast(mut self, enabled: bool) -> Self {
1056 | |         self.config.fail_fast = enabled;
1057 | |         self
1058 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1060:5
     |
1060 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1060:5
     |
1060 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
1061 | |         self.config.timeout = Some(timeout);
1062 | |         self
1063 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1065:5
     |
1065 |     pub fn continue_on_optional_failure(mut self, enabled: bool) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn continue_on_optional_failure(mut self, enabled: bool) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1065:5
     |
1065 | /     pub fn continue_on_optional_failure(mut self, enabled: bool) -> Self {
1066 | |         self.config.continue_on_optional_failure = enabled;
1067 | |         self
1068 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1070:5
     |
1070 |     pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1070:5
     |
1070 | /     pub fn with_workflow_config(mut self, config: WorkflowConfig) -> Self {
1071 | |         self.workflow_config = config;
1072 | |         self
1073 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
    --> llmspell-workflows/src/parallel.rs:1075:40
     |
1075 |     /// Enable hook integration with a WorkflowExecutor
     |                                        ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
     |
1075 -     /// Enable hook integration with a WorkflowExecutor
1075 +     /// Enable hook integration with a `WorkflowExecutor`
     |

warning: this method could have a `#[must_use]` attribute
    --> llmspell-workflows/src/parallel.rs:1076:5
     |
1076 |     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
    --> llmspell-workflows/src/parallel.rs:1076:5
     |
1076 | /     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
1077 | |         self.workflow_executor = Some(workflow_executor);
1078 | |         self
1079 | |     }
     | |_____^
     |
     = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: docs for function returning `Result` missing `# Errors` section
    --> llmspell-workflows/src/parallel.rs:1081:5
     |
1081 |     pub fn build(self) -> Result<ParallelWorkflow> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/sequential.rs:48:5
   |
48 |     pub fn new(name: String, config: WorkflowConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, config: WorkflowConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-workflows/src/sequential.rs:48:38
   |
48 |     pub fn new(name: String, config: WorkflowConfig) -> Self {
   |                                      ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&WorkflowConfig`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/sequential.rs:79:5
   |
79 | /     pub fn new_with_hooks(
80 | |         name: String,
81 | |         config: WorkflowConfig,
82 | |         workflow_executor: Arc<WorkflowExecutor>,
83 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
79 ~     #[must_use] pub fn new_with_hooks(
80 +         name: String,
81 +         config: WorkflowConfig,
82 +         workflow_executor: Arc<WorkflowExecutor>,
83 ~     ) -> Self {
   |

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-workflows/src/sequential.rs:81:17
   |
81 |         config: WorkflowConfig,
   |                 ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&WorkflowConfig`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:115:5
    |
115 |     pub fn builder(name: String) -> SequentialWorkflowBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder(name: String) -> SequentialWorkflowBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:130:5
    |
130 |     pub fn name(&self) -> &str {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn name(&self) -> &str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:135:5
    |
135 |     pub fn step_count(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn step_count(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:140:5
    |
140 |     pub async fn execute_workflow(&self) -> Result<SequentialWorkflowResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function has too many lines (145/100)
   --> llmspell-workflows/src/sequential.rs:140:5
    |
140 | /     pub async fn execute_workflow(&self) -> Result<SequentialWorkflowResult> {
141 | |         let start_time = Instant::now();
142 | |         info!("Starting sequential workflow: {}", self.name);
...   |
308 | |         ))
309 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:312:5
    |
312 |     pub async fn get_status(&self) -> Result<WorkflowStatus> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:317:5
    |
317 |     pub async fn get_execution_stats(&self) -> Result<ExecutionStats> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:322:5
    |
322 |     pub async fn cancel(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:328:5
    |
328 |     pub async fn reset(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:334:5
    |
334 |     pub async fn get_shared_data(&self, key: &str) -> Result<Option<serde_json::Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/sequential.rs:339:5
    |
339 |     pub async fn set_shared_data(&self, key: String, value: serde_json::Value) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/sequential.rs:439:21
    |
439 |                     format!("Workflow error in step '{}': {}", step_name, message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
439 -                     format!("Workflow error in step '{}': {}", step_name, message)
439 +                     format!("Workflow error in step '{step_name}': {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/sequential.rs:441:21
    |
441 |                     format!("Workflow error: {}", message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
441 -                     format!("Workflow error: {}", message)
441 +                     format!("Workflow error: {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/sequential.rs:446:21
    |
446 |                     format!("Validation error in field '{}': {}", field_name, message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
446 -                     format!("Validation error in field '{}': {}", field_name, message)
446 +                     format!("Validation error in field '{field_name}': {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/sequential.rs:448:21
    |
448 |                     format!("Validation error: {}", message)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
448 -                     format!("Validation error: {}", message)
448 +                     format!("Validation error: {message}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/sequential.rs:451:18
    |
451 |             _ => format!("Sequential workflow error: {}", error),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
451 -             _ => format!("Sequential workflow error: {}", error),
451 +             _ => format!("Sequential workflow error: {error}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:525:5
    |
525 |     pub fn new(name: String) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:536:5
    |
536 |     pub fn with_config(mut self, config: WorkflowConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_config(mut self, config: WorkflowConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/sequential.rs:536:5
    |
536 | /     pub fn with_config(mut self, config: WorkflowConfig) -> Self {
537 | |         self.config = config;
538 | |         self
539 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:542:5
    |
542 |     pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/sequential.rs:542:5
    |
542 | /     pub fn with_error_strategy(mut self, strategy: ErrorStrategy) -> Self {
543 | |         self.error_strategy = Some(strategy);
544 | |         self
545 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:548:5
    |
548 |     pub fn add_step(mut self, step: WorkflowStep) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_step(mut self, step: WorkflowStep) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/sequential.rs:548:5
    |
548 | /     pub fn add_step(mut self, step: WorkflowStep) -> Self {
549 | |         self.steps.push(step);
550 | |         self
551 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:554:5
    |
554 |     pub fn add_steps(mut self, steps: Vec<WorkflowStep>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn add_steps(mut self, steps: Vec<WorkflowStep>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/sequential.rs:554:5
    |
554 | /     pub fn add_steps(mut self, steps: Vec<WorkflowStep>) -> Self {
555 | |         self.steps.extend(steps);
556 | |         self
557 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/sequential.rs:559:40
    |
559 |     /// Enable hook integration with a WorkflowExecutor
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
559 -     /// Enable hook integration with a WorkflowExecutor
559 +     /// Enable hook integration with a `WorkflowExecutor`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:560:5
    |
560 |     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/sequential.rs:560:5
    |
560 | /     pub fn with_hooks(mut self, workflow_executor: Arc<WorkflowExecutor>) -> Self {
561 | |         self.workflow_executor = Some(workflow_executor);
562 | |         self
563 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:566:5
    |
566 |     pub fn build(mut self) -> SequentialWorkflow {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(mut self) -> SequentialWorkflow`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:595:5
    |
595 | /     pub fn success(
596 | |         workflow_name: String,
597 | |         successful_steps: Vec<StepResult>,
598 | |         failed_steps: Vec<StepResult>,
599 | |         duration: Duration,
600 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
595 ~     #[must_use] pub fn success(
596 +         workflow_name: String,
597 +         successful_steps: Vec<StepResult>,
598 +         failed_steps: Vec<StepResult>,
599 +         duration: Duration,
600 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:612:5
    |
612 | /     pub fn failure(
613 | |         workflow_name: String,
614 | |         successful_steps: Vec<StepResult>,
615 | |         failed_steps: Vec<StepResult>,
616 | |         duration: Duration,
617 | |         error_message: String,
618 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
612 ~     #[must_use] pub fn failure(
613 +         workflow_name: String,
614 +         successful_steps: Vec<StepResult>,
615 +         failed_steps: Vec<StepResult>,
616 +         duration: Duration,
617 +         error_message: String,
618 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:630:5
    |
630 | /     pub fn timeout(
631 | |         workflow_name: String,
632 | |         successful_steps: Vec<StepResult>,
633 | |         failed_steps: Vec<StepResult>,
634 | |         duration: Duration,
635 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
630 ~     #[must_use] pub fn timeout(
631 +         workflow_name: String,
632 +         successful_steps: Vec<StepResult>,
633 +         failed_steps: Vec<StepResult>,
634 +         duration: Duration,
635 ~     ) -> Self {
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:647:5
    |
647 |     pub fn total_steps(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn total_steps(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:652:5
    |
652 |     pub fn success_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_rate(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/sequential.rs:665:5
    |
665 |     pub fn generate_report(&self) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_report(&self) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
 --> llmspell-workflows/src/shared_state/builder.rs:9:5
  |
9 |     fn with_state_manager(self, manager: WorkflowStateManager) -> Self;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/shared_state/builder.rs:12:5
   |
12 | /     fn with_state(self) -> Self
13 | |     where
14 | |         Self: Sized,
...  |
17 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/shared_state/shared.rs:19:5
   |
19 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/shared_state/shared.rs:26:5
   |
26 |     pub fn size(&self) -> usize {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn size(&self) -> usize`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/shared_state/shared.rs:31:5
   |
31 |     pub fn workflow_state(&self, workflow_id: String) -> WorkflowStateAccessor {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn workflow_state(&self, workflow_id: String) -> WorkflowStateAccessor`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/shared_state/shared.rs:83:41
   |
83 |             StateScope::Workflow(id) => format!("workflow:{}:", id),
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
83 -             StateScope::Workflow(id) => format!("workflow:{}:", id),
83 +             StateScope::Workflow(id) => format!("workflow:{id}:"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/shared_state/shared.rs:88:17
   |
88 |                 format!("step:{}:{}:", workflow_id, step_name)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
88 -                 format!("step:{}:{}:", workflow_id, step_name)
88 +                 format!("step:{workflow_id}:{step_name}:")
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/shared_state/shared.rs:90:46
   |
90 |             StateScope::Custom(namespace) => format!("{}:", namespace),
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
90 -             StateScope::Custom(namespace) => format!("{}:", namespace),
90 +             StateScope::Custom(namespace) => format!("{namespace}:"),
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/shared_state/shared.rs:131:41
    |
131 |             StateScope::Workflow(id) => format!("workflow:{}:", id),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
131 -             StateScope::Workflow(id) => format!("workflow:{}:", id),
131 +             StateScope::Workflow(id) => format!("workflow:{id}:"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/shared_state/shared.rs:136:17
    |
136 |                 format!("step:{}:{}:", workflow_id, step_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
136 -                 format!("step:{}:{}:", workflow_id, step_name)
136 +                 format!("step:{workflow_id}:{step_name}:")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/shared_state/shared.rs:138:46
    |
138 |             StateScope::Custom(namespace) => format!("{}:", namespace),
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
138 -             StateScope::Custom(namespace) => format!("{}:", namespace),
138 +             StateScope::Custom(namespace) => format!("{namespace}:"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/shared_state/shared.rs:165:5
    |
165 |     pub fn get(&self, key: &str) -> Option<serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, key: &str) -> Option<serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/shared_state/shared.rs:171:9
    |
171 |         self.manager.set_state(&self.default_scope, key, value)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `self.manager.set_state(&self.default_scope, key, value);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/shared_state/shared.rs:176:9
    |
176 |         self.manager.delete_state(&self.default_scope, key)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `self.manager.delete_state(&self.default_scope, key);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/shared_state/shared.rs:180:5
    |
180 |     pub fn global(&self) -> GlobalStateAccess {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn global(&self) -> GlobalStateAccess`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-workflows/src/shared_state/shared.rs:187:5
    |
187 |     pub fn step(&self, step_name: String) -> StepStateAccess {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-workflows/src/shared_state/shared.rs:190:18
    |
190 |             _ => panic!("WorkflowStateAccessor must have Workflow scope"),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/shared_state/shared.rs:187:5
    |
187 |     pub fn step(&self, step_name: String) -> StepStateAccess {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn step(&self, step_name: String) -> StepStateAccess`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/shared_state/shared.rs:210:5
    |
210 |     pub fn get(&self, key: &str) -> Option<serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, key: &str) -> Option<serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/shared_state/shared.rs:215:9
    |
215 |         self.manager.set_state(&StateScope::Global, key, value)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `self.manager.set_state(&StateScope::Global, key, value);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/shared_state/shared.rs:219:9
    |
219 |         self.manager.delete_state(&StateScope::Global, key)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `self.manager.delete_state(&StateScope::Global, key);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/shared_state/shared.rs:231:5
    |
231 |     pub fn get(&self, key: &str) -> Option<serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get(&self, key: &str) -> Option<serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/shared_state/shared.rs:236:9
    |
236 |         self.manager.set_state(&self.scope, key, value)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `self.manager.set_state(&self.scope, key, value);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-workflows/src/shared_state/shared.rs:240:9
    |
240 |         self.manager.delete_state(&self.scope, key)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `self.manager.delete_state(&self.scope, key);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/shared_state/types.rs:28:5
   |
28 |     pub fn scoped_key(&self, key: &str) -> String {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn scoped_key(&self, key: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/shared_state/types.rs:31:41
   |
31 |             StateScope::Workflow(id) => format!("workflow:{}:{}", id, key),
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
31 -             StateScope::Workflow(id) => format!("workflow:{}:{}", id, key),
31 +             StateScope::Workflow(id) => format!("workflow:{id}:{key}"),
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/shared_state/types.rs:36:17
   |
36 |                 format!("step:{}:{}:{}", workflow_id, step_name, key)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
36 -                 format!("step:{}:{}:{}", workflow_id, step_name, key)
36 +                 format!("step:{workflow_id}:{step_name}:{key}")
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/shared_state/types.rs:38:46
   |
38 |             StateScope::Custom(namespace) => format!("{}:{}", namespace, key),
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
38 -             StateScope::Custom(namespace) => format!("{}:{}", namespace, key),
38 +             StateScope::Custom(namespace) => format!("{namespace}:{key}"),
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/shared_state/types.rs:61:5
   |
61 |     pub fn new(value: serde_json::Value) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(value: serde_json::Value) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
  --> llmspell-workflows/src/state.rs:23:46
   |
23 |     /// Component ID for hooks (using hook's ComponentId type)
   |                                              ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
23 -     /// Component ID for hooks (using hook's ComponentId type)
23 +     /// Component ID for hooks (using hook's `ComponentId` type)
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/state.rs:30:5
   |
30 |     pub fn new(config: WorkflowConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: WorkflowConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/state.rs:52:5
   |
52 | /     pub fn new_with_hooks(
53 | |         config: WorkflowConfig,
54 | |         workflow_executor: Arc<WorkflowExecutor>,
55 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
52 ~     #[must_use] pub fn new_with_hooks(
53 +         config: WorkflowConfig,
54 +         workflow_executor: Arc<WorkflowExecutor>,
55 ~     ) -> Self {
   |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/state.rs:86:5
   |
86 |     pub async fn start_execution(&self) -> Result<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
  --> llmspell-workflows/src/state.rs:91:26
   |
91 |                 message: format!("Failed to acquire state lock: {}", e),
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
91 -                 message: format!("Failed to acquire state lock: {}", e),
91 +                 message: format!("Failed to acquire state lock: {e}"),
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:103:30
    |
103 |                     message: format!("Failed to acquire status lock: {}", e),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
103 -                     message: format!("Failed to acquire status lock: {}", e),
103 +                     message: format!("Failed to acquire status lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:114:5
    |
114 |     pub async fn complete_execution(&self, success: bool) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:121:26
    |
121 |                 message: format!("Failed to acquire status lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
121 -                 message: format!("Failed to acquire status lock: {}", e),
121 +                 message: format!("Failed to acquire status lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:136:5
    |
136 |     pub async fn cancel_execution(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:143:26
    |
143 |                 message: format!("Failed to acquire status lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
143 -                 message: format!("Failed to acquire status lock: {}", e),
143 +                 message: format!("Failed to acquire status lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:154:5
    |
154 |     pub async fn get_status(&self) -> Result<WorkflowStatus> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:159:26
    |
159 |                 message: format!("Failed to acquire status lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
159 -                 message: format!("Failed to acquire status lock: {}", e),
159 +                 message: format!("Failed to acquire status lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:168:5
    |
168 |     pub async fn advance_step(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:170:22
    |
170 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
170 -             message: format!("Failed to acquire state lock: {}", e),
170 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:182:5
    |
182 |     pub async fn get_current_step(&self) -> Result<usize> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:184:22
    |
184 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
184 -             message: format!("Failed to acquire state lock: {}", e),
184 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:193:5
    |
193 |     pub async fn set_shared_data(&self, key: String, value: Value) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:197:26
    |
197 |                 message: format!("Failed to acquire state lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
197 -                 message: format!("Failed to acquire state lock: {}", e),
197 +                 message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:232:5
    |
232 |     pub async fn get_shared_data(&self, key: &str) -> Result<Option<Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:234:22
    |
234 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
234 -             message: format!("Failed to acquire state lock: {}", e),
234 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:243:5
    |
243 |     pub async fn get_all_shared_data(&self) -> Result<HashMap<String, Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:245:22
    |
245 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
245 -             message: format!("Failed to acquire state lock: {}", e),
245 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:254:5
    |
254 |     pub async fn set_step_output(&self, step_id: ComponentId, output: Value) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:256:22
    |
256 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
256 -             message: format!("Failed to acquire state lock: {}", e),
256 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:268:5
    |
268 |     pub async fn get_step_output(&self, step_id: ComponentId) -> Result<Option<Value>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:270:22
    |
270 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
270 -             message: format!("Failed to acquire state lock: {}", e),
270 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:279:5
    |
279 |     pub async fn record_step_result(&self, result: StepResult) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:292:34
    |
292 |                         message: format!("Failed to acquire history lock: {}", e),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
292 -                         message: format!("Failed to acquire history lock: {}", e),
292 +                         message: format!("Failed to acquire history lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:309:5
    |
309 |     pub async fn get_execution_history(&self) -> Result<Vec<StepResult>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:314:26
    |
314 |                 message: format!("Failed to acquire history lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
314 -                 message: format!("Failed to acquire history lock: {}", e),
314 +                 message: format!("Failed to acquire history lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:323:5
    |
323 |     pub async fn get_execution_stats(&self) -> Result<ExecutionStats> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:328:26
    |
328 |                 message: format!("Failed to acquire history lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
328 -                 message: format!("Failed to acquire history lock: {}", e),
328 +                 message: format!("Failed to acquire history lock: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:334:22
    |
334 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
334 -             message: format!("Failed to acquire state lock: {}", e),
334 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:371:5
    |
371 |     pub async fn check_execution_timeout(&self) -> Result<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:374:26
    |
374 |                 message: format!("Failed to acquire state lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
374 -                 message: format!("Failed to acquire state lock: {}", e),
374 +                 message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:394:5
    |
394 |     pub async fn reset(&self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:399:26
    |
399 |                 message: format!("Failed to acquire state lock: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
399 -                 message: format!("Failed to acquire state lock: {}", e),
399 +                 message: format!("Failed to acquire state lock: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:411:34
    |
411 |                         message: format!("Failed to acquire history lock: {}", e),
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
411 -                         message: format!("Failed to acquire history lock: {}", e),
411 +                         message: format!("Failed to acquire history lock: {e}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:423:30
    |
423 |                     message: format!("Failed to acquire status lock: {}", e),
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
423 -                     message: format!("Failed to acquire status lock: {}", e),
423 +                     message: format!("Failed to acquire status lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:434:5
    |
434 |     pub async fn get_state_snapshot(&self) -> Result<WorkflowState> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:436:22
    |
436 |             message: format!("Failed to acquire state lock: {}", e),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
436 -             message: format!("Failed to acquire state lock: {}", e),
436 +             message: format!("Failed to acquire state lock: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:445:5
    |
445 | /     pub async fn track_shared_data_access(
446 | |         &self,
447 | |         key: Option<&str>,
448 | |         access_type: &str,
449 | |     ) -> Result<()> {
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: manual `Debug` impl does not include all fields
   --> llmspell-workflows/src/state.rs:488:1
    |
488 | / impl std::fmt::Debug for StateManager {
489 | |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
490 | |         f.debug_struct("StateManager")
491 | |             .field("config", &self.config)
...   |
498 | | }
    | |_^
    |
note: this field is unused
   --> llmspell-workflows/src/state.rs:17:5
    |
17  |     state: Arc<RwLock<WorkflowState>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: this field is unused
   --> llmspell-workflows/src/state.rs:19:5
    |
19  |     execution_history: Arc<RwLock<Vec<StepResult>>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: consider including all fields in this `Debug` impl
    = help: consider calling `.finish_non_exhaustive()` if you intend to ignore fields
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_fields_in_debug
    = note: `-W clippy::missing-fields-in-debug` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_fields_in_debug)]`

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/state.rs:502:5
    |
502 |     pub fn success_rate(&self) -> f64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn success_rate(&self) -> f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/state.rs:515:5
    |
515 |     pub fn current_execution_time(&self) -> Option<Duration> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn current_execution_time(&self) -> Option<Duration>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/state.rs:520:5
    |
520 |     pub fn generate_report(&self) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn generate_report(&self) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/state.rs:791:5
    |
791 |     pub fn new(workflow_id: String, config: WorkflowConfig, metadata: ComponentMetadata) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(workflow_id: String, config: WorkflowConfig, metadata: ComponentMetadata) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:839:5
    |
839 |     pub async fn load_state(&mut self) -> Result<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:860:26
    |
860 |                 message: format!("Failed to load workflow state: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
860 -                 message: format!("Failed to load workflow state: {}", e),
860 +                 message: format!("Failed to load workflow state: {e}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/state.rs:867:5
    |
867 |     pub async fn save_state(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/state.rs:887:26
    |
887 |                 message: format!("Failed to save workflow state: {}", e),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
887 -                 message: format!("Failed to save workflow state: {}", e),
887 +                 message: format!("Failed to save workflow state: {e}"),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/state.rs:897:5
    |
897 |     pub fn memory_state_manager(&self) -> &StateManager {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn memory_state_manager(&self) -> &StateManager`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/step_executor.rs:23:5
   |
23 |     pub fn new(config: WorkflowConfig) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: WorkflowConfig) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/step_executor.rs:31:5
   |
31 | /     pub fn new_with_hooks(
32 | |         config: WorkflowConfig,
33 | |         workflow_executor: Arc<WorkflowExecutor>,
34 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
31 ~     #[must_use] pub fn new_with_hooks(
32 +         config: WorkflowConfig,
33 +         workflow_executor: Arc<WorkflowExecutor>,
34 ~     ) -> Self {
   |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/step_executor.rs:42:5
   |
42 | /     pub async fn execute_step(
43 | |         &self,
44 | |         step: &WorkflowStep,
45 | |         context: StepExecutionContext,
46 | |     ) -> Result<StepResult> {
   | |___________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-workflows/src/step_executor.rs:52:5
   |
52 | /     pub async fn execute_step_with_metadata(
53 | |         &self,
54 | |         step: &WorkflowStep,
55 | |         context: StepExecutionContext,
56 | |         workflow_metadata: Option<ComponentMetadata>,
57 | |         workflow_type: Option<String>,
58 | |     ) -> Result<StepResult> {
   | |___________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:135:21
    |
135 |                     format!("Step timed out after {:?}", step_timeout),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
135 -                     format!("Step timed out after {:?}", step_timeout),
135 +                     format!("Step timed out after {step_timeout:?}"),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/step_executor.rs:162:5
    |
162 | /     pub async fn execute_step_with_retry(
163 | |         &self,
164 | |         step: &WorkflowStep,
165 | |         context: StepExecutionContext,
166 | |         error_strategy: &ErrorStrategy,
167 | |     ) -> Result<StepResult> {
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-workflows/src/step_executor.rs:173:5
    |
173 | /     pub async fn execute_step_with_retry_and_metadata(
174 | |         &self,
175 | |         step: &WorkflowStep,
176 | |         mut context: StepExecutionContext,
...   |
179 | |         workflow_type: Option<String>,
180 | |     ) -> Result<StepResult> {
    | |___________________________^
    |
note: first possible panic found here
   --> llmspell-workflows/src/step_executor.rs:230:32
    |
230 |         let mut final_result = last_result.unwrap();
    |                                ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-workflows/src/step_executor.rs:173:5
    |
173 | /     pub async fn execute_step_with_retry_and_metadata(
174 | |         &self,
175 | |         step: &WorkflowStep,
176 | |         mut context: StepExecutionContext,
...   |
179 | |         workflow_type: Option<String>,
180 | |     ) -> Result<StepResult> {
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:287:17
    |
287 |                 format!("Calculator result for '{}': 42", expression)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
287 -                 format!("Calculator result for '{}': 42", expression)
287 +                 format!("Calculator result for '{expression}': 42")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:294:17
    |
294 |                 format!("File operation '{}' completed", operation)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
294 -                 format!("File operation '{}' completed", operation)
294 +                 format!("File operation '{operation}' completed")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:299:17
    |
299 |                 format!("JSON processed: {}", input)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
299 -                 format!("JSON processed: {}", input)
299 +                 format!("JSON processed: {input}")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:302:17
    |
302 | /                 format!(
303 | |                     "Tool '{}' executed with parameters: {}",
304 | |                     tool_name, parameters
305 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:336:22
    |
336 |         let output = format!("Agent {:?} processed: {}", agent_id, input);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
336 -         let output = format!("Agent {:?} processed: {}", agent_id, input);
336 +         let output = format!("Agent {agent_id:?} processed: {input}");
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:365:17
    |
365 |                 format!("Data transformed with parameters: {}", parameters)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
365 -                 format!("Data transformed with parameters: {}", parameters)
365 +                 format!("Data transformed with parameters: {parameters}")
    |

warning: redundant closure
   --> llmspell-workflows/src/step_executor.rs:376:65
    |
376 |                 if let Some(ms) = parameters.get("ms").and_then(|v| v.as_u64()) {
    |                                                                 ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:383:17
    |
383 |                 format!("Function '{}' completed successfully", function_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
383 -                 format!("Function '{}' completed successfully", function_name)
383 +                 format!("Function '{function_name}' completed successfully")
    |

warning: redundant closure
   --> llmspell-workflows/src/step_executor.rs:387:77
    |
387 |                 if let Some(delay_ms) = parameters.get("delay_ms").and_then(|v| v.as_u64()) {
    |                                                                             ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:390:17
    |
390 |                 format!("Operation '{}' completed", function_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
390 -                 format!("Operation '{}' completed", function_name)
390 +                 format!("Operation '{function_name}' completed")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:394:17
    |
394 |                 format!("Data processing function '{}' completed", function_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
394 -                 format!("Data processing function '{}' completed", function_name)
394 +                 format!("Data processing function '{function_name}' completed")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:398:17
    |
398 |                 format!("Error handling function '{}' executed", function_name)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
398 -                 format!("Error handling function '{}' executed", function_name)
398 +                 format!("Error handling function '{function_name}' executed")
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-workflows/src/step_executor.rs:405:17
    |
405 | /                 format!(
406 | |                     "Custom function '{}' executed with parameters: {}",
407 | |                     function_name, parameters
408 | |                 )
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/step_executor.rs:418:18
    |
418 |     /// Create a StepContext for hooks
    |                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
418 -     /// Create a StepContext for hooks
418 +     /// Create a `StepContext` for hooks
    |

warning: unused `self` argument
   --> llmspell-workflows/src/step_executor.rs:420:9
    |
420 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/step_executor.rs:441:18
    |
441 |     /// Create a StepContext with result for post-execution hooks
    |                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
441 -     /// Create a StepContext with result for post-execution hooks
441 +     /// Create a `StepContext` with result for post-execution hooks
    |

warning: unused `self` argument
   --> llmspell-workflows/src/step_executor.rs:443:9
    |
443 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/traits.rs:22:5
   |
22 |     pub fn new(name: String, step_type: StepType) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(name: String, step_type: StepType) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/traits.rs:32:5
   |
32 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/traits.rs:32:5
   |
32 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
33 | |         self.timeout = Some(timeout);
34 | |         self
35 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/traits.rs:37:5
   |
37 |     pub fn with_retry(mut self, attempts: u32) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_retry(mut self, attempts: u32) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/traits.rs:37:5
   |
37 | /     pub fn with_retry(mut self, attempts: u32) -> Self {
38 | |         self.retry_attempts = attempts;
39 | |         self
40 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/traits.rs:76:5
   |
76 | /     pub fn success(
77 | |         step_id: ComponentId,
78 | |         step_name: String,
79 | |         output: String,
80 | |         duration: Duration,
81 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
76 ~     #[must_use] pub fn success(
77 +         step_id: ComponentId,
78 +         step_name: String,
79 +         output: String,
80 +         duration: Duration,
81 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/traits.rs:93:5
   |
93 | /     pub fn failure(
94 | |         step_id: ComponentId,
95 | |         step_name: String,
96 | |         error: String,
97 | |         duration: Duration,
98 | |         retry_count: u32,
99 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
93 ~     #[must_use] pub fn failure(
94 +         step_id: ComponentId,
95 +         step_name: String,
96 +         error: String,
97 +         duration: Duration,
98 +         retry_count: u32,
99 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/types.rs:22:5
   |
22 |     pub fn new(input: serde_json::Value) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(input: serde_json::Value) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/types.rs:30:5
   |
30 |     pub fn with_context(mut self, key: String, value: serde_json::Value) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_context(mut self, key: String, value: serde_json::Value) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/types.rs:30:5
   |
30 | /     pub fn with_context(mut self, key: String, value: serde_json::Value) -> Self {
31 | |         self.context.insert(key, value);
32 | |         self
33 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/types.rs:35:5
   |
35 |     pub fn with_timeout(mut self, timeout: Duration) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_timeout(mut self, timeout: Duration) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-workflows/src/types.rs:35:5
   |
35 | /     pub fn with_timeout(mut self, timeout: Duration) -> Self {
36 | |         self.timeout = Some(timeout);
37 | |         self
38 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/types.rs:61:5
   |
61 | /     pub fn success(
62 | |         output: serde_json::Value,
63 | |         duration: Duration,
64 | |         steps_executed: usize,
65 | |         final_context: HashMap<String, serde_json::Value>,
66 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
61 ~     #[must_use] pub fn success(
62 +         output: serde_json::Value,
63 +         duration: Duration,
64 +         steps_executed: usize,
65 +         final_context: HashMap<String, serde_json::Value>,
66 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
  --> llmspell-workflows/src/types.rs:78:5
   |
78 | /     pub fn failure(
79 | |         error: String,
80 | |         duration: Duration,
81 | |         steps_executed: usize,
82 | |         steps_failed: usize,
83 | |         final_context: HashMap<String, serde_json::Value>,
84 | |     ) -> Self {
   | |_____________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
   |
78 ~     #[must_use] pub fn failure(
79 +         error: String,
80 +         duration: Duration,
81 +         steps_executed: usize,
82 +         steps_failed: usize,
83 +         final_context: HashMap<String, serde_json::Value>,
84 ~     ) -> Self {
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:117:5
    |
117 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:143:5
    |
143 |     pub fn get_step_output(&self, step_id: ComponentId) -> Option<&serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_step_output(&self, step_id: ComponentId) -> Option<&serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:152:5
    |
152 |     pub fn get_shared_data(&self, key: &str) -> Option<&serde_json::Value> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_shared_data(&self, key: &str) -> Option<&serde_json::Value>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:156:5
    |
156 |     pub fn execution_duration(&self) -> Option<Duration> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execution_duration(&self) -> Option<Duration>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/types.rs:203:34
    |
203 |     /// Create a new builder for WorkflowConfig
    |                                  ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
203 -     /// Create a new builder for WorkflowConfig
203 +     /// Create a new builder for `WorkflowConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:204:5
    |
204 |     pub fn builder() -> WorkflowConfigBuilder {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn builder() -> WorkflowConfigBuilder`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:209:5
    |
209 |     pub fn fast() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn fast() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:222:5
    |
222 |     pub fn robust() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn robust() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/types.rs:252:17
    |
252 | /// Builder for WorkflowConfig
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
252 - /// Builder for WorkflowConfig
252 + /// Builder for `WorkflowConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:260:5
    |
260 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:267:5
    |
267 |     pub fn max_execution_time(mut self, duration: Option<Duration>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn max_execution_time(mut self, duration: Option<Duration>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:267:5
    |
267 | /     pub fn max_execution_time(mut self, duration: Option<Duration>) -> Self {
268 | |         self.config.max_execution_time = duration;
269 | |         self
270 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:273:5
    |
273 |     pub fn default_step_timeout(mut self, duration: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn default_step_timeout(mut self, duration: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:273:5
    |
273 | /     pub fn default_step_timeout(mut self, duration: Duration) -> Self {
274 | |         self.config.default_step_timeout = duration;
275 | |         self
276 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:279:5
    |
279 |     pub fn max_retry_attempts(mut self, attempts: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn max_retry_attempts(mut self, attempts: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:279:5
    |
279 | /     pub fn max_retry_attempts(mut self, attempts: u32) -> Self {
280 | |         self.config.max_retry_attempts = attempts;
281 | |         self
282 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:285:5
    |
285 |     pub fn retry_delay_ms(mut self, delay_ms: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn retry_delay_ms(mut self, delay_ms: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:285:5
    |
285 | /     pub fn retry_delay_ms(mut self, delay_ms: u64) -> Self {
286 | |         self.config.retry_delay_ms = delay_ms;
287 | |         self
288 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:291:5
    |
291 |     pub fn exponential_backoff(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn exponential_backoff(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:291:5
    |
291 | /     pub fn exponential_backoff(mut self, enabled: bool) -> Self {
292 | |         self.config.exponential_backoff = enabled;
293 | |         self
294 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:297:5
    |
297 |     pub fn continue_on_error(mut self, enabled: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn continue_on_error(mut self, enabled: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:297:5
    |
297 | /     pub fn continue_on_error(mut self, enabled: bool) -> Self {
298 | |         self.config.continue_on_error = enabled;
299 | |         self
300 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:303:5
    |
303 |     pub fn default_error_strategy(mut self, strategy: crate::traits::ErrorStrategy) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn default_error_strategy(mut self, strategy: crate::traits::ErrorStrategy) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:303:5
    |
303 | /     pub fn default_error_strategy(mut self, strategy: crate::traits::ErrorStrategy) -> Self {
304 | |         self.config.default_error_strategy = strategy;
305 | |         self
306 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:309:5
    |
309 |     pub fn retry_strategy(mut self, max_attempts: u32, delay_ms: u64, exponential: bool) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn retry_strategy(mut self, max_attempts: u32, delay_ms: u64, exponential: bool) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:309:5
    |
309 | /     pub fn retry_strategy(mut self, max_attempts: u32, delay_ms: u64, exponential: bool) -> Self {
310 | |         self.config.max_retry_attempts = max_attempts;
311 | |         self.config.retry_delay_ms = delay_ms;
312 | |         self.config.exponential_backoff = exponential;
313 | |         self
314 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/types.rs:316:38
    |
316 |     /// Convenience method alias for default_step_timeout
    |                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
316 -     /// Convenience method alias for default_step_timeout
316 +     /// Convenience method alias for `default_step_timeout`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:317:5
    |
317 |     pub fn default_timeout(self, duration: Duration) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn default_timeout(self, duration: Duration) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:317:5
    |
317 | /     pub fn default_timeout(self, duration: Duration) -> Self {
318 | |         self.default_step_timeout(duration)
319 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: item in documentation is missing backticks
   --> llmspell-workflows/src/types.rs:321:25
    |
321 |     /// Build the final WorkflowConfig
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
321 -     /// Build the final WorkflowConfig
321 +     /// Build the final `WorkflowConfig`
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:322:5
    |
322 |     pub fn build(self) -> WorkflowConfig {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn build(self) -> WorkflowConfig`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:349:5
    |
349 |     pub fn new(workflow_state: WorkflowState, timeout: Option<Duration>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(workflow_state: WorkflowState, timeout: Option<Duration>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:360:5
    |
360 |     pub fn with_state_accessor(mut self, accessor: WorkflowStateAccessor) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_state_accessor(mut self, accessor: WorkflowStateAccessor) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:360:5
    |
360 | /     pub fn with_state_accessor(mut self, accessor: WorkflowStateAccessor) -> Self {
361 | |         self.state_accessor = Some(accessor);
362 | |         self
363 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: this method could have a `#[must_use]` attribute
   --> llmspell-workflows/src/types.rs:365:5
    |
365 |     pub fn with_retry(mut self, attempt: u32, max_attempts: u32) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn with_retry(mut self, attempt: u32, max_attempts: u32) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[must_use]` attribute on a method returning `Self`
   --> llmspell-workflows/src/types.rs:365:5
    |
365 | /     pub fn with_retry(mut self, attempt: u32, max_attempts: u32) -> Self {
366 | |         self.retry_attempt = attempt;
367 | |         self.is_final_retry = attempt >= max_attempts;
368 | |         self
369 | |     }
    | |_____^
    |
    = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:312:5
    |
312 | /     async fn evaluate_shared_data_equals(
313 | |         &self,
314 | |         key: &str,
315 | |         expected_value: &serde_json::Value,
...   |
337 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:340:5
    |
340 | /     async fn evaluate_shared_data_exists(
341 | |         &self,
342 | |         key: &str,
343 | |         context: &ConditionEvaluationContext,
...   |
356 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:359:5
    |
359 | /     async fn evaluate_step_result_equals(
360 | |         &self,
361 | |         step_id: ComponentId,
362 | |         expected_output: &str,
...   |
383 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:386:5
    |
386 | /     async fn evaluate_step_succeeded(
387 | |         &self,
388 | |         step_id: ComponentId,
389 | |         context: &ConditionEvaluationContext,
...   |
409 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:412:5
    |
412 | /     async fn evaluate_step_failed(
413 | |         &self,
414 | |         step_id: ComponentId,
415 | |         context: &ConditionEvaluationContext,
...   |
435 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:612:5
    |
612 | /     async fn parse_shared_data_expression(
613 | |         &self,
614 | |         expr: &str,
615 | |         context: &ConditionEvaluationContext,
...   |
661 | |         None
662 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/conditions.rs:665:5
    |
665 | /     async fn parse_step_result_expression(
666 | |         &self,
667 | |         expr: &str,
668 | |         context: &ConditionEvaluationContext,
...   |
708 | |         None
709 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
  --> llmspell-workflows/src/error_handling.rs:22:5
   |
22 | /     pub async fn handle_step_failure(
23 | |         &self,
24 | |         step_result: &StepResult,
25 | |         strategy: Option<&ErrorStrategy>,
...  |
70 | |     }
   | |_____^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/error_handling.rs:73:5
    |
73  | /     pub async fn analyze_workflow_error(
74  | |         &self,
75  | |         error: &LLMSpellError,
76  | |         completed_steps: &[StepResult],
...   |
120 | |         })
121 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
  --> llmspell-workflows/src/hooks/lifecycle.rs:73:5
   |
73 | /     pub async fn execute(
74 | |         &self,
75 | |         point: &HookPoint,
76 | |         _context: &HookContext,
...  |
92 | |         Ok(HookResult::default())
93 | |     }
   | |_____^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/loop.rs:397:5
    |
397 | /     async fn evaluate_condition(
398 | |         &self,
399 | |         expression: &str,
400 | |         state: &WorkflowState,
...   |
431 | |         Ok(false)
432 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/loop.rs:462:5
    |
462 | /     async fn generate_iterator_values(&self) -> Result<Vec<(usize, Value)>> {
463 | |         match &self.config.iterator {
464 | |             LoopIterator::Collection { values } => Ok(values
465 | |                 .iter()
...   |
497 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:86:5
    |
86  | /     pub async fn start_execution(&self) -> Result<()> {
87  | |         debug!("Starting workflow execution");
...   |
110 | |         Ok(())
111 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:114:5
    |
114 | /     pub async fn complete_execution(&self, success: bool) -> Result<()> {
115 | |         debug!("Completing workflow execution with success: {}", success);
116 | |
117 | |         let mut status = self
...   |
132 | |         Ok(())
133 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:136:5
    |
136 | /     pub async fn cancel_execution(&self) -> Result<()> {
137 | |         debug!("Cancelling workflow execution");
138 | |
139 | |         let mut status = self
...   |
150 | |         Ok(())
151 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:154:5
    |
154 | /     pub async fn get_status(&self) -> Result<WorkflowStatus> {
155 | |         let status = self
156 | |             .workflow_status
157 | |             .read()
...   |
164 | |         Ok(status.clone())
165 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:168:5
    |
168 | /     pub async fn advance_step(&self) -> Result<()> {
169 | |         let mut state = self.state.write().map_err(|e| LLMSpellError::Workflow {
170 | |             message: format!("Failed to acquire state lock: {}", e),
171 | |             step: None,
...   |
178 | |         Ok(())
179 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:182:5
    |
182 | /     pub async fn get_current_step(&self) -> Result<usize> {
183 | |         let state = self.state.read().map_err(|e| LLMSpellError::Workflow {
184 | |             message: format!("Failed to acquire state lock: {}", e),
185 | |             step: None,
...   |
189 | |         Ok(state.current_step)
190 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:232:5
    |
232 | /     pub async fn get_shared_data(&self, key: &str) -> Result<Option<Value>> {
233 | |         let state = self.state.read().map_err(|e| LLMSpellError::Workflow {
234 | |             message: format!("Failed to acquire state lock: {}", e),
235 | |             step: None,
...   |
239 | |         Ok(state.get_shared_data(key).cloned())
240 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:243:5
    |
243 | /     pub async fn get_all_shared_data(&self) -> Result<HashMap<String, Value>> {
244 | |         let state = self.state.read().map_err(|e| LLMSpellError::Workflow {
245 | |             message: format!("Failed to acquire state lock: {}", e),
246 | |             step: None,
...   |
250 | |         Ok(state.shared_data.clone())
251 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:254:5
    |
254 | /     pub async fn set_step_output(&self, step_id: ComponentId, output: Value) -> Result<()> {
255 | |         let mut state = self.state.write().map_err(|e| LLMSpellError::Workflow {
256 | |             message: format!("Failed to acquire state lock: {}", e),
257 | |             step: None,
...   |
264 | |         Ok(())
265 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:268:5
    |
268 | /     pub async fn get_step_output(&self, step_id: ComponentId) -> Result<Option<Value>> {
269 | |         let state = self.state.read().map_err(|e| LLMSpellError::Workflow {
270 | |             message: format!("Failed to acquire state lock: {}", e),
271 | |             step: None,
...   |
275 | |         Ok(state.get_step_output(step_id).cloned())
276 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:309:5
    |
309 | /     pub async fn get_execution_history(&self) -> Result<Vec<StepResult>> {
310 | |         let history = self
311 | |             .execution_history
312 | |             .read()
...   |
319 | |         Ok(history.clone())
320 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:323:5
    |
323 | /     pub async fn get_execution_stats(&self) -> Result<ExecutionStats> {
324 | |         let history = self
325 | |             .execution_history
326 | |             .read()
...   |
367 | |         })
368 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:371:5
    |
371 | /     pub async fn check_execution_timeout(&self) -> Result<bool> {
372 | |         if let Some(max_time) = self.config.max_execution_time {
373 | |             let state = self.state.read().map_err(|e| LLMSpellError::Workflow {
374 | |                 message: format!("Failed to acquire state lock: {}", e),
...   |
390 | |         Ok(false)
391 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:394:5
    |
394 | /     pub async fn reset(&self) -> Result<()> {
395 | |         debug!("Resetting workflow state");
...   |
430 | |         Ok(())
431 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: unused `async` for function with no await statements
   --> llmspell-workflows/src/state.rs:434:5
    |
434 | /     pub async fn get_state_snapshot(&self) -> Result<WorkflowState> {
435 | |         let state = self.state.read().map_err(|e| LLMSpellError::Workflow {
436 | |             message: format!("Failed to acquire state lock: {}", e),
437 | |             step: None,
...   |
441 | |         Ok(state.clone())
442 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: `llmspell-workflows` (lib) generated 565 warnings (run `cargo clippy --fix --lib -p llmspell-workflows` to apply 370 suggestions)
warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/communication/database_connector.rs:392:37
    |
392 | / ...                   if let Ok(v) = row.try_get::<String, _>(i) {
393 | | ...                       serde_json::Value::String(v)
394 | | ...                   } else if let Ok(v) = row.try_get::<i64, _>(i) {
395 | | ...                       serde_json::Value::Number(v.into())
...   |
404 | | ...                       serde_json::Value::Null
405 | | ...                   };
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
392 ~                                     row.try_get::<String, _>(i).map_or_else(|_| if let Ok(v) = row.try_get::<i64, _>(i) {
393 +                                         serde_json::Value::Number(v.into())
394 +                                     } else if let Ok(v) = row.try_get::<f64, _>(i) {
395 +                                         serde_json::Value::Number(
396 +                                             serde_json::Number::from_f64(v)
397 +                                                 .unwrap_or(serde_json::Number::from(0)),
398 +                                         )
399 +                                     } else if let Ok(v) = row.try_get::<bool, _>(i) {
400 +                                         serde_json::Value::Bool(v)
401 +                                     } else {
402 +                                         serde_json::Value::Null
403 ~                                     }, |v| serde_json::Value::String(v));
    |

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/communication/database_connector.rs:399:50
    |
399 | ...                   .unwrap_or(serde_json::Number::from(0)),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| serde_json::Number::from(0))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: this function's return value is unnecessarily wrapped by `Result`
    --> llmspell-tools/src/data/csv_analyzer.rs:1084:5
     |
1084 | /     fn evaluate_expression(
1085 | |         expr: &str,
1086 | |         headers: &csv::StringRecord,
1087 | |         record: &csv::StringRecord,
...    |
1106 | |         Ok(expr.to_string())
1107 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
     = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
     |
1088 -     ) -> Result<String> {
1088 +     ) -> std::string::String {
     |
help: ...and then change returning expressions
     |
1100 ~                     return format!("{:.2}", left * right);
1101 |                 }
 ...
1105 |         // Default: return the expression as-is
1106 ~         expr.to_string()
     |

warning: the function has a cognitive complexity of (39/25)
   --> llmspell-tools/src/fs/archive_handler.rs:286:8
    |
286 |     fn extract_zip(
    |        ^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::cognitive_complexity)]`

warning: the function has a cognitive complexity of (35/25)
   --> llmspell-tools/src/fs/archive_handler.rs:378:8
    |
378 |     fn extract_tar(
    |        ^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: the function has a cognitive complexity of (35/25)
   --> llmspell-tools/src/fs/archive_handler.rs:446:8
    |
446 |     fn extract_tar_gz(
    |        ^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/fs/file_watcher.rs:183:13
    |
183 |             notify::EventKind::Other | _ => FileEventType::Other,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:378:25
    |
378 |                         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones
    = note: `-W clippy::assigning-clones` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::assigning_clones)]`

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:395:25
    |
395 |                         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:434:9
    |
434 |         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/lifecycle/state_machine.rs:261:13
    |
261 |             (Terminated, _) | _ => false,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> llmspell-tools/src/media/audio_processor.rs:555:37
    |
555 |                   let target_format = extract_optional_string(params, "target_format")
    |  _____________________________________^
556 | |                     .map(|s| match s.to_lowercase().as_str() {
557 | |                         "wav" => AudioFormat::Wav,
558 | |                         "mp3" => AudioFormat::Mp3,
559 | |                         _ => AudioFormat::Unknown,
560 | |                     })
561 | |                     .unwrap_or_else(|| AudioFormat::from_extension(Path::new(target_path)));
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> llmspell-tools/src/media/image_processor.rs:549:37
    |
549 |                   let target_format = extract_optional_string(params, "target_format")
    |  _____________________________________^
550 | |                     .map(|s| match s.to_lowercase().as_str() {
551 | |                         "png" => ImageFormat::Png,
552 | |                         "jpeg" | "jpg" => ImageFormat::Jpeg,
...   |
556 | |                     })
557 | |                     .unwrap_or_else(|| ImageFormat::from_extension(Path::new(output_path)));
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or

warning: use Option::map_or instead of an if let/else
   --> llmspell-tools/src/search/web_search.rs:473:27
    |
473 |           let max_results = if let Some(n) = params
    |  ___________________________^
474 | |             .get("max_results")
475 | |             .and_then(serde_json::Value::as_u64)
...   |
479 | |             self.config.max_results
480 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
473 ~         let max_results = params
474 +             .get("max_results")
475 ~             .and_then(serde_json::Value::as_u64).map_or(self.config.max_results, |n| usize::try_from(n).unwrap_or(usize::MAX));
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/search/web_search.rs:507:29
    |
507 |           let provider_used = if let Some(r) = results.first() {
    |  _____________________________^
508 | |             r.provider.clone()
509 | |         } else {
510 | |             "unknown".to_string()
511 | |         };
    | |_________^ help: try: `results.first().map_or_else(|| "unknown".to_string(), |r| r.provider.clone())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: the function has a cognitive complexity of (42/25)
   --> llmspell-tools/src/system/environment_reader.rs:129:8
    |
129 |     fn is_var_allowed(&self, var_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: the function has a cognitive complexity of (26/25)
   --> llmspell-tools/src/system/process_executor.rs:216:8
    |
216 |     fn is_executable_allowed(&self, executable: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function's return value is unnecessary
   --> llmspell-tools/src/util/data_validation.rs:268:5
    |
268 | /     fn validate_value(
269 | |         &self,
270 | |         field: &str,
271 | |         value: &Value,
...   |
293 | |         Ok(())
294 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove the return type...
    |
274 -     ) -> Result<()> {
274 +     ) -> () {
    |
help: ...and then remove returned values
    |
293 -         Ok(())
    |

warning: the function has a cognitive complexity of (31/25)
   --> llmspell-tools/src/util/data_validation.rs:298:8
    |
298 |     fn validate_rule(
    |        ^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this looks like a formatting argument but it is not part of a formatting macro
   --> llmspell-tools/src/util/data_validation.rs:569:32
    |
569 |             |msg| msg.replace("{field}", field),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#literal_string_with_formatting_args
    = note: `-W clippy::literal-string-with-formatting-args` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::literal_string_with_formatting_args)]`

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-tools/src/util/diff_calculator.rs:89:65
   |
89 |     fn calculate_text_diff(&self, old: &str, new: &str, format: DiffFormat) -> String {
   |                                                                 ^^^^^^^^^^ help: consider taking a reference instead: `&DiffFormat`
   |
help: or consider marking this type as `Copy`
  --> llmspell-tools/src/util/diff_calculator.rs:35:1
   |
35 | enum DiffFormat {
   | ^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
   = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
   --> llmspell-tools/src/util/uuid_generator.rs:140:47
    |
140 |     fn format_uuid(&self, uuid: Uuid, format: &UuidFormat) -> String {
    |                                               ^^^^^^^^^^^ help: consider passing by value instead: `UuidFormat`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
    = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/web/api_tester.rs:212:44
    |
212 |                 "body": body_json.as_ref().unwrap_or(&json!(body_text)),
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &json!(body_text))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-tools/src/web/sitemap_crawler.rs:330:5
    |
330 | /     fn parse_sitemap(&self, xml_content: &str) -> Result<Vec<Value>> {
331 | |         let mut urls = Vec::new();
332 | |         let lines: Vec<&str> = xml_content.lines().collect();
...   |
405 | |         Ok(urls)
406 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
330 -     fn parse_sitemap(&self, xml_content: &str) -> Result<Vec<Value>> {
330 +     fn parse_sitemap(&self, xml_content: &str) -> std::vec::Vec<serde_json::Value> {
    |
help: ...and then change returning expressions
    |
405 -         Ok(urls)
405 +         urls
    |

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/web/webhook_caller.rs:171:17
    |
171 |                 "POST" | _ => client.post(url), // Default to POST for unknown methods
    |                 ^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/web/webhook_caller.rs:228:56
    |
228 | ...                   "body": body_json.as_ref().unwrap_or(&json!(body_text)),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &json!(body_text))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: `llmspell-tools` (lib) generated 26 warnings
    Checking llmspell-agents v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents)
warning: unnested or-patterns
   --> llmspell-agents/src/context/inheritance.rs:278:13
    |
278 |             Some(FieldTransform::Copy) | Some(FieldTransform::Custom(_)) | None => value.clone(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnested_or_patterns
    = note: `-W clippy::unnested-or-patterns` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnested_or_patterns)]`
help: nest the patterns
    |
278 -             Some(FieldTransform::Copy) | Some(FieldTransform::Custom(_)) | None => value.clone(),
278 +             Some(FieldTransform::Copy | FieldTransform::Custom(_)) | None => value.clone(),
    |

warning: unnested or-patterns
   --> llmspell-agents/src/lifecycle/state_machine.rs:270:13
    |
270 | /             (Uninitialized, Initializing | Error)
271 | |             | (Initializing, Ready | Error | Terminating)
272 | |             | (Ready, Running | Paused | Terminating | Error)
273 | |             | (Running, Ready | Paused | Terminating | Error)
...   |
276 | |             | (Recovering, Ready | Error | Terminating)
277 | |             | (Terminating, Terminated | Error) => true,
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnested_or_patterns
help: nest the patterns
    |
270 ~             (Uninitialized, Initializing | Error) |
271 + (Initializing | Recovering, Ready | Error | Terminating) |
272 + (Ready, Running | Paused | Terminating | Error) |
273 + (Running, Ready | Paused | Terminating | Error) |
274 + (Paused, Ready | Running | Terminating | Error) |
275 + (Error, Recovering | Terminating | Terminated) |
276 ~ (Terminating, Terminated | Error) => true,
    |

warning: redundant closure
   --> llmspell-agents/src/agent_wrapped_tool.rs:296:13
    |
296 |             |template| template.clone(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::clone::Clone::clone`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: redundant closure
   --> llmspell-agents/src/agent_wrapped_tool.rs:438:17
    |
438 |                 |name| name.clone(),
    |                 ^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::clone::Clone::clone`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-agents/src/agent_wrapped_tool.rs:455:17
    |
455 |                 |description| description.clone(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::clone::Clone::clone`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:145:23
    |
145 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
145 -     /// Panics if the RwLock is poisoned
145 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:191:23
    |
191 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
191 -     /// Panics if the RwLock is poisoned
191 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:215:23
    |
215 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
215 -     /// Panics if the RwLock is poisoned
215 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:225:23
    |
225 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
225 -     /// Panics if the RwLock is poisoned
225 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:236:23
    |
236 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
236 -     /// Panics if the RwLock is poisoned
236 +     /// Panics if the `RwLock` is poisoned
    |

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
   --> llmspell-agents/src/composition/capabilities.rs:248:22
    |
248 |         for entry in capabilities_vec.iter() {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&capabilities_vec`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
    = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:290:23
    |
290 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
290 -     /// Panics if the RwLock is poisoned
290 +     /// Panics if the `RwLock` is poisoned
    |

warning: this `map_or` can be simplified
   --> llmspell-agents/src/composition/capabilities.rs:302:12
    |
302 |           if requirement
    |  ____________^
303 | |             .category
304 | |             .as_ref()
305 | |             .map_or(false, |req_category| &capability.category != req_category)
    | |_______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
    = note: `-W clippy::unnecessary-map-or` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unnecessary_map_or)]`
help: use is_some_and instead
    |
305 -             .map_or(false, |req_category| &capability.category != req_category)
305 +             .is_some_and(|req_category| &capability.category != req_category)
    |

warning: this `map_or` can be simplified
   --> llmspell-agents/src/composition/capabilities.rs:312:16
    |
312 |               if capability
    |  ________________^
313 | |                 .version
314 | |                 .as_ref()
315 | |                 .map_or(true, |cap_version| cap_version < min_version)
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_none_or instead
    |
315 -                 .map_or(true, |cap_version| cap_version < min_version)
315 +                 .is_none_or(|cap_version| cap_version < min_version)
    |

warning: this `map_or` can be simplified
   --> llmspell-agents/src/composition/capabilities.rs:331:16
    |
331 |               if self
    |  ________________^
332 | |                 .capabilities
333 | |                 .read()
334 | |                 .unwrap()
335 | |                 .get(&cap_id)
336 | |                 .map_or(false, |entry| entry.score < min_score)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
336 -                 .map_or(false, |entry| entry.score < min_score)
336 +                 .is_some_and(|entry| entry.score < min_score)
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:393:23
    |
393 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
393 -     /// Panics if the RwLock is poisoned
393 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:440:23
    |
440 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
440 -     /// Panics if the RwLock is poisoned
440 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:454:23
    |
454 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
454 -     /// Panics if the RwLock is poisoned
454 +     /// Panics if the `RwLock` is poisoned
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/capabilities.rs:473:5
    |
473 | /     pub fn set_availability(
474 | |         &self,
475 | |         provider_id: &str,
476 | |         capability_name: &str,
477 | |         available: bool,
478 | |     ) -> Result<()> {
    | |___________________^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/capabilities.rs:481:32
    |
481 |         let mut capabilities = self.capabilities.write().unwrap();
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: item in documentation is missing backticks
   --> llmspell-agents/src/composition/capabilities.rs:500:23
    |
500 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
500 -     /// Panics if the RwLock is poisoned
500 +     /// Panics if the `RwLock` is poisoned
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/delegation.rs:298:5
    |
298 |     pub async fn delegate(&self, request: DelegationRequest) -> Result<DelegationResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/delegation.rs:316:31
    |
316 |             let mut metrics = self.metrics.write().unwrap();
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/delegation.rs:393:5
    |
393 |     pub fn set_strategy(&self, strategy: DelegationStrategy) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/delegation.rs:394:10
    |
394 |         *self.strategy.write().unwrap() = strategy;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/delegation.rs:398:5
    |
398 |     pub fn metrics(&self) -> DelegationMetrics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/delegation.rs:399:9
    |
399 |         self.metrics.read().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/hierarchical.rs:121:5
    |
121 |     pub fn set_parent(&self, parent: Weak<dyn HierarchicalAgent>) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/hierarchical.rs:122:32
    |
122 |         let mut parent_guard = self.parent.write().unwrap();
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this `map_or` can be simplified
   --> llmspell-agents/src/composition/hierarchical.rs:230:16
    |
230 |               if query
    |  ________________^
231 | |                 .text_search
232 | |                 .as_ref()
233 | |                 .map_or(false, |text| !name.contains(text))
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
233 -                 .map_or(false, |text| !name.contains(text))
233 +                 .is_some_and(|text| !name.contains(text))
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/hierarchical.rs:571:5
    |
571 |     pub fn build(self) -> HierarchicalCompositeAgent {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/hierarchical.rs:579:10
    |
579 |         *agent.execution_pattern.write().unwrap() = self.initial_pattern;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: manual `Debug` impl does not include all fields
  --> llmspell-agents/src/composition/lifecycle.rs:59:1
   |
59 | / impl std::fmt::Debug for ComponentLifecycle {
60 | |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
61 | |         f.debug_struct("ComponentLifecycle")
62 | |             .field("id", &self.id)
...  |
69 | | }
   | |_^
   |
note: this field is unused
  --> llmspell-agents/src/composition/lifecycle.rs:48:5
   |
48 |     pub component: Arc<dyn BaseAgent>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: consider including all fields in this `Debug` impl
   = help: consider calling `.finish_non_exhaustive()` if you intend to ignore fields
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_fields_in_debug
   = note: `-W clippy::missing-fields-in-debug` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_fields_in_debug)]`

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-agents/src/composition/lifecycle.rs:690:13
    |
690 |             "ready" | _ => LifecycleState::Ready,
    |             ^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/composition/tool_composition.rs:316:5
    |
316 | /     pub async fn execute<T>(
317 | |         &self,
318 | |         tool_provider: &T,
319 | |         initial_parameters: JsonValue,
...   |
322 | |     where
323 | |         T: ToolProvider,
    | |________________________^
    |
note: first possible panic found here
   --> llmspell-agents/src/composition/tool_composition.rs:391:33
    |
391 | ...                   step.retry_config.as_ref().unwrap(),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-agents/src/composition/tool_composition.rs:316:5
    |
316 | /     pub async fn execute<T>(
317 | |         &self,
318 | |         tool_provider: &T,
319 | |         initial_parameters: JsonValue,
...   |
322 | |     where
323 | |         T: ToolProvider,
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: future cannot be sent between threads safely
   --> llmspell-agents/src/composition/tool_composition.rs:316:5
    |
316 | /     pub async fn execute<T>(
317 | |         &self,
318 | |         tool_provider: &T,
319 | |         initial_parameters: JsonValue,
...   |
322 | |     where
323 | |         T: ToolProvider,
    | |________________________^ future returned by `execute` is not `Send`
    |
note: future is not `Send` as this value is used across an await
   --> llmspell-agents/src/composition/tool_composition.rs:358:22
    |
318 |         tool_provider: &T,
    |         ------------- has type `&T` which is not `Send`
...
358 |                     .await
    |                      ^^^^^ await occurs here, with `tool_provider` maybe used later
    = note: `T` doesn't implement `std::marker::Sync`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#future_not_send
    = note: `-W clippy::future-not-send` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::future_not_send)]`

warning: this `map_or` can be simplified
   --> llmspell-agents/src/composition/tool_composition.rs:384:28
    |
384 |                           if step.retry_config.as_ref().map_or(false, |retry_config| {
    |  ____________________________^
385 | |                             retry_attempts < retry_config.max_attempts
386 | |                         }) {
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
384 -                         if step.retry_config.as_ref().map_or(false, |retry_config| {
384 +                         if step.retry_config.as_ref().is_some_and(|retry_config| {
    |

warning: parameter is only used in recursion
   --> llmspell-agents/src/composition/tool_composition.rs:525:10
    |
525 |         &self,
    |          ^^^^
    |
note: parameter used here
   --> llmspell-agents/src/composition/tool_composition.rs:551:36
    |
551 |                 let source_value = self.resolve_data_flow(source, context)?;
    |                                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion
    = note: `-W clippy::only-used-in-recursion` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::only_used_in_recursion)]`

warning: future cannot be sent between threads safely
   --> llmspell-agents/src/composition/tool_composition.rs:604:5
    |
604 | /     async fn execute_step<T>(
605 | |         &self,
606 | |         tool_provider: &T,
607 | |         step: &CompositionStep,
...   |
611 | |     where
612 | |         T: ToolProvider,
    | |________________________^ future returned by `execute_step` is not `Send`
    |
note: captured value is not `Send` because `&` references cannot be sent unless their referent is `Sync`
   --> llmspell-agents/src/composition/tool_composition.rs:606:9
    |
606 |         tool_provider: &T,
    |         ^^^^^^^^^^^^^ has type `&T` which is not `Send`, because `T` is not `Sync`
    = note: `T` doesn't implement `std::marker::Sync`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#future_not_send

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-agents/src/context/event_integration.rs:250:5
    |
250 | /     pub async fn subscribe(
251 | |         &self,
252 | |         context_scope: ContextScope,
253 | |         event_types: Vec<String>,
254 | |         handler: Arc<dyn EventHandler>,
255 | |     ) -> Result<String> {
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-agents/src/context/hierarchy.rs:69:5
   |
69 |     pub fn find_by_id(&self, id: &str) -> Option<Arc<RwLock<Self>>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-agents/src/context/hierarchy.rs:77:30
   |
77 |             let child_node = child.read().unwrap();
   |                              ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-agents/src/context/hierarchy.rs:92:5
   |
92 |     pub fn descendants(&self) -> Vec<Arc<RwLock<Self>>> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-agents/src/context/hierarchy.rs:97:30
   |
97 |             let child_node = child.read().unwrap();
   |                              ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/context/hierarchy.rs:135:5
    |
135 |     pub fn create_root(&mut self, name: String, context: ExecutionContext) -> Result<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/context/hierarchy.rs:140:9
    |
140 | /         self.index
141 | |             .write()
142 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/context/hierarchy.rs:155:5
    |
155 | /     pub fn create_child(
156 | |         &self,
157 | |         parent_id: &str,
158 | |         scope: ContextScope,
159 | |         inheritance: InheritancePolicy,
160 | |     ) -> Result<ExecutionContext> {
    | |_________________________________^
    |
note: first possible panic found here
   --> llmspell-agents/src/context/hierarchy.rs:163:25
    |
163 |             let index = self.index.read().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/context/hierarchy.rs:190:5
    |
190 |     pub fn get(&self, id: &str) -> Option<ExecutionContext> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/context/hierarchy.rs:191:21
    |
191 |         let index = self.index.read().unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/context/hierarchy.rs:204:5
    |
204 |     pub fn remove(&mut self, id: &str) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/context/hierarchy.rs:205:25
    |
205 |         let mut index = self.index.write().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/context/hierarchy.rs:233:5
    |
233 |     pub fn roots(&self) -> HashMap<String, ExecutionContext> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/context/hierarchy.rs:237:38
    |
237 |                 let mut node_guard = node.write().unwrap();
    |                                      ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/context/hierarchy.rs:246:5
    |
246 |     pub fn stats(&self) -> ContextStats {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/context/hierarchy.rs:247:21
    |
247 |         let index = self.index.read().unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-agents/src/context/inheritance.rs:152:5
    |
152 | /     pub fn apply(
153 | |         &self,
154 | |         parent_ctx: &ExecutionContext,
155 | |         child_ctx: &mut ExecutionContext,
156 | |     ) -> Result<(), String> {
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
   --> llmspell-agents/src/context/inheritance.rs:240:72
    |
240 |     fn should_inherit_field(&self, field: &str, value: &Value, policy: &InheritancePolicy) -> bool {
    |                                                                        ^^^^^^^^^^^^^^^^^^ help: consider passing by value instead: `InheritancePolicy`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
    = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: this `map_or` can be simplified
   --> llmspell-agents/src/context/inheritance.rs:357:13
    |
357 | /             value.as_str().map_or(false, |level| {
358 | |                 ["low", "medium", "high", "critical"].contains(&level)
359 | |             })
    | |______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
357 -             value.as_str().map_or(false, |level| {
357 +             value.as_str().is_some_and(|level| {
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:125:23
    |
125 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
125 -     /// Panics if the RwLock is poisoned
125 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:135:23
    |
135 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
135 -     /// Panics if the RwLock is poisoned
135 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:145:23
    |
145 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
145 -     /// Panics if the RwLock is poisoned
145 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:165:23
    |
165 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
165 -     /// Panics if the RwLock is poisoned
165 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:190:23
    |
190 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
190 -     /// Panics if the RwLock is poisoned
190 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:233:23
    |
233 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
233 -     /// Panics if the RwLock is poisoned
233 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:278:23
    |
278 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
278 -     /// Panics if the RwLock is poisoned
278 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:302:23
    |
302 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
302 -     /// Panics if the RwLock is poisoned
302 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:408:23
    |
408 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
408 -     /// Panics if the RwLock is poisoned
408 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:439:23
    |
439 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
439 -     /// Panics if the RwLock is poisoned
439 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:456:23
    |
456 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
456 -     /// Panics if the RwLock is poisoned
456 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:482:23
    |
482 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
482 -     /// Panics if the RwLock is poisoned
482 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:497:23
    |
497 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
497 -     /// Panics if the RwLock is poisoned
497 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/context/shared_memory.rs:516:23
    |
516 |     /// Panics if the RwLock is poisoned or if duration conversion fails
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
516 -     /// Panics if the RwLock is poisoned or if duration conversion fails
516 +     /// Panics if the `RwLock` is poisoned or if duration conversion fails
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/di.rs:195:5
    |
195 |     pub fn with_tool(self, id: String, tool: Arc<dyn Tool>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/di.rs:199:17
    |
199 |                 self.container.register_tool(id, tool).await.unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this function's return value is unnecessary
   --> llmspell-agents/src/factory.rs:389:5
    |
389 | /     fn initialize_agent_lifecycle(agent_type: &str, agent_name: &str) -> Result<()> {
390 | |         info!(
391 | |             "Agent '{}' of type '{}' created with lifecycle management",
392 | |             agent_name, agent_type
...   |
397 | |         Ok(())
398 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove the return type...
    |
389 -     fn initialize_agent_lifecycle(agent_type: &str, agent_name: &str) -> Result<()> {
389 +     fn initialize_agent_lifecycle(agent_type: &str, agent_name: &str) -> () {
    |
help: ...and then remove returned values
    |
397 -         Ok(())
    |

warning: more than 3 bools in a struct
  --> llmspell-agents/src/hooks/state_persistence_hook.rs:22:1
   |
22 | / pub struct PersistenceConfig {
23 | |     /// Interval for automatic saves (None disables auto-save)
24 | |     pub auto_save_interval: Option<Duration>,
25 | |     /// Maximum number of retry attempts
...  |
38 | |     pub non_blocking: bool,
39 | | }
   | |_^
   |
   = help: consider using a state machine or refactoring bools into two-variant enums
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
   = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: this `map_or` can be simplified
   --> llmspell-agents/src/hooks/state_persistence_hook.rs:148:43
    |
148 |                           let should_save = last_saves.get(agent_id).map_or(
    |  ___________________________________________^
149 | |                             true, // Never saved
150 | |                             |last_save| {
151 | |                                 now.duration_since(*last_save)
...   |
154 | |                             },
155 | |                         );
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_none_or instead
    |
148 ~                         let should_save = last_saves.get(agent_id).is_none_or(
149 ~                             |last_save| {
    |

warning: this function's return value is unnecessary
   --> llmspell-agents/src/hooks/state_persistence_hook.rs:260:5
    |
260 | /     fn try_save_state(_agent: &AgentRef, agent_id: &str) -> Result<()> {
...   |
271 | |         Ok(())
272 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove the return type...
    |
260 -     fn try_save_state(_agent: &AgentRef, agent_id: &str) -> Result<()> {
260 +     fn try_save_state(_agent: &AgentRef, agent_id: &str) -> () {
    |
help: ...and then remove returned values
    |
271 -         Ok(())
    |

warning: using `clone` on type `LifecycleEventType` which implements the `Copy` trait
   --> llmspell-agents/src/lifecycle/events.rs:388:24
    |
388 |                 .entry(event.event_type.clone())
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `event.event_type`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::clone_on_copy)]`

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/lifecycle/middleware.rs:1:1
  |
1 | / //! ABOUTME: Lifecycle middleware system for intercepting and augmenting agent lifecycle transitions
2 | | //! ABOUTME: Provides composable middleware chain for logging, metrics, security, and custom lifecycle behavior
  | |_^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
  = note: `-W clippy::too-long-first-doc-paragraph` implied by `-W clippy::nursery`
  = help: to override `-W clippy::nursery` add `#[allow(clippy::too_long_first_doc_paragraph)]`

warning: more than 3 bools in a struct
   --> llmspell-agents/src/lifecycle/middleware.rs:192:1
    |
192 | / pub struct MiddlewareConfig {
193 | |     /// Enable middleware execution
194 | |     pub enabled: bool,
195 | |     /// Maximum execution time per middleware
...   |
204 | |     pub emit_events: bool,
205 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/lifecycle/shutdown.rs:215:5
    |
215 |     pub async fn add_hook(&self, hook: Arc<dyn ShutdownHook>) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/lifecycle/shutdown.rs:225:17
    |
225 |                 hooks.last().unwrap().priority()
    |                 ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: function call inside of `unwrap_or`
   --> llmspell-agents/src/lifecycle/shutdown.rs:372:30
    |
372 | ...                   .unwrap_or(&"Unknown error".to_string())
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &"Unknown error".to_string())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: function call inside of `unwrap_or`
   --> llmspell-agents/src/lifecycle/shutdown.rs:408:26
    |
408 |                         .unwrap_or(&"Unknown error".to_string())
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &"Unknown error".to_string())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: function call inside of `unwrap_or`
   --> llmspell-agents/src/lifecycle/shutdown.rs:712:22
    |
712 |                     .unwrap_or(&"Unknown error".to_string())
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &"Unknown error".to_string())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: more than 3 bools in a struct
   --> llmspell-agents/src/lifecycle/state_machine.rs:113:1
    |
113 | / pub struct StateMachineConfig {
114 | |     /// Maximum time allowed for state transitions
115 | |     pub max_transition_time: Duration,
116 | |     /// Enable automatic recovery from error states
...   |
135 | |     pub circuit_breaker_config: BreakerConfig,
136 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-agents/src/lifecycle/state_machine.rs:280:13
    |
280 |             (Terminated, _) | _ => false,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: this could be rewritten as `let...else`
   --> llmspell-agents/src/lifecycle/state_machine.rs:427:9
    |
427 | /         let (hook_executor, hook_registry) = match (&self.hook_executor, &self.hook_registry) {
428 | |             (Some(executor), Some(registry)) => (executor, registry),
429 | |             _ => return Ok(()), // No hooks configured
430 | |         };
    | |__________^ help: consider writing: `let (Some(hook_executor), Some(hook_registry)) = (&self.hook_executor, &self.hook_registry) else { return Ok(()) };`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else
    = note: `-W clippy::manual-let-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::manual_let_else)]`

warning: this `map_or` can be simplified
   --> llmspell-agents/src/lifecycle/state_machine.rs:541:9
    |
541 | /         tokens.get(&transition_id).map_or(false, |token| {
542 | |             token.cancel();
543 | |             true
544 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
541 -         tokens.get(&transition_id).map_or(false, |token| {
541 +         tokens.get(&transition_id).is_some_and(|token| {
    |

warning: unused "map closure" when calling `Result::map_or_else` value
   --> llmspell-agents/src/lifecycle/state_machine.rs:812:9
    |
812 | /         timeout_result.map_or_else(
813 | |             |_| {
814 | |                 Err(anyhow!(
815 | |                     "State transition timed out after {:?}",
...   |
819 | |             |result| result,
820 | |         )
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_result_map_or_else
    = note: `-W clippy::unnecessary-result-map-or-else` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unnecessary_result_map_or_else)]`
help: consider using `unwrap_or_else`
    |
812 ~         timeout_result.unwrap_or_else(|_| {
813 +                 Err(anyhow!(
814 +                     "State transition timed out after {:?}",
815 +                     self.config.max_transition_time
816 +                 ))
817 +             })
    |

warning: this method could have a `#[must_use]` attribute
    --> llmspell-agents/src/lifecycle/state_machine.rs:1058:5
     |
1058 |     pub fn get_hook_metrics(&self, hook_name: &str) -> Option<llmspell_hooks::PerformanceMetrics> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_hook_metrics(&self, hook_name: &str) -> Option<llmspell_hooks::PerformanceMetrics>`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
     = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-agents/src/lifecycle/benchmarks.rs:28:5
   |
28 |     pub fn get_log_count(&self) -> u64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-agents/src/lifecycle/benchmarks.rs:29:10
   |
29 |         *self.log_count.lock().unwrap()
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-agents/src/lifecycle/benchmarks.rs:80:5
   |
80 |     pub fn get_metrics_count(&self) -> usize {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-agents/src/lifecycle/benchmarks.rs:81:9
   |
81 |         self.metrics.lock().unwrap().len()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:346:5
    |
346 |     pub fn register_rule(&self, rule: AlertRule) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:347:9
    |
347 |         self.rules.write().unwrap().insert(rule.id.clone(), rule);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:351:5
    |
351 |     pub fn register_channel(&self, name: String, channel: Arc<dyn NotificationChannel>) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:352:9
    |
352 |         self.channels.write().unwrap().insert(name, channel);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:363:5
    |
363 |     pub async fn evaluate_rules(&self, context: AlertContext<'_>) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:365:25
    |
365 |             let rules = self.rules.read().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this `map_or` can be simplified
   --> llmspell-agents/src/monitoring/alerts.rs:382:22
    |
382 |                   } => context
    |  ______________________^
383 | |                     .metrics
384 | |                     .get(metric_name)
385 | |                     .map_or(false, |metric| match metric {
...   |
392 | |                         _ => false,
393 | |                     }),
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
385 -                     .map_or(false, |metric| match metric {
385 +                     .is_some_and(|metric| match metric {
    |

warning: this `map_or` can be simplified
   --> llmspell-agents/src/monitoring/alerts.rs:434:9
    |
434 | /         last_triggers.get(rule_id).map_or(false, |last_trigger| {
435 | |             let elapsed = (Utc::now() - *last_trigger).to_std().unwrap_or_default();
436 | |             elapsed < self.config.default_cooldown
437 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
434 -         last_triggers.get(rule_id).map_or(false, |last_trigger| {
434 +         last_triggers.get(rule_id).is_some_and(|last_trigger| {
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:523:5
    |
523 |     pub fn get_active_alerts(&self) -> Vec<Alert> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:524:9
    |
524 | /         self.active_alerts
525 | |             .read()
526 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:537:5
    |
537 |     pub fn acknowledge_alert(&self, alert_id: &str) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:538:9
    |
538 | /         self.active_alerts
539 | |             .write()
540 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:561:5
    |
561 |     pub fn resolve_alert(&self, alert_id: &str) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:562:9
    |
562 | /         self.active_alerts
563 | |             .write()
564 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/alerts.rs:583:5
    |
583 |     pub fn get_statistics(&self) -> AlertStatistics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/alerts.rs:584:22
    |
584 |         let active = self.active_alerts.read().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: manual `Debug` impl does not include all fields
   --> llmspell-agents/src/monitoring/events.rs:175:1
    |
175 | / impl std::fmt::Debug for EventLogger {
176 | |     /// # Panics
177 | |     ///
178 | |     /// Panics if the RwLock is poisoned
...   |
188 | | }
    | |_^
    |
note: this field is unused
   --> llmspell-agents/src/monitoring/events.rs:166:5
    |
166 |     buffer: Arc<RwLock<VecDeque<LogEvent>>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: consider including all fields in this `Debug` impl
    = help: consider calling `.finish_non_exhaustive()` if you intend to ignore fields
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_fields_in_debug

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:178:23
    |
178 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
178 -     /// Panics if the RwLock is poisoned
178 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:208:23
    |
208 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
208 -     /// Panics if the RwLock is poisoned
208 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:217:23
    |
217 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
217 -     /// Panics if the RwLock is poisoned
217 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:240:23
    |
240 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
240 -     /// Panics if the RwLock is poisoned
240 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:373:23
    |
373 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
373 -     /// Panics if the RwLock is poisoned
373 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:383:23
    |
383 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
383 -     /// Panics if the RwLock is poisoned
383 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:397:23
    |
397 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
397 -     /// Panics if the RwLock is poisoned
397 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:411:23
    |
411 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
411 -     /// Panics if the RwLock is poisoned
411 +     /// Panics if the `RwLock` is poisoned
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/events.rs:417:5
    |
417 |     pub fn get_statistics(&self) -> EventStatistics {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/events.rs:418:22
    |
418 |         let buffer = self.buffer.read().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/metrics.rs:419:5
    |
419 |     pub fn register(&self, name: String, metric: Arc<dyn MetricAccess>) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/metrics.rs:420:27
    |
420 |         let mut metrics = self.metrics.write().unwrap();
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/metrics.rs:427:5
    |
427 |     pub fn get(&self, name: &str) -> Option<Arc<dyn MetricAccess>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/metrics.rs:428:9
    |
428 |         self.metrics.read().unwrap().get(name).cloned()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/metrics.rs:433:5
    |
433 |     pub fn get_agent_metrics(&self, agent_id: &str) -> Arc<AgentMetrics> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/metrics.rs:434:33
    |
434 |         let mut agent_metrics = self.agent_metrics.write().unwrap();
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/performance.rs:100:5
    |
100 |     pub fn from_snapshots(snapshots: &[PerformanceSnapshot]) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/performance.rs:105:26
    |
105 |         let start_time = snapshots.first().unwrap().timestamp;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: casting `f64` to `usize` may lose the sign of the value
   --> llmspell-agents/src/monitoring/performance.rs:346:31
    |
346 |         let active_requests = self.metrics.requests_active.get() as usize;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/performance.rs:397:5
    |
397 |     pub fn generate_report(&self) -> PerformanceReport {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/performance.rs:398:25
    |
398 |         let snapshots = self.snapshots.read().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: item in documentation is missing backticks
  --> llmspell-agents/src/monitoring/tracing.rs:96:23
   |
96 |     /// Panics if the end_time calculation results in a negative duration
   |                       ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
96 -     /// Panics if the end_time calculation results in a negative duration
96 +     /// Panics if the `end_time` calculation results in a negative duration
   |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:214:23
    |
214 |     /// Panics if any RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
214 -     /// Panics if any RwLock is poisoned
214 +     /// Panics if any `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:252:23
    |
252 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
252 -     /// Panics if the RwLock is poisoned
252 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:271:23
    |
271 |     /// Panics if any RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
271 -     /// Panics if any RwLock is poisoned
271 +     /// Panics if any `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:298:23
    |
298 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
298 -     /// Panics if the RwLock is poisoned
298 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:308:23
    |
308 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
308 -     /// Panics if the RwLock is poisoned
308 +     /// Panics if the `RwLock` is poisoned
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/tracing.rs:321:5
    |
321 |     pub fn get_all_traces(&self) -> HashMap<String, Vec<TraceSpan>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/tracing.rs:324:21
    |
324 |         for span in self.completed_spans.read().unwrap().iter() {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:338:23
    |
338 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
338 -     /// Panics if the RwLock is poisoned
338 +     /// Panics if the `RwLock` is poisoned
    |

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/tracing.rs:352:5
    |
352 |     pub fn add_tag(&self, key: String, value: String) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/tracing.rs:353:29
    |
353 |           if let Some(span) = self
    |  _____________________________^
354 | |             .collector
355 | |             .active_spans
356 | |             .write()
357 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/monitoring/tracing.rs:365:5
    |
365 |     pub fn add_event(&self, event: TraceEvent) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/monitoring/tracing.rs:366:29
    |
366 |           if let Some(span) = self
    |  _____________________________^
367 | |             .collector
368 | |             .active_spans
369 | |             .write()
370 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this could be rewritten as `let...else`
   --> llmspell-agents/src/registry/discovery.rs:218:9
    |
218 | /         let reference = match self.registry.get_metadata(agent_id).await? {
219 | |             Some(metadata) => metadata,
220 | |             None => anyhow::bail!("Agent '{}' not found", agent_id),
221 | |         };
    | |__________^ help: consider writing: `let Some(reference) = self.registry.get_metadata(agent_id).await? else { anyhow::bail!("Agent '{}' not found", agent_id) };`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/registry/discovery.rs:246:5
    |
246 | /     pub async fn get_recommendations(
247 | |         &self,
248 | |         context: &RecommendationContext,
249 | |     ) -> Result<Vec<SearchResult>> {
    | |__________________________________^
    |
note: first possible panic found here
   --> llmspell-agents/src/registry/discovery.rs:280:44
    |
280 |                     .signed_duration_since(result.metadata.metrics.last_execution_time.unwrap())
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: it is more idiomatic to use `Option<&T>` instead of `&Option<T>`
   --> llmspell-agents/src/registry/discovery.rs:314:5
    |
314 |       fn sort_results(results: &mut [SearchResult], sort_by: &Option<SortField>, order: &SortOrder) {
    |       ^                                                      ------------------ help: change this to: `Option<&SortField>`
    |  _____|
    | |
315 | |         let field = sort_by.as_ref().unwrap_or(&SortField::Name);
316 | |
317 | |         results.sort_by(|a, b| {
...   |
345 | |         });
346 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_option
    = note: `-W clippy::ref-option` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::ref_option)]`

warning: this `map_or` can be simplified
   --> llmspell-agents/src/state/isolation.rs:134:9
    |
134 | /         scope.parent().map_or(false, |parent| {
135 | |             self.has_permission(agent_id, &parent, permission)
136 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
134 -         scope.parent().map_or(false, |parent| {
134 +         scope.parent().is_some_and(|parent| {
    |

warning: using `clone` on type `StatePermission` which implements the `Copy` trait
   --> llmspell-agents/src/state/isolation.rs:309:25
    |
309 |                         permission.clone(),
    |                         ^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*permission`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `clone` on type `StatePermission` which implements the `Copy` trait
   --> llmspell-agents/src/state/isolation.rs:353:66
    |
353 |         access_control.grant_permission(agent_id, scope.clone(), permission.clone());
    |                                                                  ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `permission`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-agents/src/state/isolation.rs:509:30
    |
509 |     pub fn get(&self, scope: StateScope, _key: &str) -> Result<Option<serde_json::Value>> {
    |                              ^^^^^^^^^^ help: consider taking a reference instead: `&StateScope`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-agents/src/state/isolation.rs:528:30
    |
528 |     pub fn set(&self, scope: StateScope, _key: &str, _value: serde_json::Value) -> Result<()> {
    |                              ^^^^^^^^^^ help: consider taking a reference instead: `&StateScope`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-agents/src/state/isolation.rs:546:33
    |
546 |     pub fn delete(&self, scope: StateScope, _key: &str) -> Result<()> {
    |                                 ^^^^^^^^^^ help: consider taking a reference instead: `&StateScope`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-agents/src/state/isolation.rs:564:36
    |
564 |     pub fn list_keys(&self, scope: StateScope) -> Result<Vec<String>> {
    |                                    ^^^^^^^^^^ help: consider taking a reference instead: `&StateScope`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this `map_or` can be simplified
   --> llmspell-agents/src/state/sharing.rs:335:25
    |
335 |                         since.map_or(true, |since_time| m.timestamp > since_time)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_none_or instead
    |
335 -                         since.map_or(true, |since_time| m.timestamp > since_time)
335 +                         since.is_none_or(|since_time| m.timestamp > since_time)
    |

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-agents/src/state/sharing.rs:420:17
    |
420 |         stages: Vec<String>, // Agent IDs in order
    |                 ^^^^^^^^^^^ help: consider changing the type to: `&[String]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
   --> llmspell-agents/src/state/sharing.rs:550:18
    |
550 |         pattern: &SharingPattern,
    |                  ^^^^^^^^^^^^^^^ help: consider passing by value instead: `SharingPattern`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-agents/src/state/sharing.rs:561:13
    |
561 |             SharingPattern::Pipeline | _ => {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> llmspell-agents/src/state/sharing.rs:554:9
    |
554 | /         match pattern {
555 | |             SharingPattern::Broadcast => {
556 | |                 // Only creator can broadcast
557 | |                 if agent_id != channel.creator_agent_id {
...   |
565 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
    = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
    |
554 ~         if pattern == &SharingPattern::Broadcast {
555 +             // Only creator can broadcast
556 +             if agent_id != channel.creator_agent_id {
557 +                 return Err(anyhow::anyhow!("Only channel creator can broadcast"));
558 +             }
559 +         } else {
560 +             // Pipeline: Agents can only publish when it's their turn (enforced by process_pipeline_stage)
561 +             // Other patterns: Allow any participant to publish
562 +         }
    |

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:7:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
7 | / /// Base template trait and factory
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: redundant closure
   --> llmspell-agents/src/templates/base.rs:229:86
    |
229 |                         .map_or_else(|| value.as_array().map_or(0, |arr| arr.len()), |s| s.len());
    |                                                                                      ^^^^^^^^^^^ help: replace the closure with the method itself: `str::len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-agents/src/templates/base.rs:229:68
    |
229 |                         .map_or_else(|| value.as_array().map_or(0, |arr| arr.len()), |s| s.len());
    |                                                                    ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::vec::Vec::len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-agents/src/templates/base.rs:241:86
    |
241 |                         .map_or_else(|| value.as_array().map_or(0, |arr| arr.len()), |s| s.len());
    |                                                                                      ^^^^^^^^^^^ help: replace the closure with the method itself: `str::len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: redundant closure
   --> llmspell-agents/src/templates/base.rs:241:68
    |
241 |                         .map_or_else(|| value.as_array().map_or(0, |arr| arr.len()), |s| s.len());
    |                                                                    ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::vec::Vec::len`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:13:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
13| / /// Orchestrator agent template  
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:16:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
16| / /// Monitor agent template
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: more than 3 bools in a struct
   --> llmspell-agents/src/templates/monitor_agent.rs:78:1
    |
78  | / pub struct MonitorAgentConfig {
79  | |     /// Monitoring scopes this agent covers
80  | |     pub monitoring_scopes: Vec<MonitoringScope>,
81  | |     /// Monitoring interval in seconds
...   |
104 | |     pub max_concurrent_tasks: usize,
105 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:19:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
19| / /// Template customization API
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:22:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
22| / /// Template validation utilities
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: unused `self` argument
   --> llmspell-agents/src/templates/validation.rs:336:9
    |
336 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-agents/src/templates/validation.rs:462:30
    |
462 |                   let length = if let Some(s) = value.as_str() {
    |  ______________________________^
463 | |                     s.len()
464 | |                 } else if let Some(arr) = value.as_array() {
465 | |                     arr.len()
466 | |                 } else {
467 | |                     0
468 | |                 };
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
462 ~                 let length = value.as_str().map_or_else(|| if let Some(arr) = value.as_array() {
463 +                     arr.len()
464 +                 } else {
465 +                     0
466 ~                 }, |s| s.len());
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-agents/src/templates/validation.rs:478:30
    |
478 |                   let length = if let Some(s) = value.as_str() {
    |  ______________________________^
479 | |                     s.len()
480 | |                 } else if let Some(arr) = value.as_array() {
481 | |                     arr.len()
482 | |                 } else {
483 | |                     0
484 | |                 };
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
478 ~                 let length = value.as_str().map_or_else(|| if let Some(arr) = value.as_array() {
479 +                     arr.len()
480 +                 } else {
481 +                     0
482 ~                 }, |s| s.len());
    |

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-agents/src/templates/mod.rs:51:1
   |
51 | pub fn create_builtin_templates() -> TemplateFactory {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-agents/src/templates/mod.rs:55:5
   |
55 | /     factory
56 | |         .register_template(Box::new(ToolAgentTemplate::new()))
57 | |         .unwrap();
   | |_________________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this could be a `const fn`
   --> llmspell-agents/src/tool_context.rs:151:5
    |
151 | /     pub fn context_id(&self) -> &str {
152 | |         &self.context_id
153 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
151 |     pub const fn context_id(&self) -> &str {
    |         +++++

warning: casting `u128` to `u64` may truncate the value
   --> llmspell-agents/src/tool_errors.rs:333:35
    |
333 |                 duration_ms: Some(duration.as_millis() as u64),
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
333 -                 duration_ms: Some(duration.as_millis() as u64),
333 +                 duration_ms: Some(u64::try_from(duration.as_millis())),
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-agents/src/tool_errors.rs:579:5
    |
579 | /     pub async fn handle_error(
580 | |         &self,
581 | |         error: ToolIntegrationError,
582 | |         context: &mut ErrorContext,
583 | |     ) -> Result<Option<JsonValue>> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: more than 3 bools in a struct
  --> llmspell-agents/src/tool_invocation.rs:47:1
   |
47 | / pub struct InvocationConfig {
48 | |     /// Maximum execution time per tool call
49 | |     pub max_execution_time: Duration,
50 | |     /// Whether to validate parameters before invocation
...  |
61 | |     pub custom_validators: Vec<String>,
62 | | }
   | |_^
   |
   = help: consider using a state machine or refactoring bools into two-variant enums
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools

warning: this could be rewritten as `let...else`
   --> llmspell-agents/src/tool_manager.rs:294:9
    |
294 | /         let registry_info = match self.registry.get_tool_info(tool_name).await {
295 | |             Some(info) => info,
296 | |             None => return Ok(None),
297 | |         };
    | |__________^ help: consider writing: `let Some(registry_info) = self.registry.get_tool_info(tool_name).await else { return Ok(None) };`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else

warning: item in documentation is missing backticks
   --> llmspell-agents/src/tool_manager.rs:317:31
    |
317 |     /// - Any step fails with ErrorStrategy::Fail
    |                               ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
317 -     /// - Any step fails with ErrorStrategy::Fail
317 +     /// - Any step fails with `ErrorStrategy::Fail`
    |

warning: used underscore-prefixed binding
   --> llmspell-agents/src/tool_manager.rs:371:56
    |
371 | ...                   return Err(_last_error);
    |                                  ^^^^^^^^^^^
    |
note: binding is defined here
   --> llmspell-agents/src/tool_manager.rs:350:33
    |
350 | ...                   let mut _last_error = error;
    |                           ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-agents/src/tool_manager.rs:386:9
    |
386 | /         if let Some(final_output) = results.last() {
387 | |             Ok(final_output.clone())
388 | |         } else {
389 | |             Ok(AgentOutput::text(
390 | |                 "Composition completed with no output".to_string(),
391 | |             ))
392 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
386 ~         results.last().map_or_else(|| Ok(AgentOutput::text(
387 +                 "Composition completed with no output".to_string(),
388 +             )), |final_output| Ok(final_output.clone()))
    |

warning: unused `self` argument
   --> llmspell-agents/src/tool_manager.rs:418:9
    |
418 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-agents/src/tool_manager.rs:417:5
    |
417 | /     fn prepare_step_parameters(
418 | |         &self,
419 | |         base_parameters: &JsonValue,
420 | |         context_mode: &ContextMode,
...   |
444 | |         Ok(parameters)
445 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
423 -     ) -> Result<JsonValue> {
423 +     ) -> serde_json::Value {
    |
help: ...and then change returning expressions
    |
444 -         Ok(parameters)
444 +         parameters
    |

warning: more than 3 bools in a struct
  --> llmspell-agents/src/testing/framework.rs:26:1
   |
26 | / pub struct TestConfig {
27 | |     /// Maximum test duration before timeout
28 | |     pub timeout: Duration,
29 | |     /// Enable debug logging
...  |
38 | |     pub metadata: HashMap<String, serde_json::Value>,
39 | | }
   | |_^
   |
   = help: consider using a state machine or refactoring bools into two-variant enums
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools

warning: this method could have a `#[must_use]` attribute
   --> llmspell-agents/src/testing/framework.rs:125:5
    |
125 |     pub fn new(config: TestConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: TestConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:158:5
    |
158 | /     pub async fn run_test<F, Fut>(
159 | |         &self,
160 | |         agent_config: AgentConfig,
161 | |         test_fn: F,
...   |
164 | |         F: FnOnce(Arc<dyn Agent>) -> Fut,
165 | |         Fut: std::future::Future<Output = Result<()>>,
    | |______________________________________________________^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:187:29
    |
187 |             let mut guard = self.interactions.lock().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:208:5
    |
208 | /     pub async fn execute_and_record(
209 | |         &self,
210 | |         agent: Arc<dyn Agent>,
211 | |         input: AgentInput,
212 | |         context: ExecutionContext,
213 | |     ) -> Result<AgentOutput, LLMSpellError> {
    | |___________________________________________^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:231:36
    |
231 |             let mut interactions = self.interactions.lock().unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:274:5
    |
274 |     pub fn record_resource_usage(&self, memory: usize, cpu_time: Duration, tool_calls: usize) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:275:25
    |
275 |         let mut usage = self.resource_usage.lock().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:542:5
    |
542 |     pub fn new(receiver: broadcast::Receiver<LifecycleEvent>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:552:17
    |
552 |                 events_clone.lock().unwrap().push(event);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:564:5
    |
564 |     pub fn get_events(&self) -> Vec<LifecycleEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:565:9
    |
565 |         self.events.lock().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:569:5
    |
569 |     pub fn clear(&self) {
    |     ^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:570:9
    |
570 |         self.events.lock().unwrap().clear();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/framework.rs:575:5
    |
575 |     pub fn find_events(&self, event_type: LifecycleEventType) -> Vec<LifecycleEvent> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/framework.rs:576:9
    |
576 | /         self.events
577 | |             .lock()
578 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: calling `StateMachineConfig::default()` is more clear than this expression
   --> llmspell-agents/src/testing/mocks.rs:120:70
    |
120 |             AgentStateMachine::new(config.agent_config.name.clone(), Default::default());
    |                                                                      ^^^^^^^^^^^^^^^^^^ help: try: `StateMachineConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `ToolUsageStats::default()` is more clear than this expression
   --> llmspell-agents/src/testing/mocks.rs:529:31
    |
529 |             tool_usage_stats: Default::default(),
    |                               ^^^^^^^^^^^^^^^^^^ help: try: `ToolUsageStats::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-agents/src/testing/mocks.rs:621:5
    |
621 |     pub fn set_response(&self, input_key: &str, output: ToolOutput) {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-agents/src/testing/mocks.rs:622:9
    |
622 | /         self.responses
623 | |             .lock()
624 | |             .unwrap()
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-agents/src/testing/mocks.rs:686:27
    |
686 |           let tool_output = if let Some(response) = responses.get(&input_str) {
    |  ___________________________^
687 | |             response.clone()
688 | |         } else {
...   |
701 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
686 ~         let tool_output = responses.get(&input_str).map_or_else(|| ToolOutput {
687 +                 success: true,
688 +                 data: serde_json::json!({
689 +                     "mock": true,
690 +                     "tool": self.metadata.name,
691 +                     "input": params,
692 +                     "timestamp": chrono::Utc::now().to_rfc3339(),
693 +                 }),
694 +                 error: None,
695 +                 execution_time_ms: Some(10),
696 ~             }, |response| response.clone());
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-agents/src/testing/utils.rs:190:9
    |
190 | /         match tokio::time::timeout(duration, future).await {
191 | |             Ok(result) => Ok(result),
192 | |             Err(_) => Err(format!("Operation timed out after {duration:?}")),
193 | |         }
    | |_________^ help: try: `(tokio::time::timeout(duration, future).await).map_or_else(|_| Err(format!("Operation timed out after {duration:?}")), |result| Ok(result))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: this argument is a mutable reference, but not used mutably
   --> llmspell-agents/src/tool_manager.rs:400:18
    |
400 |         context: &mut ExecutionContext,
    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider changing to: `&ExecutionContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut
    = note: `-W clippy::needless-pass-by-ref-mut` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::needless_pass_by_ref_mut)]`

warning: `llmspell-agents` (lib) generated 169 warnings (run `cargo clippy --fix --lib -p llmspell-agents` to apply 70 suggestions)
    Checking llmspell-bridge v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-bridge)
error[E0308]: mismatched types
   --> llmspell-bridge/src/workflows.rs:235:59
    |
235 |                 let workflow = create_sequential_workflow(params)?;
    |                                -------------------------- ^^^^^^ expected `&Value`, found `Value`
    |                                |
    |                                arguments to this function are incorrect
    |
note: function defined here
   --> llmspell-bridge/src/workflows.rs:273:4
    |
273 | fn create_sequential_workflow(params: &serde_json::Value) -> Result<impl WorkflowExecutor> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------
help: consider borrowing here
    |
235 |                 let workflow = create_sequential_workflow(&params)?;
    |                                                           +

error[E0308]: mismatched types
   --> llmspell-bridge/src/workflows.rs:239:60
    |
239 |                 let workflow = create_conditional_workflow(params)?;
    |                                --------------------------- ^^^^^^ expected `&Value`, found `Value`
    |                                |
    |                                arguments to this function are incorrect
    |
note: function defined here
   --> llmspell-bridge/src/workflows.rs:302:4
    |
302 | fn create_conditional_workflow(params: &serde_json::Value) -> Result<impl WorkflowExecutor> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------
help: consider borrowing here
    |
239 |                 let workflow = create_conditional_workflow(&params)?;
    |                                                            +

error[E0308]: mismatched types
   --> llmspell-bridge/src/workflows.rs:243:53
    |
243 |                 let workflow = create_loop_workflow(params)?;
    |                                -------------------- ^^^^^^ expected `&Value`, found `Value`
    |                                |
    |                                arguments to this function are incorrect
    |
note: function defined here
   --> llmspell-bridge/src/workflows.rs:418:4
    |
418 | fn create_loop_workflow(params: &serde_json::Value) -> Result<impl WorkflowExecutor> {
    |    ^^^^^^^^^^^^^^^^^^^^ --------------------------
help: consider borrowing here
    |
243 |                 let workflow = create_loop_workflow(&params)?;
    |                                                     +

error[E0308]: mismatched types
   --> llmspell-bridge/src/workflows.rs:247:57
    |
247 |                 let workflow = create_parallel_workflow(params)?;
    |                                ------------------------ ^^^^^^ expected `&Value`, found `Value`
    |                                |
    |                                arguments to this function are incorrect
    |
note: function defined here
   --> llmspell-bridge/src/workflows.rs:455:4
    |
455 | fn create_parallel_workflow(params: &serde_json::Value) -> Result<impl WorkflowExecutor> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^ --------------------------
help: consider borrowing here
    |
247 |                 let workflow = create_parallel_workflow(&params)?;
    |                                                         +

error[E0308]: arguments to this function are incorrect
   --> llmspell-bridge/src/multi_agent.rs:342:9
    |
342 |           create_pipeline_workflow(
    |           ^^^^^^^^^^^^^^^^^^^^^^^^
343 |               "research_paper_pipeline".to_string(),
    |               ------------------------------------- expected `&str`, found `String`
...
350 | /             serde_json::json!({
351 | |                 "paper_url": "https://example.com/paper.pdf",
352 | |                 "analysis_depth": "detailed"
353 | |             }),
    | |______________- expected `&Value`, found `Value`
    |
note: expected `&[String]`, found `Vec<String>`
   --> llmspell-bridge/src/multi_agent.rs:344:13
    |
344 | /             vec![
345 | |                 "paper_reader_agent".to_string(),
346 | |                 "concept_extractor_agent".to_string(),
347 | |                 "critic_agent".to_string(),
348 | |                 "summary_writer_agent".to_string(),
349 | |             ],
    | |_____________^
    = note: expected reference `&[std::string::String]`
                  found struct `std::vec::Vec<std::string::String>`
note: function defined here
   --> llmspell-bridge/src/multi_agent.rs:46:8
    |
46  | pub fn create_pipeline_workflow(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
47  |     name: &str,
    |     ----------
48  |     agents: &[String],
    |     -----------------
49  |     initial_input: &Value,
    |     ---------------------
help: try removing the method call
    |
343 -             "research_paper_pipeline".to_string(),
343 +             "research_paper_pipeline",
    |

error[E0308]: mismatched types
   --> llmspell-bridge/src/multi_agent.rs:382:18
    |
382 |             Some("integration_agent".to_string()),
    |             ---- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
    |             |
    |             arguments to this enum variant are incorrect
    |
help: the type constructed contains `std::string::String` due to the type of the argument passed
   --> llmspell-bridge/src/multi_agent.rs:382:13
    |
382 |             Some("integration_agent".to_string()),
    |             ^^^^^-------------------------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /private/tmp/rust-20250403-7454-rkwlec/rustc-1.86.0-src/library/core/src/option.rs:580:5
help: try removing the method call
    |
382 -             Some("integration_agent".to_string()),
382 +             Some("integration_agent"),
    |

error[E0308]: arguments to this function are incorrect
   --> llmspell-bridge/src/multi_agent.rs:363:9
    |
363 |         create_fork_join_workflow(
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
364 |             "multi_perspective_analysis".to_string(),
    |             ---------------------------------------- expected `&str`, found `String`
    |
note: expected `&[(String, String, Value)]`, found `Vec<(String, String, Value)>`
   --> llmspell-bridge/src/multi_agent.rs:365:13
    |
365 | /             vec![
366 | |                 (
367 | |                     "technical_analyst".to_string(),
368 | |                     "technical_review".to_string(),
...   |
380 | |                 ),
381 | |             ],
    | |_____________^
    = note: expected reference `&[(std::string::String, std::string::String, serde_json::Value)]`
                  found struct `std::vec::Vec<(std::string::String, std::string::String, serde_json::Value)>`
note: function defined here
   --> llmspell-bridge/src/multi_agent.rs:86:8
    |
86  | pub fn create_fork_join_workflow(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
87  |     name: &str,
    |     ----------
88  |     agent_tasks: &[(String, String, Value)], // (agent_id, task_name, input)
    |     ---------------------------------------
help: try removing the method call
    |
364 -             "multi_perspective_analysis".to_string(),
364 +             "multi_perspective_analysis",
    |

error[E0308]: arguments to this function are incorrect
   --> llmspell-bridge/src/multi_agent.rs:392:9
    |
392 |           create_consensus_workflow(
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
393 |               "investment_decision".to_string(),
    |               --------------------------------- expected `&str`, found `String`
...
401 | /             serde_json::json!({
402 | |                 "investment_options": [
403 | |                     {"ticker": "AAPL", "action": "buy"},
404 | |                     {"ticker": "GOOGL", "action": "hold"},
...   |
407 | |             }),
    | |______________- expected `&Value`, found `Value`
    |
note: expected `&[String]`, found `Vec<String>`
   --> llmspell-bridge/src/multi_agent.rs:394:13
    |
394 | /             vec![
395 | |                 "fundamental_analyst".to_string(),
396 | |                 "technical_analyst".to_string(),
397 | |                 "risk_analyst".to_string(),
398 | |                 "market_analyst".to_string(),
399 | |             ],
    | |_____________^
    = note: expected reference `&[std::string::String]`
                  found struct `std::vec::Vec<std::string::String>`
note: function defined here
   --> llmspell-bridge/src/multi_agent.rs:120:8
    |
120 | pub fn create_consensus_workflow(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
121 |     name: &str,
    |     ----------
122 |     evaluator_agents: &[String],
    |     ---------------------------
123 |     #[allow(unused_variables)] consensus_threshold: f64,
124 |     options: &Value,
    |     ---------------
help: try removing the method call
    |
393 -             "investment_decision".to_string(),
393 +             "investment_decision",
    |

For more information about this error, try `rustc --explain E0308`.
error: could not compile `llmspell-bridge` (lib) due to 8 previous errors
