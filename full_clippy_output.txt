warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/communication/database_connector.rs:392:37
    |
392 | / ...                   if let Ok(v) = row.try_get::<String, _>(i) {
393 | | ...                       serde_json::Value::String(v)
394 | | ...                   } else if let Ok(v) = row.try_get::<i64, _>(i) {
395 | | ...                       serde_json::Value::Number(v.into())
...   |
404 | | ...                       serde_json::Value::Null
405 | | ...                   };
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
392 ~                                     row.try_get::<String, _>(i).map_or_else(|_| if let Ok(v) = row.try_get::<i64, _>(i) {
393 +                                         serde_json::Value::Number(v.into())
394 +                                     } else if let Ok(v) = row.try_get::<f64, _>(i) {
395 +                                         serde_json::Value::Number(
396 +                                             serde_json::Number::from_f64(v)
397 +                                                 .unwrap_or(serde_json::Number::from(0)),
398 +                                         )
399 +                                     } else if let Ok(v) = row.try_get::<bool, _>(i) {
400 +                                         serde_json::Value::Bool(v)
401 +                                     } else {
402 +                                         serde_json::Value::Null
403 ~                                     }, |v| serde_json::Value::String(v));
    |

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/communication/database_connector.rs:399:50
    |
399 | ...                   .unwrap_or(serde_json::Number::from(0)),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| serde_json::Number::from(0))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: this function's return value is unnecessarily wrapped by `Result`
    --> llmspell-tools/src/data/csv_analyzer.rs:1084:5
     |
1084 | /     fn evaluate_expression(
1085 | |         expr: &str,
1086 | |         headers: &csv::StringRecord,
1087 | |         record: &csv::StringRecord,
...    |
1106 | |         Ok(expr.to_string())
1107 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
     = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
     |
1088 -     ) -> Result<String> {
1088 +     ) -> std::string::String {
     |
help: ...and then change returning expressions
     |
1100 ~                     return format!("{:.2}", left * right);
1101 |                 }
 ...
1105 |         // Default: return the expression as-is
1106 ~         expr.to_string()
     |

warning: the function has a cognitive complexity of (39/25)
   --> llmspell-tools/src/fs/archive_handler.rs:286:8
    |
286 |     fn extract_zip(
    |        ^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::cognitive_complexity)]`

warning: the function has a cognitive complexity of (35/25)
   --> llmspell-tools/src/fs/archive_handler.rs:378:8
    |
378 |     fn extract_tar(
    |        ^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: the function has a cognitive complexity of (35/25)
   --> llmspell-tools/src/fs/archive_handler.rs:446:8
    |
446 |     fn extract_tar_gz(
    |        ^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/fs/file_watcher.rs:183:13
    |
183 |             notify::EventKind::Other | _ => FileEventType::Other,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:378:25
    |
378 |                         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones
    = note: `-W clippy::assigning-clones` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::assigning_clones)]`

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:395:25
    |
395 |                         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:434:9
    |
434 |         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/lifecycle/state_machine.rs:261:13
    |
261 |             (Terminated, _) | _ => false,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> llmspell-tools/src/media/audio_processor.rs:555:37
    |
555 |                   let target_format = extract_optional_string(params, "target_format")
    |  _____________________________________^
556 | |                     .map(|s| match s.to_lowercase().as_str() {
557 | |                         "wav" => AudioFormat::Wav,
558 | |                         "mp3" => AudioFormat::Mp3,
559 | |                         _ => AudioFormat::Unknown,
560 | |                     })
561 | |                     .unwrap_or_else(|| AudioFormat::from_extension(Path::new(target_path)));
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> llmspell-tools/src/media/image_processor.rs:549:37
    |
549 |                   let target_format = extract_optional_string(params, "target_format")
    |  _____________________________________^
550 | |                     .map(|s| match s.to_lowercase().as_str() {
551 | |                         "png" => ImageFormat::Png,
552 | |                         "jpeg" | "jpg" => ImageFormat::Jpeg,
...   |
556 | |                     })
557 | |                     .unwrap_or_else(|| ImageFormat::from_extension(Path::new(output_path)));
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or

warning: use Option::map_or instead of an if let/else
   --> llmspell-tools/src/search/web_search.rs:473:27
    |
473 |           let max_results = if let Some(n) = params
    |  ___________________________^
474 | |             .get("max_results")
475 | |             .and_then(serde_json::Value::as_u64)
...   |
479 | |             self.config.max_results
480 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
473 ~         let max_results = params
474 +             .get("max_results")
475 ~             .and_then(serde_json::Value::as_u64).map_or(self.config.max_results, |n| usize::try_from(n).unwrap_or(usize::MAX));
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/search/web_search.rs:507:29
    |
507 |           let provider_used = if let Some(r) = results.first() {
    |  _____________________________^
508 | |             r.provider.clone()
509 | |         } else {
510 | |             "unknown".to_string()
511 | |         };
    | |_________^ help: try: `results.first().map_or_else(|| "unknown".to_string(), |r| r.provider.clone())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: the function has a cognitive complexity of (42/25)
   --> llmspell-tools/src/system/environment_reader.rs:129:8
    |
129 |     fn is_var_allowed(&self, var_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: the function has a cognitive complexity of (26/25)
   --> llmspell-tools/src/system/process_executor.rs:216:8
    |
216 |     fn is_executable_allowed(&self, executable: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function's return value is unnecessary
   --> llmspell-tools/src/util/data_validation.rs:268:5
    |
268 | /     fn validate_value(
269 | |         &self,
270 | |         field: &str,
271 | |         value: &Value,
...   |
293 | |         Ok(())
294 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove the return type...
    |
274 -     ) -> Result<()> {
274 +     ) -> () {
    |
help: ...and then remove returned values
    |
293 -         Ok(())
    |

warning: the function has a cognitive complexity of (31/25)
   --> llmspell-tools/src/util/data_validation.rs:298:8
    |
298 |     fn validate_rule(
    |        ^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this looks like a formatting argument but it is not part of a formatting macro
   --> llmspell-tools/src/util/data_validation.rs:569:32
    |
569 |             |msg| msg.replace("{field}", field),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#literal_string_with_formatting_args
    = note: `-W clippy::literal-string-with-formatting-args` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::literal_string_with_formatting_args)]`

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
   --> llmspell-tools/src/util/uuid_generator.rs:140:47
    |
140 |     fn format_uuid(&self, uuid: Uuid, format: &UuidFormat) -> String {
    |                                               ^^^^^^^^^^^ help: consider passing by value instead: `UuidFormat`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
    = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/web/api_tester.rs:212:44
    |
212 |                 "body": body_json.as_ref().unwrap_or(&json!(body_text)),
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &json!(body_text))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-tools/src/web/sitemap_crawler.rs:330:5
    |
330 | /     fn parse_sitemap(&self, xml_content: &str) -> Result<Vec<Value>> {
331 | |         let mut urls = Vec::new();
332 | |         let lines: Vec<&str> = xml_content.lines().collect();
...   |
405 | |         Ok(urls)
406 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
330 -     fn parse_sitemap(&self, xml_content: &str) -> Result<Vec<Value>> {
330 +     fn parse_sitemap(&self, xml_content: &str) -> std::vec::Vec<serde_json::Value> {
    |
help: ...and then change returning expressions
    |
405 -         Ok(urls)
405 +         urls
    |

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/web/webhook_caller.rs:171:17
    |
171 |                 "POST" | _ => client.post(url), // Default to POST for unknown methods
    |                 ^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/web/webhook_caller.rs:228:56
    |
228 | ...                   "body": body_json.as_ref().unwrap_or(&json!(body_text)),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &json!(body_text))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: `llmspell-tools` (lib) generated 25 warnings
    Checking llmspell-bridge v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-bridge)
warning: unused import: `crate::providers::ProviderManagerConfig`
 --> llmspell-bridge/src/javascript/globals/event.rs:5:5
  |
5 | use crate::providers::ProviderManagerConfig;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::providers::ProviderManagerConfig`
 --> llmspell-bridge/src/javascript/globals/hook.rs:7:5
  |
7 | use crate::providers::ProviderManagerConfig;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/engine/factory.rs:391:25
    |
391 | static PLUGIN_REGISTRY: LazyLock<Arc<RwLock<HashMap<String, Box<dyn ScriptEnginePlugin>>>>> =
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
    = note: `-W clippy::type-complexity` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::type_complexity)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:394:5
    |
394 | /     pub fn javascript_config(mut self, config: JSConfig) -> Self {
395 | |         self.config.engines.javascript = config;
396 | |         self
397 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
394 |     pub const fn javascript_config(mut self, config: JSConfig) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:491:5
    |
491 | /     pub fn max_concurrent_scripts(mut self, max: usize) -> Self {
492 | |         self.config.max_concurrent_scripts = max;
493 | |         self
494 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
491 |     pub const fn max_concurrent_scripts(mut self, max: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:498:5
    |
498 | /     pub fn script_timeout_seconds(mut self, timeout: u64) -> Self {
499 | |         self.config.script_timeout_seconds = timeout;
500 | |         self
501 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
498 |     pub const fn script_timeout_seconds(mut self, timeout: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:505:5
    |
505 | /     pub fn enable_streaming(mut self, enable: bool) -> Self {
506 | |         self.config.enable_streaming = enable;
507 | |         self
508 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
505 |     pub const fn enable_streaming(mut self, enable: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:512:5
    |
512 | /     pub fn security(mut self, security: SecurityConfig) -> Self {
513 | |         self.config.security = security;
514 | |         self
515 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
512 |     pub const fn security(mut self, security: SecurityConfig) -> Self {
    |         +++++

warning: more than 3 bools in a struct
   --> llmspell-bridge/src/runtime.rs:575:1
    |
575 | / pub struct StatePersistenceConfig {
576 | |     /// Enable state persistence
577 | |     pub enabled: bool,
578 | |     /// Backend type for storage (memory, file, redis, etc.)
...   |
591 | |     pub backup: Option<BackupConfig>,
592 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
    = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/storage.rs:2:78
  |
2 | //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, RocksDB)
  |                                                                              ^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
2 - //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, RocksDB)
2 + //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, `RocksDB`)
  |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:252:58
    |
252 |     /// Performance optimization preset (fast, balanced, storage_optimized)
    |                                                          ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
252 -     /// Performance optimization preset (fast, balanced, storage_optimized)
252 +     /// Performance optimization preset (fast, balanced, `storage_optimized`)
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:269:34
    |
269 |     /// Create a new builder for StorageConfig
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
269 -     /// Create a new builder for StorageConfig
269 +     /// Create a new builder for `StorageConfig`
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:276:17
    |
276 | /// Builder for StorageConfig
    |                 ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
276 - /// Builder for StorageConfig
276 + /// Builder for `StorageConfig`
    |

warning: this could be a `const fn`
   --> llmspell-bridge/src/storage.rs:312:5
    |
312 | /     pub fn enable_compression(mut self, enable: bool) -> Self {
313 | |         self.config.enable_compression = enable;
314 | |         self
315 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
312 |     pub const fn enable_compression(mut self, enable: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/storage.rs:319:5
    |
319 | /     pub fn enable_encryption(mut self, enable: bool) -> Self {
320 | |         self.config.enable_encryption = enable;
321 | |         self
322 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
319 |     pub const fn enable_encryption(mut self, enable: bool) -> Self {
    |         +++++

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:358:25
    |
358 |     /// Build the final StorageConfig
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
358 -     /// Build the final StorageConfig
358 +     /// Build the final `StorageConfig`
    |

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-bridge/src/tools.rs:74:15
   |
74 |     registry: Arc<ComponentRegistry>,
   |               ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<ComponentRegistry>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
   = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-bridge/src/tools.rs:91:15
   |
91 |     registry: Arc<ComponentRegistry>,
   |               ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<ComponentRegistry>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/tools.rs:109:15
    |
109 |     registry: Arc<ComponentRegistry>,
    |               ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<ComponentRegistry>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this could be a `const fn`
   --> llmspell-bridge/src/tools.rs:320:5
    |
320 | /     pub fn new(registry: Arc<ComponentRegistry>) -> Self {
321 | |         Self { registry }
322 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
320 |     pub const fn new(registry: Arc<ComponentRegistry>) -> Self {
    |         +++++

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/event_bridge.rs:53:29
   |
53 |     /// Returns an error if EventBridge initialization fails
   |                             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
53 -     /// Returns an error if EventBridge initialization fails
53 +     /// Returns an error if `EventBridge` initialization fails
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/event_bridge.rs:210:5
    |
210 |     pub fn get_stats(&self) -> serde_json::Value {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/globals/injection.rs:199:5
    |
199 | /     pub fn get_metrics(&self) -> &InjectionMetrics {
200 | |         self.registry.metrics()
201 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
199 |     pub const fn get_metrics(&self) -> &InjectionMetrics {
    |         +++++

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/globals/session_infrastructure.rs:16:1
   |
16 | / pub async fn get_or_create_session_infrastructure(
17 | |     context: &GlobalContext,
18 | |     config: &SessionConfig,
19 | | ) -> Result<SessionInfrastructure> {
   | |__________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:99:1
    |
99  | / fn get_or_create_hook_registry(context: &GlobalContext) -> Result<Arc<HookRegistry>> {
100 | |     if let Some(registry) = context.get_bridge::<HookRegistry>("hook_registry") {
101 | |         return Ok(registry);
...   |
107 | |     Ok(registry)
108 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
99  - fn get_or_create_hook_registry(context: &GlobalContext) -> Result<Arc<HookRegistry>> {
99  + fn get_or_create_hook_registry(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookRegistry> {
    |
help: ...and then change returning expressions
    |
101 ~         return registry;
102 |     }
...
106 |     context.set_bridge("hook_registry", registry.clone());
107 ~     registry
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:111:1
    |
111 | / fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
112 | |     if let Some(executor) = context.get_bridge::<HookExecutor>("hook_executor") {
113 | |         return Ok(executor);
...   |
119 | |     Ok(executor)
120 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
111 - fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
111 + fn get_or_create_hook_executor(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookExecutor> {
    |
help: ...and then change returning expressions
    |
113 ~         return executor;
114 |     }
...
118 |     context.set_bridge("hook_executor", executor.clone());
119 ~     executor
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:123:1
    |
123 | / fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
124 | |     if let Some(event_bus) = context.get_bridge::<EventBus>("event_bus") {
125 | |         return Ok(event_bus);
...   |
131 | |     Ok(event_bus)
132 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
123 - fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
123 + fn get_or_create_event_bus(context: &GlobalContext) -> std::sync::Arc<llmspell_events::EventBus> {
    |
help: ...and then change returning expressions
    |
125 ~         return event_bus;
126 |     }
...
130 |     context.set_bridge("event_bus", event_bus.clone());
131 ~     event_bus
    |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/globals/state_infrastructure.rs:21:1
   |
21 | / pub async fn get_or_create_state_infrastructure(
22 | |     context: &GlobalContext,
23 | |     config: &StatePersistenceConfig,
24 | | ) -> Result<StateInfrastructure> {
   | |________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:189:1
    |
189 | / fn create_backend_type(config: &StatePersistenceConfig) -> Result<StorageBackendType> {
190 | |     match config.backend_type.as_str() {
191 | |         "memory" => {
192 | |             debug!("Creating in-memory storage backend type");
...   |
210 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
189 - fn create_backend_type(config: &StatePersistenceConfig) -> Result<StorageBackendType> {
189 + fn create_backend_type(config: &StatePersistenceConfig) -> llmspell_state_persistence::StorageBackendType {
    |
help: ...and then change returning expressions
    |
193 ~             StorageBackendType::Memory
194 |         }
...
198 |                 .unwrap_or_else(|_| "./llmspell_state".to_string());
199 ~             StorageBackendType::Sled(SledConfig {
200 +                 path: std::path::PathBuf::from(path),
201 +                 cache_capacity: 64 * 1024 * 1024, // 64MB
202 +                 use_compression: true,
203 +             })
204 |         }
205 |         backend => {
206 |             warn!("Unknown backend type '{}', falling back to memory", backend);
207 ~             StorageBackendType::Memory
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:213:1
    |
213 | / fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
214 | |     if let Some(event_bus) = context.get_bridge::<EventBus>("event_bus") {
215 | |         return Ok(event_bus);
...   |
221 | |     Ok(event_bus)
222 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
213 - fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
213 + fn get_or_create_event_bus(context: &GlobalContext) -> std::sync::Arc<llmspell_events::EventBus> {
    |
help: ...and then change returning expressions
    |
215 ~         return event_bus;
216 |     }
...
220 |     context.set_bridge("event_bus", event_bus.clone());
221 ~     event_bus
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:225:1
    |
225 | / fn get_or_create_correlation_tracker(
226 | |     context: &GlobalContext,
227 | | ) -> Result<Arc<EventCorrelationTracker>> {
228 | |     if let Some(tracker) = context.get_bridge::<EventCorrelationTracker>("correlation_tracker") {
...   |
235 | |     Ok(tracker)
236 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
227 - ) -> Result<Arc<EventCorrelationTracker>> {
227 + ) -> std::sync::Arc<llmspell_events::EventCorrelationTracker> {
    |
help: ...and then change returning expressions
    |
229 ~         return tracker;
230 |     }
...
234 |     context.set_bridge("correlation_tracker", tracker.clone());
235 ~     tracker
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:239:1
    |
239 | / fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
240 | |     if let Some(executor) = context.get_bridge::<HookExecutor>("hook_executor") {
241 | |         return Ok(executor);
...   |
247 | |     Ok(executor)
248 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
239 - fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
239 + fn get_or_create_hook_executor(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookExecutor> {
    |
help: ...and then change returning expressions
    |
241 ~         return executor;
242 |     }
...
246 |     context.set_bridge("hook_executor", executor.clone());
247 ~     executor
    |

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/globals/tool_api_standard.rs:79:9
   |
79 | //! ### ToolInfo
   |         ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
79 - //! ### ToolInfo
79 + //! ### `ToolInfo`
   |

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/globals/tool_api_standard.rs:89:9
   |
89 | //! ### ToolSchema
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
89 - //! ### ToolSchema
89 + //! ### `ToolSchema`
   |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/globals/tool_api_standard.rs:127:27
    |
127 | //! - Direct tool access (Tool.tool_name) uses lazy loading
    |                           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
127 - //! - Direct tool access (Tool.tool_name) uses lazy loading
127 + //! - Direct tool access (`Tool.tool_name`) uses lazy loading
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/globals/tool_api_standard.rs:172:23
    |
172 | /// Convert from core ToolSchema to standard schema
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
172 - /// Convert from core ToolSchema to standard schema
172 + /// Convert from core `ToolSchema` to standard schema
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/hook_bridge.rs:417:5
    |
417 | /     fn create_hook_event(
418 | |         hook_point: &HookPoint,
419 | |         status: &str,
420 | |         correlation_id: Uuid,
...   |
444 | |         Ok(event)
445 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
422 -     ) -> Result<UniversalEvent, LLMSpellError> {
422 +     ) -> llmspell_events::UniversalEvent {
    |
help: ...and then change returning expressions
    |
444 -         Ok(event)
444 +         event
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/agent_bridge.rs:108:5
    |
108 |     pub fn list_agent_types(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_agent_types(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/agent_bridge.rs:113:5
    |
113 |     pub fn list_templates(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_templates(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/agent_bridge.rs:1127:16
     |
1127 |         scope: serde_json::Value,
     |                ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/agent_bridge.rs:1143:16
     |
1143 |         scope: serde_json::Value,
     |                ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> llmspell-bridge/src/multi_agent.rs:94:41
   |
94 |     for (agent_id, task_name, input) in agent_tasks.iter() {
   |                                         ^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `agent_tasks`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: this could be a `const fn`
  --> llmspell-bridge/src/orchestration.rs:85:5
   |
85 | /     pub fn max_concurrent_workflows(mut self, max: usize) -> Self {
86 | |         self.limits.max_concurrent_workflows = max;
87 | |         self
88 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
85 |     pub const fn max_concurrent_workflows(mut self, max: usize) -> Self {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/orchestration.rs:92:5
   |
92 | /     pub fn max_agent_invocations(mut self, max: usize) -> Self {
93 | |         self.limits.max_agent_invocations = max;
94 | |         self
95 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
92 |     pub const fn max_agent_invocations(mut self, max: usize) -> Self {
   |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:99:5
    |
99  | /     pub fn max_memory_mb(mut self, max: usize) -> Self {
100 | |         self.limits.max_memory_mb = max;
101 | |         self
102 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
99  |     pub const fn max_memory_mb(mut self, max: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:106:5
    |
106 | /     pub fn build(self) -> ResourceLimits {
107 | |         self.limits
108 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
106 |     pub const fn build(self) -> ResourceLimits {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:154:5
    |
154 | /     pub fn strategy(mut self, strategy: OrchestrationStrategy) -> Self {
155 | |         self.config.strategy = strategy;
156 | |         self
157 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
154 |     pub const fn strategy(mut self, strategy: OrchestrationStrategy) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:161:5
    |
161 | /     pub fn max_depth(mut self, depth: usize) -> Self {
162 | |         self.config.max_depth = depth;
163 | |         self
164 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
161 |     pub const fn max_depth(mut self, depth: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:168:5
    |
168 | /     pub fn timeout_seconds(mut self, timeout: u64) -> Self {
169 | |         self.config.timeout_seconds = timeout;
170 | |         self
171 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
168 |     pub const fn timeout_seconds(mut self, timeout: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:175:5
    |
175 | /     pub fn allow_parallel(mut self, allow: bool) -> Self {
176 | |         self.config.allow_parallel = allow;
177 | |         self
178 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
175 |     pub const fn allow_parallel(mut self, allow: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:182:5
    |
182 | /     pub fn resource_limits(mut self, limits: ResourceLimits) -> Self {
183 | |         self.config.resource_limits = limits;
184 | |         self
185 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
182 |     pub const fn resource_limits(mut self, limits: ResourceLimits) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:189:5
    |
189 | /     pub fn build(self) -> OrchestrationConfig {
190 | |         self.config
191 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
189 |     pub const fn build(self) -> OrchestrationConfig {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:304:5
    |
304 | /     pub fn max_attempts(mut self, attempts: usize) -> Self {
305 | |         self.config.max_attempts = attempts;
306 | |         self
307 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
304 |     pub const fn max_attempts(mut self, attempts: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:311:5
    |
311 | /     pub fn backoff_ms(mut self, ms: u64) -> Self {
312 | |         self.config.backoff_ms = ms;
313 | |         self
314 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
311 |     pub const fn backoff_ms(mut self, ms: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:318:5
    |
318 | /     pub fn exponential_backoff(mut self, exponential: bool) -> Self {
319 | |         self.config.exponential_backoff = exponential;
320 | |         self
321 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
318 |     pub const fn exponential_backoff(mut self, exponential: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:325:5
    |
325 | /     pub fn build(self) -> RetryConfig {
326 | |         self.config
327 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
325 |     pub const fn build(self) -> RetryConfig {
    |         +++++

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:47:9
   |
47 | /         params
48 | |             .get("timeout")
49 | |             .and_then(serde_json::Value::as_u64)
50 | |             .map(|timeout_ms| {
51 | |                 config.max_execution_time = Some(Duration::from_millis(timeout_ms));
52 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
   = note: `-W clippy::option-map-unit-fn` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::option_map_unit_fn)]`
help: try
   |
47 ~         if let Some(timeout_ms) = params
48 +             .get("timeout")
49 +             .and_then(serde_json::Value::as_u64) { config.max_execution_time = Some(Duration::from_millis(timeout_ms)); }
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:54:9
   |
54 | /         params
55 | |             .get("continue_on_error")
56 | |             .and_then(serde_json::Value::as_bool)
57 | |             .map(|continue_on_error| {
58 | |                 config.continue_on_error = continue_on_error;
59 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
help: try
   |
54 ~         if let Some(continue_on_error) = params
55 +             .get("continue_on_error")
56 +             .and_then(serde_json::Value::as_bool) { config.continue_on_error = continue_on_error; }
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:61:9
   |
61 | /         params
62 | |             .get("max_retry_attempts")
63 | |             .and_then(serde_json::Value::as_u64)
64 | |             .map(|max_retries| {
65 | |                 config.max_retry_attempts = u32::try_from(max_retries).unwrap_or(u32::MAX);
66 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
help: try
   |
61 ~         if let Some(max_retries) = params
62 +             .get("max_retry_attempts")
63 +             .and_then(serde_json::Value::as_u64) { config.max_retry_attempts = u32::try_from(max_retries).unwrap_or(u32::MAX); }
   |

warning: this macro has been superceded by `std::sync::LazyLock`
  --> llmspell-bridge/src/workflow_performance.rs:12:1
   |
12 | / lazy_static! {
13 | |     /// Cache for workflow type information to avoid repeated discovery
14 | |     static ref WORKFLOW_TYPE_CACHE: Arc<RwLock<HashMap<String, WorkflowTypeInfo>>> =
15 | |         Arc::new(RwLock::new(HashMap::new()));
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_std_lazy_statics
   = note: `-W clippy::non-std-lazy-statics` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::non_std_lazy_statics)]`

warning: this function could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflow_performance.rs:221:1
    |
221 | pub fn get_workflow_info_cached(workflow_type: &str) -> Option<WorkflowTypeInfo> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_workflow_info_cached(workflow_type: &str) -> Option<WorkflowTypeInfo>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/workflows.rs:231:17
    |
231 |         params: serde_json::Value,
    |                 ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:850:5
    |
850 |     pub fn list_workflow_types(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_workflow_types(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:855:5
    |
855 |     pub fn get_workflow_info(&self, workflow_type: &str) -> Option<WorkflowInfo> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_workflow_info(&self, workflow_type: &str) -> Option<WorkflowInfo>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:860:5
    |
860 |     pub fn get_all_workflow_info(&self) -> Vec<(String, WorkflowInfo)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_all_workflow_info(&self) -> Vec<(String, WorkflowInfo)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: all fields have the same prefix: `total`
    --> llmspell-bridge/src/workflows.rs:1266:1
     |
1266 | / struct RegistryMetrics {
1267 | |     /// Total workflows registered
1268 | |     total_registered: AtomicU64,
1269 | |     /// Total templates registered
...    |
1272 | |     total_executions: AtomicU64,
1273 | | }
     | |_^
     |
     = help: remove the prefixes
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_field_names
     = note: `-W clippy::struct-field-names` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_field_names)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:141:51
    |
141 | pub fn lua_table_to_agent_input(lua: &Lua, table: Table) -> mlua::Result<AgentInput> {
    |                                                   ^^^^^ help: consider taking a reference instead: `&Table`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: binding to `_` prefixed variable with no side-effect
   --> llmspell-bridge/src/lua/conversion.rs:156:9
    |
156 |     let _context: Option<ExecutionContext> = None;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::no_effect_underscore_binding)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:208:43
    |
208 | fn parse_media_content(_lua: &Lua, table: Table) -> mlua::Result<MediaContent> {
    |                                           ^^^^^ help: consider taking a reference instead: `&Table`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:414:56
    |
414 | pub fn workflow_result_to_lua_table(lua: &Lua, result: serde_json::Value) -> mlua::Result<Table> {
    |                                                        ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this could be a `const fn`
   --> llmspell-bridge/src/lua/globals/agent.rs:854:5
    |
854 | /     fn new(bridge: Arc<AgentBridge>) -> Self {
855 | |         Self {
856 | |             bridge,
857 | |             name: None,
...   |
873 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
854 |     const fn new(bridge: Arc<AgentBridge>) -> Self {
    |     +++++

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/globals/hook.rs:235:22
    |
235 | fn parse_priority(s: Option<String>) -> Priority {
    |                      ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Option<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-bridge/src/lua/globals/hook.rs:247:1
    |
247 | / pub fn inject_hook_global(
248 | |     lua: &Lua,
249 | |     _context: &GlobalContext,
250 | |     hook_bridge: Arc<HookBridge>,
251 | | ) -> Result<()> {
    | |_______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/lua/globals/json.rs:10:1
   |
10 | pub fn inject_json_global(lua: &Lua) -> Result<(), LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/replay.rs:156:48
    |
156 |                     arr.push(lua_value_to_json(_lua, v)?);
    |                                                ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/replay.rs:125:22
    |
125 | fn lua_value_to_json(_lua: &Lua, value: Value) -> LuaResult<serde_json::Value> {
    |                      ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/replay.rs:163:53
    |
163 |                     map.insert(k, lua_value_to_json(_lua, v)?);
    |                                                     ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/replay.rs:125:22
    |
125 | fn lua_value_to_json(_lua: &Lua, value: Value) -> LuaResult<serde_json::Value> {
    |                      ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/lua/globals/session.rs:16:5
   |
16 | /// SessionBuilder for creating sessions with method chaining
   |     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
16 - /// SessionBuilder for creating sessions with method chaining
16 + /// `SessionBuilder` for creating sessions with method chaining
   |

warning: this could be a `const fn`
  --> llmspell-bridge/src/lua/globals/session.rs:26:5
   |
26 | /     fn new(bridge: Arc<SessionBridge>) -> Self {
27 | |         Self {
28 | |             bridge,
29 | |             name: None,
...  |
33 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
26 |     const fn new(bridge: Arc<SessionBridge>) -> Self {
   |     +++++

warning: all if blocks contain the same code at the end
  --> llmspell-bridge/src/lua/globals/streaming.rs:56:29
   |
56 | / ...                       Ok(value)
57 | | ...                   }
   | |_______________________^
   |
   = note: the end suggestion probably needs some adjustments to use the expression result correctly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
   = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::branches_sharing_code)]`
help: consider moving these statements after the if
   |
56 ~                             }
57 +                             Ok(value)
   |

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-bridge/src/lua/globals/workflow.rs:107:9
    |
107 |         "fail_fast" | "failfast" | _ => ErrorStrategy::FailFast,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:154:45
    |
154 |                         and_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items
    = note: `-W clippy::used-underscore-items` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_items)]`

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:154:62
    |
154 |                         and_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                                              ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:167:44
    |
167 |                         or_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:167:61
    |
167 |                         or_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                                             ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:177:45
    |
177 |                         condition: Box::new(_parse_condition(_lua, inner)?),
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:177:62
    |
177 |                         condition: Box::new(_parse_condition(_lua, inner)?),
    |                                                              ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/lua/globals/workflow.rs:443:5
    |
443 | /// WorkflowBuilder for creating workflows with method chaining
    |     ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
443 - /// WorkflowBuilder for creating workflows with method chaining
443 + /// `WorkflowBuilder` for creating workflows with method chaining
    |

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/lua/globals/workflow.rs:453:16
    |
453 |     condition: Option<Box<dyn Fn(&serde_json::Value) -> bool + Send + Sync>>,
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/lua/globals/workflow.rs:457:21
    |
457 |     loop_condition: Option<Box<dyn Fn(&serde_json::Value) -> bool + Send + Sync>>,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:530:24
    |
530 |             let step = _parse_workflow_step(lua, &step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: &Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:548:24
    |
548 |             let step = _parse_workflow_step(lua, &step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: &Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:554:24
    |
554 |             let step = _parse_workflow_step(lua, &step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: &Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/lua/hook_adapter.rs:74:68
   |
74 |     /// Returns an error if the Lua value cannot be converted to a HookResult
   |                                                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
74 -     /// Returns an error if the Lua value cannot be converted to a HookResult
74 +     /// Returns an error if the Lua value cannot be converted to a `HookResult`
   |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/lua/sync_utils.rs:196:21
    |
196 | /                     match tokio::time::timeout(duration, future).await {
197 | |                         Ok(result) => result,
198 | |                         Err(_) => Err(mlua::Error::RuntimeError(format!(
199 | |                             "{op_name} timed out after {duration:?}"
200 | |                         ))),
201 | |                     }
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
196 ~                     (tokio::time::timeout(duration, future).await).map_or_else(|_| Err(mlua::Error::RuntimeError(format!(
197 +                             "{op_name} timed out after {duration:?}"
198 +                         ))), |result| result)
    |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/mod.rs:1:57
  |
1 | //! ABOUTME: JavaScript script engine implementation of ScriptEngineBridge
  |                                                         ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JavaScript script engine implementation of ScriptEngineBridge
1 + //! ABOUTME: JavaScript script engine implementation of `ScriptEngineBridge`
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/engine.rs:1:14
  |
1 | //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
  |              ^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
1 + //! ABOUTME: `JSEngine` implementation of ScriptEngineBridge trait
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/engine.rs:1:41
  |
1 | //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
  |                                         ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
1 + //! ABOUTME: JSEngine implementation of `ScriptEngineBridge` trait
  |

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/engine.rs:31:5
   |
31 | /     pub fn engine_features() -> EngineFeatures {
32 | |         EngineFeatures {
33 | |             async_execution: true, // Native async/await
34 | |             streaming: true,       // Via async generators
...  |
41 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
31 |     pub const fn engine_features() -> EngineFeatures {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/agent.rs:13:1
   |
13 | / pub fn inject_agent_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
22 | |     Ok(())
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_agent_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/event.rs:19:1
   |
19 | / pub fn inject_event_global(
20 | |     _ctx: &mut Context,
21 | |     _context: &GlobalContext,
22 | | ) -> Result<(), LLMSpellError> {
...  |
28 | |     Ok(())
29 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
19 | pub const fn inject_event_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/hook.rs:14:1
   |
14 | / pub fn inject_hook_global(_ctx: &mut boa_engine::Context, _context: &GlobalContext) -> Result<()> {
...  |
20 | |     Ok(())
21 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
14 | pub const fn inject_hook_global(_ctx: &mut boa_engine::Context, _context: &GlobalContext) -> Result<()> {
   |     +++++

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/globals/json.rs:9:41
  |
9 | /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
  |                                         ^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
9 - /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
9 + /// Note: JavaScript already has native `JSON.parse()` and JSON.stringify()
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/globals/json.rs:9:58
  |
9 | /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
  |                                                          ^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
9 - /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
9 + /// Note: JavaScript already has native JSON.parse() and `JSON.stringify()`
  |

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/json.rs:16:1
   |
16 | / pub fn inject_json_global(
17 | |     _ctx: &mut boa_engine::Context,
18 | |     _context: &GlobalContext,
19 | | ) -> Result<(), LLMSpellError> {
...  |
25 | |     Ok(())
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
16 | pub const fn inject_json_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/state.rs:13:1
   |
13 | / pub fn inject_state_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | |     _state_global: &StateGlobal,
...  |
25 | |     Ok(())
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_state_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/streaming.rs:13:1
   |
13 | / pub fn inject_streaming_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_streaming_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/tool.rs:13:1
   |
13 | / pub fn inject_tool_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_tool_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/workflow.rs:13:1
   |
13 | / pub fn inject_workflow_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_workflow_global(
   |     +++++

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:348:13
    |
348 | /             &vec![
349 | |                 "paper_reader_agent".to_string(),
350 | |                 "concept_extractor_agent".to_string(),
351 | |                 "critic_agent".to_string(),
352 | |                 "summary_writer_agent".to_string(),
353 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
    = note: `-W clippy::useless-vec` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::useless_vec)]`
help: you can use a slice directly
    |
348 ~             &["paper_reader_agent".to_string(),
349 +                 "concept_extractor_agent".to_string(),
350 +                 "critic_agent".to_string(),
351 ~                 "summary_writer_agent".to_string()],
    |

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:398:13
    |
398 | /             &vec![
399 | |                 "fundamental_analyst".to_string(),
400 | |                 "technical_analyst".to_string(),
401 | |                 "risk_analyst".to_string(),
402 | |                 "market_analyst".to_string(),
403 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
help: you can use a slice directly
    |
398 ~             &["fundamental_analyst".to_string(),
399 +                 "technical_analyst".to_string(),
400 +                 "risk_analyst".to_string(),
401 ~                 "market_analyst".to_string()],
    |

warning: `llmspell-bridge` (lib) generated 110 warnings (run `cargo clippy --fix --lib -p llmspell-bridge` to apply 67 suggestions)
    Checking llmspell-testing v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-testing)
    Checking llmspell-cli v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-cli)
warning: `assert!(true)` will be optimized out by the compiler
   --> llmspell-testing/src/macros.rs:169:9
    |
169 |         assert!(true);
    |         ^^^^^^^^^^^^^
    |
    = help: remove it
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants
    = note: `#[warn(clippy::assertions_on_constants)]` on by default

    Checking llmspell-tools v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-tools)
    Checking llmspell-core v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core)
    Checking llmspell-sessions v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-sessions)
    Checking llmspell-agents v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents)
warning: `llmspell-testing` (lib test) generated 1 warning
warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/security_validation_test.rs:154:9
    |
154 |         config.max_storage_size_bytes = 5 * 1024; // 5KB total
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::SessionManagerConfig { max_storage_size_bytes: 5 * 1024, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/security_validation_test.rs:150:9
    |
150 |         let mut config = SessionManagerConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
    = note: `#[warn(clippy::field_reassign_with_default)]` on by default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/security_validation_test.rs:183:9
    |
183 |         config.max_storage_size_bytes = 10 * 1024;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::SessionManagerConfig { max_storage_size_bytes: 10 * 1024, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/security_validation_test.rs:181:9
    |
181 |         let mut config = SessionManagerConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

    Checking llmspell-state-persistence v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-state-persistence)
warning: `llmspell-sessions` (test "security_validation_test") generated 2 warnings
    Checking llmspell-workflows v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-workflows)
warning: calling `ResourceLimits::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:30:9
   |
30 |         Default::default(),
   |         ^^^^^^^^^^^^^^^^^^ help: try: `ResourceLimits::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:76:48
   |
76 |             let tool = HashCalculatorTool::new(Default::default());
   |                                                ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:90:49
   |
90 |             let tool = TextManipulatorTool::new(Default::default());
   |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:97:47
   |
97 |             let tool = UuidGeneratorTool::new(Default::default());
   |                                               ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `CsvAnalyzerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:110:45
    |
110 |             let tool = CsvAnalyzerTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `CsvAnalyzerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:117:47
    |
117 |             let tool = JsonProcessorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:125:39
    |
125 |                 GraphQLQueryTool::new(Default::default()).expect("Failed to create GraphQL tool");
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:133:38
    |
133 |                 HttpRequestTool::new(Default::default()).expect("Failed to create HTTP tool");
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:154:47
    |
154 |             let tool = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:161:48
    |
161 |             let tool = FileOperationsTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:169:44
    |
169 |             let tool = FileSearchTool::new(Default::default(), sandbox.clone());
    |                                            ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:177:45
    |
177 |             let tool = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:190:51
    |
190 |             let tool = EnvironmentReaderTool::new(Default::default());
    |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:197:49
    |
197 |             let tool = ProcessExecutorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:204:48
    |
204 |             let tool = ServiceCheckerTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:211:47
    |
211 |             let tool = SystemMonitorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:224:43
    |
224 |             let tool = WebSearchTool::new(Default::default());
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:245:49
    |
245 |             let _hash = HashCalculatorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:247:50
    |
247 |             let _text = TextManipulatorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:248:48
    |
248 |             let _uuid = UuidGeneratorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `CsvAnalyzerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:251:45
    |
251 |             let _csv = CsvAnalyzerTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `CsvAnalyzerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:252:48
    |
252 |             let _json = JsonProcessorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:254:39
    |
254 |                 GraphQLQueryTool::new(Default::default()).expect("GraphQL creation failed");
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:255:46
    |
255 |             let _http = HttpRequestTool::new(Default::default()).expect("HTTP creation failed");
    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:259:53
    |
259 |             let _file_conv = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:260:53
    |
260 |             let _file_ops = FileOperationsTool::new(Default::default());
    |                                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:261:52
    |
261 |             let _file_search = FileSearchTool::new(Default::default(), sandbox.clone());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:262:52
    |
262 |             let _file_watch = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:265:51
    |
265 |             let _env = EnvironmentReaderTool::new(Default::default());
    |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:266:50
    |
266 |             let _proc = ProcessExecutorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:267:52
    |
267 |             let _service = ServiceCheckerTool::new(Default::default());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:268:50
    |
268 |             let _system = SystemMonitorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:271:50
    |
271 |             let _web_search = WebSearchTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-tools/tests/security_test_suite.rs:31:31
   |
31 | fn create_agent_input(params: Value) -> Result<AgentInput, LLMSpellError> {
   |                               ^^^^^ help: consider taking a reference instead: `&Value`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
   = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this function's return value is unnecessarily wrapped by `Result`
  --> llmspell-tools/tests/security_test_suite.rs:31:1
   |
31 | / fn create_agent_input(params: Value) -> Result<AgentInput, LLMSpellError> {
32 | |     // AgentInput expects parameters to be wrapped in a "parameters" object
33 | |     let mut input = AgentInput::text("");
34 | |     let wrapped_params = json!({ "parameters": params });
...  |
39 | |     Ok(input)
40 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
   = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
   |
31 - fn create_agent_input(params: Value) -> Result<AgentInput, LLMSpellError> {
31 + fn create_agent_input(params: Value) -> llmspell_core::types::AgentInput {
   |
help: ...and then change returning expressions
   |
39 -     Ok(input)
39 +     input
   |

warning: unnecessary hashes around raw string literal
   --> llmspell-bridge/tests/lua_workflow_api_tests.rs:249:18
    |
249 |       let script = r#"
    |  __________________^
250 | |         local success, err = pcall(function()
251 | |             local workflow = Workflow.sequential({
252 | |                 -- Missing required 'name' field
...   |
261 | |     "#;
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_raw_string_hashes
    = note: `-W clippy::needless-raw-string-hashes` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_raw_string_hashes)]`
help: remove all the hashes around the string literal
    |
249 ~     let script = r"
250 |         local success, err = pcall(function()
...
260 |         }
261 ~     ";
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> llmspell-tools/tests/security_test_suite.rs:131:13
    |
131 | /             match result {
132 | |                 Ok(Ok(output)) => {
133 | |                     assert!(
134 | |                         !output.text.contains("/etc/passwd") && !output.text.contains("metadata"),
...   |
141 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
    = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
    |
131 ~             if let Ok(Ok(output)) = result {
132 +                 assert!(
133 +                     !output.text.contains("/etc/passwd") && !output.text.contains("metadata"),
134 +                     "Tool {tool_name} may be vulnerable to SSRF with URL: {url}"
135 +                 );
136 +             } else {
137 +                 // Tool rejected the URL or timed out - both are acceptable for SSRF prevention
138 +             }
    |

warning: binding to `_` prefixed variable with no side-effect
   --> llmspell-tools/tests/web_tools_integration.rs:276:9
    |
276 |     let _output = result; // Just check it doesn't panic
    |         ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::no_effect_underscore_binding)]`

warning: `llmspell-tools` (bench "tool_initialization") generated 33 warnings
warning: unused `async` for function with no await statements
  --> llmspell-bridge/tests/lua_workflow_api_tests.rs:12:1
   |
12 | / async fn create_test_engine() -> LuaEngine {
13 | |     let config = LuaConfig::default();
14 | |     LuaEngine::new(&config).expect("Failed to create Lua engine")
15 | | }
   | |_^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
   = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
  --> llmspell-bridge/tests/lua_workflow_api_tests.rs:28:1
   |
28 | / async fn create_test_registry() -> Arc<ComponentRegistry> {
29 | |     let registry = Arc::new(ComponentRegistry::new());
30 | |     registry
31 | |         .register_tool("calculator".to_string(), Arc::new(CalculatorTool::new()))
32 | |         .unwrap();
33 | |     registry
34 | | }
   | |_^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: `llmspell-tools` (test "web_tools_integration") generated 1 warning
    Checking llmspell-hooks v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-hooks)
warning: `llmspell-tools` (test "security_test_suite") generated 3 warnings (run `cargo clippy --fix --test "security_test_suite"` to apply 1 suggestion)
warning: `llmspell-bridge` (test "lua_workflow_api_tests") generated 3 warnings (run `cargo clippy --fix --test "lua_workflow_api_tests"` to apply 1 suggestion)
warning: this `map_or` can be simplified
   --> llmspell-bridge/tests/workflow_tool_integration_test.rs:415:31
    |
415 |                   let success = res
    |  _______________________________^
416 | |                     .get("success")
417 | |                     .map_or(true, |v| v.as_bool().unwrap_or(true));
    | |__________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
    = note: `-W clippy::unnecessary-map-or` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::unnecessary_map_or)]`
help: use is_none_or instead
    |
417 -                     .map_or(true, |v| v.as_bool().unwrap_or(true));
417 +                     .is_none_or(|v| v.as_bool().unwrap_or(true));
    |

warning: binding's name is too similar to existing binding
    --> llmspell-sessions/src/artifact/storage.rs:1669:13
     |
1669 |         let artifact1 = SessionArtifact::new(
     |             ^^^^^^^^^
     |
note: existing binding defined here
    --> llmspell-sessions/src/artifact/storage.rs:1665:13
     |
1665 |         let artifacts = storage.list_session_artifacts(&session_id).await.unwrap();
     |             ^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
note: the lint level is defined here
    --> llmspell-sessions/src/lib.rs:6:9
     |
6    | #![warn(clippy::pedantic)]
     |         ^^^^^^^^^^^^^^^^
     = note: `#[warn(clippy::similar_names)]` implied by `#[warn(clippy::pedantic)]`

warning: binding's name is too similar to existing binding
    --> llmspell-sessions/src/artifact/storage.rs:1679:13
     |
1679 |         let artifact2 = SessionArtifact::new(
     |             ^^^^^^^^^
     |
note: existing binding defined here
    --> llmspell-sessions/src/artifact/storage.rs:1665:13
     |
1665 |         let artifacts = storage.list_session_artifacts(&session_id).await.unwrap();
     |             ^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: `llmspell-bridge` (test "workflow_tool_integration_test") generated 1 warning (run `cargo clippy --fix --test "workflow_tool_integration_test"` to apply 1 suggestion)
warning: binding's name is too similar to existing binding
   --> llmspell-sessions/src/replay/session_debug_tests.rs:201:13
    |
201 |     let mut state1 = create_test_captured_state("hook_1", Uuid::new_v4());
    |             ^^^^^^
    |
note: existing binding defined here
   --> llmspell-sessions/src/replay/session_debug_tests.rs:199:13
    |
199 |     let mut states = VecDeque::new();
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> llmspell-sessions/src/replay/session_debug_tests.rs:206:13
    |
206 |     let mut state2 = create_test_captured_state("hook_2", Uuid::new_v4());
    |             ^^^^^^
    |
note: existing binding defined here
   --> llmspell-sessions/src/replay/session_debug_tests.rs:199:13
    |
199 |     let mut states = VecDeque::new();
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: field assignment outside of initializer for an instance created with Default::default()
    --> llmspell-sessions/src/artifact/storage.rs:1254:9
     |
1254 |         config.max_artifact_size = 1024; // 1KB limit for testing
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: consider initializing the variable with `artifact::storage::ArtifactStorageConfig { max_artifact_size: 1024, ..Default::default() }` and removing relevant reassignments
    --> llmspell-sessions/src/artifact/storage.rs:1253:9
     |
1253 |         let mut config = ArtifactStorageConfig::default();
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
note: the lint level is defined here
    --> llmspell-sessions/src/lib.rs:5:9
     |
5    | #![warn(clippy::all)]
     |         ^^^^^^^^^^^
     = note: `#[warn(clippy::field_reassign_with_default)]` implied by `#[warn(clippy::all)]`

warning: field assignment outside of initializer for an instance created with Default::default()
    --> llmspell-sessions/src/artifact/storage.rs:1388:9
     |
1388 |         config.chunk_size = 1024; // 1KB chunks for testing
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: consider initializing the variable with `artifact::storage::ArtifactStorageConfig { chunk_size: 1024, ..Default::default() }` and removing relevant reassignments
    --> llmspell-sessions/src/artifact/storage.rs:1387:9
     |
1387 |         let mut config = ArtifactStorageConfig::default();
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: casting `u64` to `u32` may truncate the value
   --> llmspell-sessions/src/artifact/versioning.rs:248:21
    |
248 |                     i as u32,
    |                     ^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `#[warn(clippy::cast_possible_truncation)]` implied by `#[warn(clippy::pedantic)]`
help: ... or use `try_from` and handle the error accordingly
    |
248 -                     i as u32,
248 +                     u32::try_from(i),
    |

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/session_controls.rs:707:9
    |
707 |         assert_eq!(speed.multiplier(), 1.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `#[warn(clippy::float_cmp)]` implied by `#[warn(clippy::pedantic)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/session_controls.rs:710:9
    |
710 |         assert_eq!(speed.multiplier(), 1.5);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/session_controls.rs:713:9
    |
713 |         assert_eq!(speed.multiplier(), 1.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/session_controls.rs:716:9
    |
716 |         assert_eq!(speed.multiplier(), 5.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/session_controls.rs:719:9
    |
719 |         assert_eq!(speed.multiplier(), 10.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/session_controls.rs:754:9
    |
754 |         assert_eq!(progress.progress_percentage, 25.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: calls to `push` immediately after creation
  --> llmspell-sessions/src/replay/session_debug_tests.rs:43:5
   |
43 | /     let mut errors = Vec::new();
44 | |     errors.push(ReplayError {
45 | |         timestamp: SystemTime::now(),
46 | |         execution_id: Uuid::new_v4(),
...  |
56 | |         error_type: ReplayErrorType::ValidationError,
57 | |     });
   | |_______^ help: consider using the `vec![]` macro: `let errors = vec![..];`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push
   = note: `#[warn(clippy::vec_init_then_push)]` implied by `#[warn(clippy::all)]`

warning: module has the same name as its containing module
   --> llmspell-sessions/src/replay/tests.rs:5:1
    |
5   | / mod tests {
6   | |     use super::super::{
7   | |         session_adapter::{SessionReplayAdapter, SessionReplayConfig, SessionReplayStatus},
8   | |         HookReplayBridge, ReplayEngine,
...   |
980 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception
    = note: `#[warn(clippy::module_inception)]` implied by `#[warn(clippy::all)]`

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/tests.rs:820:9
    |
820 |         assert_eq!(speed.multiplier(), 1.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/tests.rs:823:9
    |
823 |         assert_eq!(speed.multiplier(), 2.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/tests.rs:827:9
    |
827 |         assert_eq!(speed.multiplier(), 0.1); // Clamped to min
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-sessions/src/replay/tests.rs:830:9
    |
830 |         assert_eq!(speed.multiplier(), 10.0); // Clamped to max
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: calling `HashMap::default()` is more clear than this expression
   --> llmspell-sessions/src/bridge/operations.rs:245:23
    |
245 |             metadata: Default::default(),
    |                       ^^^^^^^^^^^^^^^^^^ help: try: `HashMap::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `#[warn(clippy::default_trait_access)]` implied by `#[warn(clippy::pedantic)]`

warning: calling `Option::default()` is more clear than this expression
   --> llmspell-sessions/src/bridge/operations.rs:357:21
    |
357 |                     Default::default(),
    |                     ^^^^^^^^^^^^^^^^^^ help: try: `Option::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `Option::default()` is more clear than this expression
   --> llmspell-sessions/src/bridge/operations.rs:387:17
    |
387 |                 Default::default(),
    |                 ^^^^^^^^^^^^^^^^^^ help: try: `Option::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/src/policies/mod.rs:291:9
    |
291 |         config.composition_pattern = PolicyComposition::Sequential;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `policies::SessionPolicyConfig { composition_pattern: PolicyComposition::Sequential, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/src/policies/mod.rs:290:9
    |
290 |         let mut config = SessionPolicyConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/src/policies/mod.rs:300:9
    |
300 |         config.composition_pattern = PolicyComposition::Parallel;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `policies::SessionPolicyConfig { composition_pattern: PolicyComposition::Parallel, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/src/policies/mod.rs:299:9
    |
299 |         let mut config = SessionPolicyConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/src/policies/mod.rs:309:9
    |
309 |         config.composition_pattern = PolicyComposition::Voting { threshold: 0.6 };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `policies::SessionPolicyConfig { composition_pattern: PolicyComposition::Voting { threshold: 0.6 }, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/src/policies/mod.rs:308:9
    |
308 |         let mut config = SessionPolicyConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-tools/tests/dry_principle_verification_test.rs:38:9
   |
38 |         use llmspell_utils::encoding::{hash_string, to_hex_string, HashAlgorithm};
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
   = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-tools/tests/dry_principle_verification_test.rs:38:40
   |
38 |         use llmspell_utils::encoding::{hash_string, to_hex_string, HashAlgorithm};
   |                                        ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-tools/tests/dry_principle_verification_test.rs:38:53
   |
38 |         use llmspell_utils::encoding::{hash_string, to_hex_string, HashAlgorithm};
   |                                                     ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-tools/tests/dry_principle_verification_test.rs:38:68
   |
38 |         use llmspell_utils::encoding::{hash_string, to_hex_string, HashAlgorithm};
   |                                                                    ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/dry_principle_verification_test.rs:17:49
   |
17 |         let hash_tool = HashCalculatorTool::new(Default::default());
   |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> llmspell-tools/tests/dry_principle_verification_test.rs:69:9
   |
69 |         use llmspell_utils::encoding::base64_encode;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/dry_principle_verification_test.rs:79:48
   |
79 |         let uuid_tool = UuidGeneratorTool::new(Default::default());
   |                                                ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/dry_principle_verification_test.rs:115:48
    |
115 |         let json_tool = JsonProcessorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/dry_principle_verification_test.rs:176:49
    |
176 |         let hash_tool = HashCalculatorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/dry_principle_verification_test.rs:221:46
    |
221 |             Box::new(HashCalculatorTool::new(Default::default())),
    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/dry_principle_verification_test.rs:223:45
    |
223 |             Box::new(UuidGeneratorTool::new(Default::default())),
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/src/analytics/session_metrics.rs:557:9
    |
557 |         config.privacy_mode = true;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `analytics::session_metrics::SessionAnalyticsConfig { privacy_mode: true, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/src/analytics/session_metrics.rs:556:9
    |
556 |         let mut config = SessionAnalyticsConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: unused `async` for function with no await statements
  --> llmspell-sessions/src/replay/tests.rs:18:5
   |
18 | /     async fn create_test_replay_components() -> (
19 | |         Arc<ReplayManager>,
20 | |         Arc<HookReplayManager>,
21 | |         Arc<dyn llmspell_storage::StorageBackend>,
...  |
52 | |     }
   | |_____^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
   = note: `#[warn(clippy::unused_async)]` implied by `#[warn(clippy::pedantic)]`

warning: `llmspell-tools` (test "dry_principle_verification_test") generated 11 warnings
warning: long literal lacking separators
  --> llmspell-bridge/tests/integration_test.rs:68:23
   |
68 |         "max_memory": 50000000,
   |                       ^^^^^^^^ help: consider: `50_000_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: unused `async` for function with no await statements
  --> llmspell-bridge/tests/sync_behavior_test.rs:12:1
   |
12 | / async fn create_test_registry() -> Arc<ComponentRegistry> {
13 | |     let registry = Arc::new(ComponentRegistry::new());
14 | |     registry
15 | |         .register_tool("calculator".to_string(), Arc::new(CalculatorTool::new()))
16 | |         .unwrap();
17 | |     registry
18 | | }
   | |_^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
   = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
  --> llmspell-bridge/tests/sync_behavior_test.rs:31:1
   |
31 | / async fn create_test_engine() -> LuaEngine {
32 | |     let config = LuaConfig::default();
33 | |     LuaEngine::new(&config).expect("Failed to create Lua engine")
34 | | }
   | |_^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:19:74
   |
19 |                 {"name": "Alice", "department": "Engineering", "salary": 120000},
   |                                                                          ^^^^^^ help: consider: `120_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:21:76
   |
21 |                 {"name": "Charlie", "department": "Engineering", "salary": 110000}
   |                                                                            ^^^^^^ help: consider: `110_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:24:43
   |
24 |                 "Engineering": {"budget": 5000000, "head": "Alice"},
   |                                           ^^^^^^^ help: consider: `5_000_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:25:37
   |
25 |                 "Sales": {"budget": 2000000, "head": "David"}
   |                                     ^^^^^^^ help: consider: `2_000_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/json_processor_integration.rs:355:31
    |
355 |                     "budget": 1000000
    |                               ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/json_processor_integration.rs:359:31
    |
359 |                     "budget": 500000
    |                               ^^^^^^ help: consider: `500_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: item in documentation is missing backticks
 --> llmspell-tools/tests/json_processor_integration.rs:1:27
  |
1 | //! Integration tests for JsonProcessorTool
  |                           ^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! Integration tests for JsonProcessorTool
1 + //! Integration tests for `JsonProcessorTool`
  |

warning: `llmspell-bridge` (test "sync_behavior_test") generated 2 warnings
warning: casting `usize` to `i64` may wrap around the value on targets with 64-bit wide pointers
   --> llmspell-bridge/tests/integration_test.rs:414:49
    |
414 |         assert_eq!(output.output.as_i64(), Some((i * i) as i64));
    |                                                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap
    = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_wrap)]`

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:106:40
    |
106 |     let tool = HashCalculatorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:170:41
    |
170 |     let tool = TextManipulatorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:214:39
    |
214 |     let tool = JsonProcessorTool::new(Default::default());
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:277:39
    |
277 |     let tool = UuidGeneratorTool::new(Default::default());
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:321:48
    |
321 |         let json_tool = JsonProcessorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:322:49
    |
322 |         let hash_tool = HashCalculatorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_operations.rs:323:50
    |
323 |         let text_tool = TextManipulatorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: `llmspell-sessions` (lib test) generated 27 warnings
warning: variables can be used directly in the `format!` string
  --> llmspell-bridge/tests/lua_integration_tests.rs:34:48
   |
34 |         .map_err(|e| mlua::Error::RuntimeError(format!("Failed to read {}: {}", file_path, e)))?;
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
34 -         .map_err(|e| mlua::Error::RuntimeError(format!("Failed to read {}: {}", file_path, e)))?;
34 +         .map_err(|e| mlua::Error::RuntimeError(format!("Failed to read {file_path}: {e}")))?;
   |

warning: `llmspell-bridge` (test "integration_test") generated 2 warnings
warning: variables can be used directly in the `format!` string
  --> llmspell-bridge/tests/lua_integration_tests.rs:60:13
   |
60 |             panic!("Failed to run basic hooks test: {}", e);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
60 -             panic!("Failed to run basic hooks test: {}", e);
60 +             panic!("Failed to run basic hooks test: {e}");
   |

warning: variables can be used directly in the `format!` string
  --> llmspell-bridge/tests/lua_integration_tests.rs:85:13
   |
85 |             panic!("Failed to run cross-language test: {}", e);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
85 -             panic!("Failed to run cross-language test: {}", e);
85 +             panic!("Failed to run cross-language test: {e}");
   |

warning: variables can be used directly in the `format!` string
   --> llmspell-bridge/tests/lua_integration_tests.rs:110:13
    |
110 |             panic!("Failed to run performance test: {}", e);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
110 -             panic!("Failed to run performance test: {}", e);
110 +             panic!("Failed to run performance test: {e}");
    |

warning: `llmspell-tools` (test "json_processor_integration") generated 7 warnings (run `cargo clippy --fix --test "json_processor_integration"` to apply 1 suggestion)
warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-bridge/tests/json_performance_test.rs:65:24
   |
65 |     let small_per_op = small_duration.as_micros() as f64 / f64::from(iterations);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-bridge/tests/json_performance_test.rs:82:25
   |
82 |     let medium_per_op = medium_duration.as_micros() as f64 / f64::from(iterations);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-bridge/tests/json_performance_test.rs:99:24
   |
99 |     let large_per_op = large_duration.as_micros() as f64 / f64::from(iterations);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-bridge/tests/json_performance_test.rs:152:24
    |
152 |     let small_per_op = small_duration.as_micros() as f64 / f64::from(iterations);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-bridge/tests/json_performance_test.rs:168:25
    |
168 |     let medium_per_op = medium_duration.as_micros() as f64 / f64::from(iterations);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-bridge/tests/json_performance_test.rs:184:24
    |
184 |     let large_per_op = large_duration.as_micros() as f64 / f64::from(iterations);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-bridge/tests/json_performance_test.rs:227:18
    |
227 |     let per_op = duration.as_micros() as f64 / f64::from(iterations);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: `llmspell-tools` (bench "tool_operations") generated 7 warnings
warning: `llmspell-bridge` (test "lua_integration_tests") generated 4 warnings (run `cargo clippy --fix --test "lua_integration_tests"` to apply 4 suggestions)
warning: `llmspell-bridge` (test "json_performance_test") generated 7 warnings
warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_performance_test.rs:152:9
    |
152 |         policy_config.composition_pattern = pattern;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { composition_pattern: pattern, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_performance_test.rs:151:9
    |
151 |         let mut policy_config = SessionPolicyConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
    = note: `#[warn(clippy::field_reassign_with_default)]` on by default

warning: `assert!(true)` will be optimized out by the compiler
  --> llmspell-testing/tests/unit/agents_tests.rs:12:9
   |
12 |         assert!(true);
   |         ^^^^^^^^^^^^^
   |
   = help: remove it
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants
   = note: `#[warn(clippy::assertions_on_constants)]` on by default

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/tools_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/workflows_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/bridge_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/state_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/hooks_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/events_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/storage_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/utils_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `llmspell-sessions` (test "policy_performance_test") generated 1 warning
warning: `llmspell-testing` (test "unit") generated 9 warnings
warning: this function has too many lines (717/100)
   --> llmspell-bridge/tests/simple_tool_integration_test.rs:5:7
    |
5   |   async fn test_simple_tool_integration() {
    |  _______^
6   | |     use llmspell_bridge::{
7   | |         engine::factory::{EngineFactory, LuaConfig},
8   | |         providers::{ProviderManager, ProviderManagerConfig},
...   |
875 | |     println!("\n✅ All integration tests passed!");
876 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/tests/simple_tool_integration_test.rs:161:13
    |
161 |             assert_eq!(obj.get("result").unwrap().as_f64().unwrap(), 14.0);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `StateManager as PersistentStateManager`
 --> llmspell-testing/tests/integration/component_state_integration.rs:5:34
  |
5 | use llmspell_state_persistence::{StateManager as PersistentStateManager, StateScope};
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::sync::Arc`
  --> llmspell-testing/tests/integration/component_state_integration.rs:10:5
   |
10 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: `llmspell-bridge` (test "simple_tool_integration_test") generated 2 warnings
warning: unused variable: `is_active`
   --> llmspell-testing/tests/integration/component_state_integration.rs:286:42
    |
286 |         for (scope_suffix, component_id, is_active) in &components {
    |                                          ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_active`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `state_manager`
  --> llmspell-testing/tests/integration/state_migration.rs:28:9
   |
28 |     let state_manager = Arc::new(
   |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_state_manager`

warning: unused variable: `temp_dir`
   --> llmspell-testing/tests/integration/backup_recovery.rs:192:45
    |
192 |         let (state_manager, backup_manager, temp_dir) =
    |                                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_temp_dir`

warning: unused variable: `temp_dir`
   --> llmspell-testing/tests/integration/backup_recovery.rs:282:45
    |
282 |         let (state_manager, backup_manager, temp_dir) =
    |                                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_temp_dir`

warning: length comparison to one
   --> llmspell-testing/tests/integration/state_migration.rs:417:9
    |
417 |         plan.steps.len() >= 1,
    |         ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!plan.steps.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `#[warn(clippy::len_zero)]` on by default

warning: casting to the same type is unnecessary (`usize` -> `usize`)
   --> llmspell-testing/tests/integration/state_migration.rs:854:9
    |
854 |         num_items as usize,
    |         ^^^^^^^^^^^^^^^^^^ help: try: `{ num_items }`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
    = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: `llmspell-testing` (test "integration") generated 8 warnings (run `cargo clippy --fix --test "integration"` to apply 4 suggestions)
warning: field assignment outside of initializer for an instance created with Default::default()
  --> llmspell-sessions/tests/policy_test.rs:26:5
   |
26 |     policy_config.enable_timeout = true;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { enable_timeout: true, enable_resource_limits: false, enable_rate_limiting: false, ..Default::default() }` and removing relevant reassignments
  --> llmspell-sessions/tests/policy_test.rs:25:5
   |
25 |     let mut policy_config = SessionPolicyConfig::default();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
   = note: `#[warn(clippy::field_reassign_with_default)]` on by default

warning: field assignment outside of initializer for an instance created with Default::default()
  --> llmspell-sessions/tests/policy_test.rs:65:5
   |
65 |     policy_config.enable_timeout = false;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { enable_timeout: false, enable_resource_limits: true, enable_rate_limiting: false, ..Default::default() }` and removing relevant reassignments
  --> llmspell-sessions/tests/policy_test.rs:64:5
   |
64 |     let mut policy_config = SessionPolicyConfig::default();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_test.rs:101:5
    |
101 |     policy_config.enable_timeout = false;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { enable_timeout: false, enable_resource_limits: false, enable_rate_limiting: true, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_test.rs:100:5
    |
100 |     let mut policy_config = SessionPolicyConfig::default();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_test.rs:134:5
    |
134 |     policy_config.composition_pattern = PolicyComposition::Sequential;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { composition_pattern: PolicyComposition::Sequential, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_test.rs:133:5
    |
133 |     let mut policy_config = SessionPolicyConfig::default();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_test.rs:155:5
    |
155 |     policy_config.composition_pattern = PolicyComposition::Parallel;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { composition_pattern: PolicyComposition::Parallel, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_test.rs:154:5
    |
154 |     let mut policy_config = SessionPolicyConfig::default();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_test.rs:182:5
    |
182 |     policy_config.composition_pattern = PolicyComposition::Voting { threshold: 0.6 };
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { composition_pattern: PolicyComposition::Voting { threshold: 0.6 }, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_test.rs:181:5
    |
181 |     let mut policy_config = SessionPolicyConfig::default();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_test.rs:266:5
    |
266 |     new_config.enable_timeout = false;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { enable_timeout: false, enable_resource_limits: false, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_test.rs:265:5
    |
265 |     let mut new_config = SessionPolicyConfig::default();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_test.rs:285:5
    |
285 |     policy_config.enable_timeout = false;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { enable_timeout: false, enable_resource_limits: false, enable_rate_limiting: true, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_test.rs:284:5
    |
284 |     let mut policy_config = SessionPolicyConfig::default();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/common/mod.rs:64:21
   |
64 |       let error_msg = if let Some(error_str) = output_value["error"].as_str() {
   |  _____________________^
65 | |         // Simple string error format
66 | |         error_str.to_string()
67 | |     } else if let Some(error_obj) = output_value["error"].as_object() {
...  |
76 | |         panic!("Expected error field in output, got: {output_value}");
77 | |     };
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
   = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
   |
64 ~     let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
65 +         // Complex error object format - try message field first
66 +         if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
67 +             msg.to_string()
68 +         } else {
69 +             // Fallback to serializing the entire error object
70 +             serde_json::to_string(error_obj).unwrap_or_else(|_| format!("{error_obj:?}"))
71 +         }
72 +     } else {
73 +         panic!("Expected error field in output, got: {output_value}");
74 ~     }, |error_str| error_str.to_string());
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/common/mod.rs:69:9
   |
69 | /         if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
70 | |             msg.to_string()
71 | |         } else {
...  |
74 | |         }
   | |_________^ help: try: `error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj).unwrap_or_else(|_| format!("{error_obj:?}")), |msg| msg.to_string())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/webhook_caller_integration.rs:142:29
    |
142 |               let error_msg = if let Some(error_str) = output_value["error"].as_str() {
    |  _____________________________^
143 | |                 error_str.to_lowercase()
144 | |             } else if let Some(error_obj) = output_value["error"].as_object() {
145 | |                 if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
...   |
159 | |                 String::new()
160 | |             };
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
142 ~             let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
143 +                 if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
144 +                     msg.to_lowercase()
145 +                 } else {
146 +                     serde_json::to_string(error_obj)
147 +                         .unwrap_or_default()
148 +                         .to_lowercase()
149 +                 }
150 +             } else if let Some(result) = output_value.get("result") {
151 +                 if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
152 +                     err.to_lowercase()
153 +                 } else {
154 +                     String::new()
155 +                 }
156 +             } else {
157 +                 String::new()
158 ~             }, |error_str| error_str.to_lowercase());
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/webhook_caller_integration.rs:145:17
    |
145 | /                 if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
146 | |                     msg.to_lowercase()
147 | |                 } else {
148 | |                     serde_json::to_string(error_obj)
149 | |                         .unwrap_or_default()
150 | |                         .to_lowercase()
151 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
145 ~                 error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj)
146 +                         .unwrap_or_default()
147 +                         .to_lowercase(), |msg| msg.to_lowercase())
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/webhook_caller_integration.rs:153:17
    |
153 | /                 if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
154 | |                     err.to_lowercase()
155 | |                 } else {
156 | |                     String::new()
157 | |                 }
    | |_________________^ help: try: `result.get("error").and_then(|e| e.as_str()).map_or_else(String::new, |err| err.to_lowercase())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: `llmspell-sessions` (test "policy_test") generated 8 warnings
warning: item in documentation is missing backticks
 --> llmspell-tools/tests/http_request_integration.rs:1:27
  |
1 | //! Integration tests for HttpRequestTool
  |                           ^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! Integration tests for HttpRequestTool
1 + //! Integration tests for `HttpRequestTool`
  |

warning: calling `HttpRequestConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/http_request_integration.rs:12:37
   |
12 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
   |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `HttpRequestConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/http_request_integration.rs:23:37
   |
23 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
   |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: variables can be used directly in the `format!` string
  --> llmspell-tools/tests/http_request_integration.rs:59:13
   |
59 |             eprintln!("Warning: HTTP GET test failed due to network issue: {}", e);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
59 -             eprintln!("Warning: HTTP GET test failed due to network issue: {}", e);
59 +             eprintln!("Warning: HTTP GET test failed due to network issue: {e}");
   |

warning: calling `HttpRequestConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/http_request_integration.rs:66:37
   |
66 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
   |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/http_request_integration.rs:92:37
   |
92 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
   |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:118:37
    |
118 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:143:37
    |
143 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/http_request_integration.rs:166:13
    |
166 | /             eprintln!(
167 | |                 "Warning: HTTP custom headers test failed due to network issue: {}",
168 | |                 e
169 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:177:37
    |
177 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:197:37
    |
197 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/http_request_integration.rs:224:13
    |
224 | /             eprintln!(
225 | |                 "Warning: HTTP retry logic test failed due to network issue: {}",
226 | |                 e
227 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:235:37
    |
235 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:257:37
    |
257 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: `llmspell-tools` (test "webhook_caller_integration") generated 5 warnings
warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:280:37
    |
280 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:307:37
    |
307 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:331:37
    |
331 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:357:37
    |
357 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/http_request_integration.rs:372:37
    |
372 |     let tool = HttpRequestTool::new(Default::default()).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: `llmspell-tools` (test "http_request_integration") generated 19 warnings (run `cargo clippy --fix --test "http_request_integration"` to apply 4 suggestions)
warning: using `clone` on type `ComponentId` which implements the `Copy` trait
   --> llmspell-hooks/src/artifact_hooks.rs:127:13
    |
127 |             component_id.clone(),
    |             ^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `component_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `#[warn(clippy::clone_on_copy)]` on by default

warning: items after a test module
   --> llmspell-hooks/src/builtin/caching.rs:457:1
    |
457 | mod tests {
    | ^^^^^^^^^
...
744 | impl ReplayableHook for CachingHook {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module
    = note: `#[warn(clippy::items_after_test_module)]` on by default
    = help: move the items to before the test module was defined

warning: items after a test module
   --> llmspell-hooks/src/builtin/cost_tracking.rs:675:1
    |
675 | mod tests {
    | ^^^^^^^^^
...
897 | impl ReplayableHook for CostTrackingHook {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module
    = help: move the items to before the test module was defined

warning: items after a test module
   --> llmspell-hooks/src/builtin/debugging.rs:479:1
    |
479 | mod tests {
    | ^^^^^^^^^
...
683 | impl ReplayableHook for DebuggingHook {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module
    = help: move the items to before the test module was defined

warning: unnecessary use of `get("_logging_config").is_none()`
   --> llmspell-hooks/src/builtin/logging.rs:431:35
    |
431 |         assert!(deserialized.data.get("_logging_config").is_none());
    |                 ------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                 |
    |                 help: replace it with: `!deserialized.data.contains_key("_logging_config")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_get_then_check
    = note: `#[warn(clippy::unnecessary_get_then_check)]` on by default

warning: unnecessary use of `get("_metrics_config").is_none()`
   --> llmspell-hooks/src/builtin/metrics.rs:729:35
    |
729 |         assert!(deserialized.data.get("_metrics_config").is_none());
    |                 ------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                 |
    |                 help: replace it with: `!deserialized.data.contains_key("_metrics_config")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_get_then_check

warning: unnecessary use of `get("_metrics_snapshot").is_none()`
   --> llmspell-hooks/src/builtin/metrics.rs:730:35
    |
730 |         assert!(deserialized.data.get("_metrics_snapshot").is_none());
    |                 ------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                 |
    |                 help: replace it with: `!deserialized.data.contains_key("_metrics_snapshot")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_get_then_check

warning: unnecessary use of `get("_rate_limit_config").is_none()`
   --> llmspell-hooks/src/builtin/rate_limit.rs:796:35
    |
796 |         assert!(deserialized.data.get("_rate_limit_config").is_none());
    |                 ------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                 |
    |                 help: replace it with: `!deserialized.data.contains_key("_rate_limit_config")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_get_then_check

warning: unnecessary use of `get("_rate_limit_metrics").is_none()`
   --> llmspell-hooks/src/builtin/rate_limit.rs:797:35
    |
797 |         assert!(deserialized.data.get("_rate_limit_metrics").is_none());
    |                 ------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                 |
    |                 help: replace it with: `!deserialized.data.contains_key("_rate_limit_metrics")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_get_then_check

warning: items after a test module
   --> llmspell-hooks/src/builtin/retry.rs:528:1
    |
528 | mod tests {
    | ^^^^^^^^^
...
702 | impl ReplayableHook for RetryHook {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module
    = help: move the items to before the test module was defined

warning: items after a test module
   --> llmspell-hooks/src/builtin/security.rs:671:1
    |
671 | mod tests {
    | ^^^^^^^^^
...
904 | impl ReplayableHook for SecurityHook {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module
    = help: move the items to before the test module was defined

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-hooks/src/collectors/agent_output.rs:233:9
    |
233 |         config.min_size = 10; // Lower minimum for tests
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `collectors::CollectionConfig { min_size: 10, ..Default::default() }` and removing relevant reassignments
   --> llmspell-hooks/src/collectors/agent_output.rs:232:9
    |
232 |         let mut config = CollectionConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
    = note: `#[warn(clippy::field_reassign_with_default)]` on by default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-hooks/src/collectors/agent_output.rs:271:9
    |
271 |         config.min_size = 10; // Lower minimum for tests
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `collectors::CollectionConfig { min_size: 10, ..Default::default() }` and removing relevant reassignments
   --> llmspell-hooks/src/collectors/agent_output.rs:270:9
    |
270 |         let mut config = CollectionConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-hooks/src/collectors/agent_output.rs:293:9
    |
293 |         config.min_size = 10;
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `collectors::CollectionConfig { min_size: 10, max_size: 100, ..Default::default() }` and removing relevant reassignments
   --> llmspell-hooks/src/collectors/agent_output.rs:292:9
    |
292 |         let mut config = CollectionConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-hooks/src/collectors/tool_result.rs:215:9
    |
215 |         config.min_size = 10; // Lower minimum for tests
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `collectors::CollectionConfig { min_size: 10, ..Default::default() }` and removing relevant reassignments
   --> llmspell-hooks/src/collectors/tool_result.rs:214:9
    |
214 |         let mut config = CollectionConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/web_tools_error_scenarios.rs:37:33
   |
37 |                   let error_msg = if let Some(error_str) = output_value["error"].as_str() {
   |  _________________________________^
38 | |                     error_str.to_lowercase()
39 | |                 } else if let Some(error_obj) = output_value["error"].as_object() {
40 | |                     if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
...  |
55 | |                     String::new()
56 | |                 };
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
   |
37 ~                 let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
38 +                     if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
39 +                         msg.to_lowercase()
40 +                     } else {
41 +                         serde_json::to_string(error_obj)
42 +                             .unwrap_or_default()
43 +                             .to_lowercase()
44 +                     }
45 +                 } else if let Some(result) = output_value.get("result") {
46 +                     // Some tools put error in result.error
47 +                     if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
48 +                         err.to_lowercase()
49 +                     } else {
50 +                         String::new()
51 +                     }
52 +                 } else {
53 +                     String::new()
54 ~                 }, |error_str| error_str.to_lowercase());
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/web_tools_error_scenarios.rs:40:21
   |
40 | /                     if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
41 | |                         msg.to_lowercase()
42 | |                     } else {
43 | |                         serde_json::to_string(error_obj)
44 | |                             .unwrap_or_default()
45 | |                             .to_lowercase()
46 | |                     }
   | |_____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
   |
40 ~                     error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj)
41 +                             .unwrap_or_default()
42 +                             .to_lowercase(), |msg| msg.to_lowercase())
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/web_tools_error_scenarios.rs:49:21
   |
49 | /                     if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
50 | |                         err.to_lowercase()
51 | |                     } else {
52 | |                         String::new()
53 | |                     }
   | |_____________________^ help: try: `result.get("error").and_then(|e| e.as_str()).map_or_else(String::new, |err| err.to_lowercase())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/web_tools_error_scenarios.rs:129:41
    |
129 |                           let error_msg = if let Some(error_str) = output_value["error"].as_str() {
    |  _________________________________________^
130 | |                             error_str.to_lowercase()
131 | |                         } else if let Some(error_obj) = output_value["error"].as_object() {
132 | |                             if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
...   |
140 | |                             String::new()
141 | |                         };
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
129 ~                         let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
130 +                             if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
131 +                                 msg.to_lowercase()
132 +                             } else {
133 +                                 serde_json::to_string(error_obj)
134 +                                     .unwrap_or_default()
135 +                                     .to_lowercase()
136 +                             }
137 +                         } else {
138 +                             String::new()
139 ~                         }, |error_str| error_str.to_lowercase());
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/web_tools_error_scenarios.rs:132:29
    |
132 | / ...                   if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
133 | | ...                       msg.to_lowercase()
134 | | ...                   } else {
135 | | ...                       serde_json::to_string(error_obj)
136 | | ...                           .unwrap_or_default()
137 | | ...                           .to_lowercase()
138 | | ...                   }
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
132 ~                             error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj)
133 +                                     .unwrap_or_default()
134 +                                     .to_lowercase(), |msg| msg.to_lowercase())
    |

warning: casting `i32` to `u64` may lose the sign of the value
   --> llmspell-tools/tests/web_tools_error_scenarios.rs:293:39
    |
293 |             assert_eq!(actual_status, status as u64);
    |                                       ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: module has the same name as its containing module
   --> llmspell-hooks/src/persistence/tests.rs:5:1
    |
5   | / mod tests {
6   | |     use crate::context::HookContext;
7   | |     use crate::persistence::*;
8   | |     use crate::result::HookResult;
...   |
390 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception
    = note: `#[warn(clippy::module_inception)]` on by default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-hooks/src/persistence/tests.rs:333:9
    |
333 |         options.modify_parameters = true;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `persistence::replay::ReplayOptions { modify_parameters: true, custom_parameters: Some(serde_json::json!({"test": "value"})), dry_run: false, ..Default::default() }` and removing relevant reassignments
   --> llmspell-hooks/src/persistence/tests.rs:332:9
    |
332 |         let mut options = ReplayOptions::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-bridge/tests/performance_test.rs:88:23
   |
88 |     let degradation = last_100_avg as f64 / first_100_avg as f64;
   |                       ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-bridge/tests/performance_test.rs:88:45
   |
88 |     let degradation = last_100_avg as f64 / first_100_avg as f64;
   |                                             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: `llmspell-tools` (test "web_tools_error_scenarios") generated 8 warnings (2 duplicates)
warning: casting `i32` to `u128` may lose the sign of the value
   --> llmspell-bridge/tests/performance_test.rs:188:49
    |
188 |         let avg_micros = duration.as_micros() / iterations as u128;
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: `format!(..)` appended to existing `String`
   --> llmspell-bridge/tests/performance_test.rs:295:9
    |
295 |         large_script.push_str(&format!("  ['key_{i}'] = 'value_{i}_with_some_padding',\n"));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `write!` to avoid the extra allocation
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string
    = note: `-W clippy::format-push-string` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_push_string)]`

warning: casting `usize` to `f64` causes a loss of precision on targets with 64-bit wide pointers (`usize` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-bridge/tests/performance_test.rs:299:26
    |
299 |     let script_size_mb = large_script.len() as f64 / (1024.0 * 1024.0);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: `llmspell-bridge` (test "performance_test") generated 5 warnings
warning: calling `HashCalculatorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/phase30_integration_simple.rs:47:46
   |
47 |             Box::new(HashCalculatorTool::new(Default::default())),
   |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/phase30_integration_simple.rs:112:57
    |
112 |                     let _tool = HashCalculatorTool::new(Default::default());
    |                                                         ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/phase30_integration_simple.rs:127:56
    |
127 |                     let _tool = UuidGeneratorTool::new(Default::default());
    |                                                        ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/phase30_integration_simple.rs:130:58
    |
130 |                     let _tool = TextManipulatorTool::new(Default::default());
    |                                                          ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/phase30_integration_simple.rs:210:45
    |
210 |             Box::new(UuidGeneratorTool::new(Default::default())),
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/phase30_integration_simple.rs:280:42
    |
280 |     let hasher = HashCalculatorTool::new(Default::default());
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: this function has too many lines (162/100)
   --> llmspell-tools/tests/jq_comprehensive_test.rs:7:7
    |
7   |   async fn test_comprehensive_jq_syntax() {
    |  _______^
8   | |     let tool = JsonProcessorTool::default();
...   |
191 | |     assert!(result.iter().all(|u| u["is_adult"] == true));
192 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: strict comparison of `f32` or `f64`
  --> llmspell-tools/tests/jq_comprehensive_test.rs:87:5
   |
87 |     assert_eq!(result, 30.0); // Average age
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
   = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
   = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `llmspell-tools` (test "phase30_integration_simple") generated 6 warnings
warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:108:9
    |
108 |         use async_trait::async_trait;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:9
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:43
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |                                           ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:58
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |                                                          ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:72
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |                                                                        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:110:9
    |
110 |         use llmspell_core::{BaseAgent, Tool};
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:110:29
    |
110 |         use llmspell_core::{BaseAgent, Tool};
    |                             ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:110:40
    |
110 |         use llmspell_core::{BaseAgent, Tool};
    |                                        ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:111:9
    |
111 |         use llmspell_core::{ComponentMetadata, ExecutionContext};
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:111:29
    |
111 |         use llmspell_core::{ComponentMetadata, ExecutionContext};
    |                             ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:111:48
    |
111 |         use llmspell_core::{ComponentMetadata, ExecutionContext};
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:114:9
    |
114 |         struct TestTool;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: this function has too many lines (101/100)
   --> llmspell-bridge/tests/globals_test.rs:218:11
    |
218 |       async fn test_workflow_global_lua() -> Result<()> {
    |  ___________^
219 | |         let lua = Lua::new();
220 | |         let context = setup_test_context().await;
221 | |         let registry = create_standard_registry(context.clone()).await?;
...   |
327 | |         Ok(())
328 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: long literal lacking separators
   --> llmspell-tools/tests/calculator_integration.rs:135:34
    |
135 |     assert_eq!(result["result"], 10000000000.0);
    |                                  ^^^^^^^^^^^^^ help: consider: `10_000_000_000.0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
    = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
   --> llmspell-tools/tests/calculator_integration.rs:139:34
    |
139 |     assert_eq!(result["result"], 0.000001);
    |                                  ^^^^^^^^ help: consider: `0.000_001`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/calculator_integration.rs:36:5
   |
36 | /     if let Some(result_obj) = output.get("result") {
37 | |         Ok(result_obj.clone())
38 | |     } else {
39 | |         Ok(output)
40 | |     }
   | |_____^ help: try: `output.get("result").map_or_else(|| Ok(output), |result_obj| Ok(result_obj.clone()))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
   = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`

warning: `llmspell-tools` (test "jq_comprehensive_test") generated 2 warnings
warning: `llmspell-bridge` (test "globals_test") generated 13 warnings
warning: this function has too many lines (102/100)
   --> llmspell-tools/tests/security_hardening_test.rs:13:7
    |
13  |   async fn test_calculator_dos_protection_comprehensive() {
    |  _______^
14  | |     let tool = CalculatorTool::new();
...   |
132 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: `llmspell-tools` (test "calculator_integration") generated 3 warnings
warning: `llmspell-hooks` (lib test) generated 17 warnings (run `cargo clippy --fix --lib -p llmspell-hooks --tests` to apply 6 suggestions)
warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/api_key_integration.rs:178:22
    |
178 |         let key_id = format!("tool_{}", service);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
178 -         let key_id = format!("tool_{}", service);
178 +         let key_id = format!("tool_{service}");
    |

warning: `llmspell-tools` (test "security_hardening_test") generated 1 warning
warning: useless conversion to the same type: `llmspell_workflows::WorkflowStep`
   --> llmspell-testing/benches/integrated_overhead.rs:397:37
    |
397 |                         steps: vec![step.into()],
    |                                     ^^^^^^^^^^^ help: consider removing `.into()`: `step`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
    = note: `#[warn(clippy::useless_conversion)]` on by default

warning: `llmspell-testing` (bench "integrated_overhead") generated 1 warning (run `cargo clippy --fix --bench "integrated_overhead"` to apply 1 suggestion)
warning: calling `EventAttributes::default()` is more clear than this expression
   --> llmspell-tools/src/fs/file_watcher.rs:592:20
    |
592 |             attrs: Default::default(),
    |                    ^^^^^^^^^^^^^^^^^^ help: try: `EventAttributes::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/lifecycle/hook_integration.rs:784:34
    |
784 |             Ok(AgentOutput::text(format!("Error handled: {}", error)))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
784 -             Ok(AgentOutput::text(format!("Error handled: {}", error)))
784 +             Ok(AgentOutput::text(format!("Error handled: {error}")))
    |

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1008:9
     |
1008 | /         struct PrivilegedMockTool {
1009 | |             metadata: ComponentMetadata,
1010 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
     = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1012:9
     |
1012 | /         impl PrivilegedMockTool {
1013 | |             fn new() -> Self {
1014 | |                 Self {
1015 | |                     metadata: ComponentMetadata::new(
...    |
1021 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1024:9
     |
1024 | /         impl BaseAgent for PrivilegedMockTool {
1025 | |             fn metadata(&self) -> &ComponentMetadata {
1026 | |                 &self.metadata
...    |
1047 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1050:9
     |
1050 | /         impl Tool for PrivilegedMockTool {
1051 | |             fn category(&self) -> ToolCategory {
1052 | |                 ToolCategory::System
...    |
1070 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: variables can be used directly in the `format!` string
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1045:38
     |
1045 |                 Ok(AgentOutput::text(format!("Error handled: {}", error)))
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1045 -                 Ok(AgentOutput::text(format!("Error handled: {}", error)))
1045 +                 Ok(AgentOutput::text(format!("Error handled: {error}")))
     |

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1146:9
     |
1146 | /         struct PrivilegedMockTool {
1147 | |             metadata: ComponentMetadata,
1148 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1150:9
     |
1150 | /         impl PrivilegedMockTool {
1151 | |             fn new() -> Self {
1152 | |                 Self {
1153 | |                     metadata: ComponentMetadata::new(
...    |
1159 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1162:9
     |
1162 | /         impl BaseAgent for PrivilegedMockTool {
1163 | |             fn metadata(&self) -> &ComponentMetadata {
1164 | |                 &self.metadata
...    |
1185 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1188:9
     |
1188 | /         impl Tool for PrivilegedMockTool {
1189 | |             fn category(&self) -> ToolCategory {
1190 | |                 ToolCategory::System
...    |
1208 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: variables can be used directly in the `format!` string
    --> llmspell-tools/src/lifecycle/hook_integration.rs:1183:38
     |
1183 |                 Ok(AgentOutput::text(format!("Error handled: {}", error)))
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
     |
1183 -                 Ok(AgentOutput::text(format!("Error handled: {}", error)))
1183 +                 Ok(AgentOutput::text(format!("Error handled: {error}")))
     |

warning: item in documentation is missing backticks
 --> llmspell-tools/tests/sitemap_crawler_integration.rs:1:36
  |
1 | //! ABOUTME: Integration tests for SitemapCrawlerTool
  |                                    ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! ABOUTME: Integration tests for SitemapCrawlerTool
1 + //! ABOUTME: Integration tests for `SitemapCrawlerTool`
  |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
  --> llmspell-tools/tests/sitemap_crawler_integration.rs:23:5
   |
23 | /     match tool.execute(input, context).await {
24 | |         Ok(output) => {
25 | |             assert_success_output(&output, &["operation", "result"]);
...  |
40 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
   = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
   |
23 ~     if let Ok(output) = tool.execute(input, context).await {
24 +         assert_success_output(&output, &["operation", "result"]);
25 + 
26 +         let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
27 +         let result = &output_value["result"];
28 + 
29 +         // Should have URLs from sitemap
30 +         assert!(result["urls"].is_array() || result["pages"].is_array());
31 +         assert!(
32 +             result["url_count"].as_u64().unwrap_or(0) > 0
33 +                 || result["total_urls"].as_u64().unwrap_or(0) > 0
34 +         );
35 +     } else {
36 +         // Some sites might block automated access, which is okay for tests
37 +     }
   |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
  --> llmspell-tools/tests/sitemap_crawler_integration.rs:83:5
   |
83 | /     match tool.execute(input, context).await {
84 | |         Ok(output) => {
85 | |             let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
86 | |             if output_value["success"].as_bool().unwrap() {
...  |
97 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try
   |
83 ~     if let Ok(output) = tool.execute(input, context).await {
84 +         let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
85 +         if output_value["success"].as_bool().unwrap() {
86 +             let result = &output_value["result"];
87 +             // If successful, check filters were applied
88 +             if let Some(urls) = result["urls"].as_array() {
89 +                 assert!(urls.len() <= 10);
90 +             }
91 +         }
92 +     } else {
93 +         // Site might not have sitemap or block access
94 +     }
   |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> llmspell-tools/tests/sitemap_crawler_integration.rs:113:5
    |
113 | /     match tool.execute(input, context).await {
114 | |         Ok(output) => {
115 | |             let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
...   |
122 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try
    |
113 ~     if let Ok(output) = tool.execute(input, context).await {
114 +         let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
115 +         // Should respect depth limit
116 +         assert!(output_value["success"].as_bool().is_some());
117 +     } else {
118 +         // Acceptable if no sitemap exists
119 +     }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/sitemap_crawler_integration.rs:185:13
    |
185 | /             assert!(
186 | |                 error_str.contains("timeout")
187 | |                     || error_str.contains("elapsed")
188 | |                     || error_str.contains("timed out")
...   |
193 | |                 error_str
194 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: binding's name is too similar to existing binding
   --> llmspell-bridge/src/event_bridge.rs:286:13
    |
286 |         let received = tokio::time::timeout(std::time::Duration::from_millis(100), receiver.recv())
    |             ^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-bridge/src/event_bridge.rs:270:26
    |
270 |         let (sub_id, mut receiver) = bridge
    |                          ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:744:27
    |
744 |             ("file_path", &file_path.to_str().unwrap()),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `file_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `-W clippy::needless-borrow` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrow)]`

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:765:27
    |
765 |             ("file_path", &file_path.to_str().unwrap()),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `file_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:791:27
    |
791 |             ("file_path", &file_path.to_str().unwrap()),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `file_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:809:29
    |
809 |             ("source_path", &source_path.to_str().unwrap()),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `source_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:810:29
    |
810 |             ("target_path", &target_path.to_str().unwrap()),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `target_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:833:29
    |
833 |             ("source_path", &source_path.to_str().unwrap()),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `source_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:834:29
    |
834 |             ("target_path", &target_path.to_str().unwrap()),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `target_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/media/audio_processor.rs:899:63
    |
899 |         let input = create_test_tool_input(vec![("file_path", &file_path.to_str().unwrap())]);
    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `file_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: `llmspell-tools` (test "sitemap_crawler_integration") generated 7 warnings (2 duplicates) (run `cargo clippy --fix --test "sitemap_crawler_integration"` to apply 5 suggestions)
warning: strict comparison of `f32` or `f64`
   --> llmspell-tools/src/media/image_processor.rs:916:9
    |
916 |         assert_eq!(square.aspect_ratio(), 1.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-tools/tests/web_search_integration.rs:204:5
    |
204 |     use llmspell_core::traits::tool::ToolCategory;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/registry.rs:563:64
    |
563 |                 metadata: ComponentMetadata::new(name.clone(), format!("Mock tool: {}", name)),
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
563 -                 metadata: ComponentMetadata::new(name.clone(), format!("Mock tool: {}", name)),
563 +                 metadata: ComponentMetadata::new(name.clone(), format!("Mock tool: {name}")),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/registry.rs:590:34
    |
590 |             Ok(AgentOutput::text(format!("Error: {}", error)))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
590 -             Ok(AgentOutput::text(format!("Error: {}", error)))
590 +             Ok(AgentOutput::text(format!("Error: {error}")))
    |

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-tools/src/registry.rs:697:9
    |
697 | /         struct InvalidTool {
698 | |             metadata: ComponentMetadata,
699 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-tools/src/registry.rs:701:9
    |
701 | /         impl InvalidTool {
702 | |             fn new() -> Self {
703 | |                 // Create invalid metadata with empty name
704 | |                 let mut metadata = ComponentMetadata::new("".to_string(), "".to_string());
...   |
708 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-tools/src/registry.rs:711:9
    |
711 | /         impl BaseAgent for InvalidTool {
712 | |             fn metadata(&self) -> &ComponentMetadata {
713 | |                 &self.metadata
...   |
731 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-tools/src/registry.rs:734:9
    |
734 | /         impl Tool for InvalidTool {
735 | |             fn category(&self) -> ToolCategory {
736 | |                 ToolCategory::Utility
...   |
746 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: empty String is being created manually
   --> llmspell-tools/src/registry.rs:704:59
    |
704 |                 let mut metadata = ComponentMetadata::new("".to_string(), "".to_string());
    |                                                           ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new
    = note: `-W clippy::manual-string-new` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::manual_string_new)]`

warning: empty String is being created manually
   --> llmspell-tools/src/registry.rs:704:75
    |
704 |                 let mut metadata = ComponentMetadata::new("".to_string(), "".to_string());
    |                                                                           ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

warning: empty String is being created manually
   --> llmspell-tools/src/registry.rs:705:33
    |
705 |                 metadata.name = "".to_string(); // Force empty name
    |                                 ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/registry.rs:729:38
    |
729 |                 Ok(AgentOutput::text(format!("Error: {}", error)))
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
729 -                 Ok(AgentOutput::text(format!("Error: {}", error)))
729 +                 Ok(AgentOutput::text(format!("Error: {error}")))
    |

warning: empty String is being created manually
   --> llmspell-tools/src/registry.rs:744:33
    |
744 |                 ToolSchema::new("".to_string(), "".to_string()) // Empty name and description
    |                                 ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

warning: empty String is being created manually
   --> llmspell-tools/src/registry.rs:744:49
    |
744 |                 ToolSchema::new("".to_string(), "".to_string()) // Empty name and description
    |                                                 ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/registry.rs:971:17
    |
971 |                 format!("test_tool_{}", i),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
971 -                 format!("test_tool_{}", i),
971 +                 format!("test_tool_{i}"),
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/registry.rs:976:27
    |
976 |                 .register(format!("test_tool_{}", i), tool)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
976 -                 .register(format!("test_tool_{}", i), tool)
976 +                 .register(format!("test_tool_{i}"), tool)
    |

warning: `llmspell-tools` (test "web_search_integration") generated 1 warning
warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/resource_limited.rs:255:34
    |
255 |             Ok(AgentOutput::text(format!("Error: {}", error)))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
255 -             Ok(AgentOutput::text(format!("Error: {}", error)))
255 +             Ok(AgentOutput::text(format!("Error: {error}")))
    |

warning: item in documentation is missing backticks
 --> llmspell-bridge/tests/session_global_test.rs:1:36
  |
1 | //! ABOUTME: Integration tests for SessionGlobal functionality
  |                                    ^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! ABOUTME: Integration tests for SessionGlobal functionality
1 + //! ABOUTME: Integration tests for `SessionGlobal` functionality
  |

warning: calling `FileOperationsConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_sandbox_escape_tests.rs:13:45
   |
13 |     let file_tool = FileOperationsTool::new(Default::default());
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `FileWatcherConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:38:37
   |
38 |     let tool = FileWatcherTool::new(Default::default(), sandbox.clone());
   |                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `FileConverterConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:45:39
   |
45 |     let tool = FileConverterTool::new(Default::default(), sandbox.clone());
   |                                       ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:51:36
   |
51 |     let tool = FileSearchTool::new(Default::default(), sandbox);
   |                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:59:43
   |
59 |     let tool = EnvironmentReaderTool::new(Default::default());
   |                                           ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_sandbox_escape_tests.rs:57:45
   |
57 |     let file_tool = FileOperationsTool::new(Default::default());
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:65:41
   |
65 |     let tool = ProcessExecutorTool::new(Default::default());
   |                                         ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:71:40
   |
71 |     let tool = ServiceCheckerTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:77:39
   |
77 |     let tool = SystemMonitorTool::new(Default::default());
   |                                       ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `AudioProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:85:40
   |
85 |     let tool = AudioProcessorTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `AudioProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `VideoProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:91:40
   |
91 |     let tool = VideoProcessorTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `VideoProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ImageProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:97:40
   |
97 |     let tool = ImageProcessorTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `ImageProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:104:35
    |
104 |     let tool = WebSearchTool::new(Default::default()).unwrap();
    |                                   ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_sandbox_escape_tests.rs:83:49
   |
83 |     let process_tool = ProcessExecutorTool::new(Default::default());
   |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:112:40
    |
112 |     let tool = HashCalculatorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:118:41
    |
118 |     let tool = TextManipulatorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:124:39
    |
124 |     let tool = UuidGeneratorTool::new(Default::default());
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:137:39
    |
137 |         Box::new(FileWatcherTool::new(Default::default(), sandbox.clone())),
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:138:41
    |
138 |         Box::new(FileConverterTool::new(Default::default(), sandbox.clone())),
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:139:38
    |
139 |         Box::new(FileSearchTool::new(Default::default(), sandbox)),
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:140:45
    |
140 |         Box::new(EnvironmentReaderTool::new(Default::default())),
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:141:43
    |
141 |         Box::new(ProcessExecutorTool::new(Default::default())),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:142:42
    |
142 |         Box::new(ServiceCheckerTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:143:41
    |
143 |         Box::new(SystemMonitorTool::new(Default::default())),
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `AudioProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:144:42
    |
144 |         Box::new(AudioProcessorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `AudioProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `VideoProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:145:42
    |
145 |         Box::new(VideoProcessorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `VideoProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ImageProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:146:42
    |
146 |         Box::new(ImageProcessorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `ImageProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:147:37
    |
147 |         Box::new(WebSearchTool::new(Default::default()).unwrap()),
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:148:42
    |
148 |         Box::new(HashCalculatorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:149:43
    |
149 |         Box::new(TextManipulatorTool::new(Default::default())),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:150:41
    |
150 |         Box::new(UuidGeneratorTool::new(Default::default())),
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:136:43
    |
136 |     let search_tool = FileSearchTool::new(Default::default(), sandbox);
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:173:47
    |
173 |     let monitor_tool = SystemMonitorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:174:40
    |
174 |     let tool = HashCalculatorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:206:45
    |
206 |     let file_tool = FileOperationsTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:246:49
    |
246 |     let process_tool = ProcessExecutorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:195:39
    |
195 |     let tool = UuidGeneratorTool::new(Default::default());
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:215:35
    |
215 |     let tool = WebSearchTool::new(Default::default()).unwrap();
    |                                   ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:253:38
    |
253 |         let _ = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:254:40
    |
254 |         let _ = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:255:37
    |
255 |         let _ = FileSearchTool::new(Default::default(), sandbox);
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:256:44
    |
256 |         let _ = EnvironmentReaderTool::new(Default::default());
    |                                            ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:257:42
    |
257 |         let _ = ProcessExecutorTool::new(Default::default());
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:258:41
    |
258 |         let _ = ServiceCheckerTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:259:40
    |
259 |         let _ = SystemMonitorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `AudioProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:260:41
    |
260 |         let _ = AudioProcessorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `AudioProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `VideoProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:261:41
    |
261 |         let _ = VideoProcessorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `VideoProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ImageProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:262:41
    |
262 |         let _ = ImageProcessorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `ImageProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:263:36
    |
263 |         let _ = WebSearchTool::new(Default::default()).unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:264:41
    |
264 |         let _ = HashCalculatorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:265:42
    |
265 |         let _ = TextManipulatorTool::new(Default::default());
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:266:40
    |
266 |         let _ = UuidGeneratorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: `llmspell-bridge` (test "session_global_test") generated 1 warning (run `cargo clippy --fix --test "session_global_test"` to apply 1 suggestion)
warning: `llmspell-tools` (test "security_sandbox_escape_tests") generated 7 warnings
warning: `llmspell-tools` (test "remaining_tools_basic") generated 45 warnings
warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/state/tool_state.rs:528:34
    |
528 |             Ok(AgentOutput::text(format!("Error: {}", error)))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
528 -             Ok(AgentOutput::text(format!("Error: {}", error)))
528 +             Ok(AgentOutput::text(format!("Error: {error}")))
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-tools/src/state/tool_state.rs:568:13
    |
568 |             ToolStateManagerHolder::set_state_manager(self, state_manager)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `ToolStateManagerHolder::set_state_manager(self, state_manager);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
    = note: `-W clippy::semicolon-if-nothing-returned` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::semicolon_if_nothing_returned)]`

warning: unused import: `std::sync::Arc`
 --> llmspell-bridge/benches/session_bench.rs:9:5
  |
9 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
  --> llmspell-bridge/benches/session_bench.rs:28:20
   |
28 |             engine.execute(lua_code).await.unwrap()
   |                    ^^^^^^^
   |
help: there is a method `execute_script` with a similar name
   |
28 |             engine.execute_script(lua_code).await.unwrap()
   |                           +++++++

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_injection_attack_tests.rs:69:44
   |
69 |     let json_tool = JsonProcessorTool::new(Default::default());
   |                                            ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
  --> llmspell-bridge/benches/session_bench.rs:47:16
   |
47 |         engine.execute(create_code).await.unwrap()
   |                ^^^^^^^
   |
help: there is a method `execute_script` with a similar name
   |
47 |         engine.execute_script(create_code).await.unwrap()
   |                       +++++++

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_injection_attack_tests.rs:118:31
    |
118 |         GraphQLQueryTool::new(Default::default()).expect("Failed to create GraphQL tool");
    |                               ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:179:52
    |
179 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_injection_attack_tests.rs:196:49
    |
196 |     let process_tool = ProcessExecutorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:225:52
    |
225 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_injection_attack_tests.rs:285:42
    |
285 |     let http_tool = HttpRequestTool::new(Default::default()).expect("Failed to create HTTP tool");
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:318:52
    |
318 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_injection_attack_tests.rs:334:47
    |
334 |     let env_tool = EnvironmentReaderTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:360:52
    |
360 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
  --> llmspell-bridge/benches/session_bench.rs:68:20
   |
68 |             engine.execute(&save_code).await.unwrap()
   |                    ^^^^^^^
   |
help: there is a method `execute_script` with a similar name
   |
68 |             engine.execute_script(&save_code).await.unwrap()
   |                           +++++++

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
  --> llmspell-bridge/benches/session_bench.rs:75:20
   |
75 |             engine.execute(&load_code).await.unwrap()
   |                    ^^^^^^^
   |
help: there is a method `execute_script` with a similar name
   |
75 |             engine.execute_script(&load_code).await.unwrap()
   |                           +++++++

warning: `llmspell-tools` (test "security_injection_attack_tests") generated 9 warnings
error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
  --> llmspell-bridge/benches/session_bench.rs:94:16
   |
94 |         engine.execute(create_code).await.unwrap()
   |                ^^^^^^^
   |
help: there is a method `execute_script` with a similar name
   |
94 |         engine.execute_script(create_code).await.unwrap()
   |                       +++++++

warning: single-character string constant used as pattern
  --> llmspell-tools/tests/hook_integration_tests.rs:52:34
   |
52 |     assert!(output.text.contains("4"));
   |                                  ^^^ help: consider using a `char`: `'4'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:262:23
    |
262 |     let overhead_ms = duration_with_hooks.as_millis() as f64 - duration_no_hooks.as_millis() as f64;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:262:64
    |
262 |     let overhead_ms = duration_with_hooks.as_millis() as f64 - duration_no_hooks.as_millis() as f64;
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:264:24
    |
264 |         (overhead_ms / duration_no_hooks.as_millis() as f64) * 100.0
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:269:5
    |
269 | /     println!(
270 | |         "No hooks: {:?}, With hooks: {:?}, Overhead: {:.2}%",
271 | |         duration_no_hooks, duration_with_hooks, overhead_percent
272 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:275:5
    |
275 | /     assert!(
276 | |         overhead_percent < 20.0,
277 | |         "Hook overhead {:.2}% exceeds 20% threshold",
278 | |         overhead_percent
279 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:299:38
    |
299 |         let input = AgentInput::text(format!("Circuit breaker test {}", i)).with_parameter(
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
299 -         let input = AgentInput::text(format!("Circuit breaker test {}", i)).with_parameter(
299 +         let input = AgentInput::text(format!("Circuit breaker test {i}")).with_parameter(
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:353:38
    |
353 |         let input = AgentInput::text(format!("Test {}", name)).with_parameter("parameters", params);
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
353 -         let input = AgentInput::text(format!("Test {}", name)).with_parameter("parameters", params);
353 +         let input = AgentInput::text(format!("Test {name}")).with_parameter("parameters", params);
    |

warning: single-character string constant used as pattern
   --> llmspell-tools/tests/hook_integration_tests.rs:413:34
    |
413 |     assert!(output.text.contains("4"));
    |                                  ^^^ help: consider using a `char`: `'4'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:131:20
    |
131 |             engine.execute(&store_code).await.unwrap()
    |                    ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
131 |             engine.execute_script(&store_code).await.unwrap()
    |                           +++++++

warning: single-character string constant used as pattern
   --> llmspell-tools/src/system/system_monitor.rs:797:38
    |
797 |         assert!(result.text.contains("%"));
    |                                      ^^^ help: consider using a `char`: `'%'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
    = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:138:20
    |
138 |             engine.execute(&list_code).await.unwrap()
    |                    ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
138 |             engine.execute_script(&list_code).await.unwrap()
    |                           +++++++

warning: strict comparison of `f32` or `f64`
   --> llmspell-tools/src/system/system_monitor.rs:921:9
    |
921 |         assert_eq!(stats.cpu_usage_percent, 0.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:145:20
    |
145 |             engine.execute(&query_code).await.unwrap()
    |                    ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
145 |             engine.execute_script(&query_code).await.unwrap()
    |                           +++++++

warning: `llmspell-tools` (test "hook_integration_tests") generated 9 warnings (run `cargo clippy --fix --test "hook_integration_tests"` to apply 6 suggestions)
error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:178:28
    |
178 |                     engine.execute(&lua_code).await.unwrap()
    |                            ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
178 |                     engine.execute_script(&lua_code).await.unwrap()
    |                                   +++++++

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/calculator.rs:819:22
    |
819 |             .map(|i| format!("{}", i))
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
819 -             .map(|i| format!("{}", i))
819 +             .map(|i| format!("{i}"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/calculator.rs:926:13
    |
926 | /             assert_eq!(
927 | |                 output["success"], false,
928 | |                 "Expression '{}' should fail",
929 | |                 expr
930 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/calculator.rs:932:13
    |
932 | /             assert!(
933 | |                 error_msg.contains("consecutive")
934 | |                     || error_msg.contains("stack overflow")
935 | |                     || error_msg.contains("complex"),
936 | |                 "Expression '{}' should have appropriate error message",
937 | |                 expr
938 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:188:14
    |
187 | /         engine
188 | |             .execute(r#"return Session.create({ name = "batch_artifact_test" })"#)
    | |_____________-^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
188 |             .execute_script(r#"return Session.create({ name = "batch_artifact_test" })"#)
    |                     +++++++

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:219:28
    |
219 |                     engine.execute(&store_batch_code).await.unwrap()
    |                            ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
219 |                     engine.execute_script(&store_batch_code).await.unwrap()
    |                                   +++++++

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:237:18
    |
236 | /             engine
237 | |                 .execute(r#"return Session.create({ name = "perf_test" })"#)
    | |_________________-^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
237 |                 .execute_script(r#"return Session.create({ name = "perf_test" })"#)
    |                         +++++++

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/globals/injection.rs:212:9
    |
212 |         assert_eq!(cache.hit_rate(), 0.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/globals/injection.rs:219:9
    |
219 |         assert_eq!(cache.hit_rate(), 0.7);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/globals/injection.rs:223:9
    |
223 |         assert_eq!(cache.hit_rate(), 0.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:247:14
    |
246 | /         engine
247 | |             .execute(r#"return Session.create({ name = "save_load_test" })"#)
    | |_____________-^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
247 |             .execute_script(r#"return Session.create({ name = "save_load_test" })"#)
    |                     +++++++

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:257:20
    |
257 |             engine.execute(&save_code).await.unwrap()
    |                    ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
257 |             engine.execute_script(&save_code).await.unwrap()
    |                           +++++++

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:266:20
    |
266 |             engine.execute(&load_code).await.unwrap()
    |                    ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
266 |             engine.execute_script(&load_code).await.unwrap()
    |                           +++++++

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/util/hash_calculator.rs:396:22
    |
396 |             ("file", &file_path.to_str().unwrap()),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `file_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

error[E0599]: no method named `execute` found for struct `llmspell_bridge::lua::LuaEngine` in the current scope
   --> llmspell-bridge/benches/session_bench.rs:287:20
    |
287 |             engine.execute(&store_text_code).await.unwrap()
    |                    ^^^^^^^
    |
help: there is a method `execute_script` with a similar name
    |
287 |             engine.execute_script(&store_text_code).await.unwrap()
    |                           +++++++

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-tools/src/util/hash_calculator.rs:492:22
    |
492 |             ("file", &file_path.to_str().unwrap()),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `file_path.to_str().unwrap()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

For more information about this error, try `rustc --explain E0599`.
warning: `llmspell-bridge` (bench "session_bench") generated 1 warning
error: could not compile `llmspell-bridge` (bench "session_bench") due to 16 previous errors; 1 warning emitted
warning: build failed, waiting for other jobs to finish...
warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/text_manipulator.rs:440:9
    |
440 | /         assert!(
441 | |             err.to_string().contains("Replace operation requires"),
442 | |             "Error was: {}",
443 | |             err
444 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/src/hook_bridge.rs:486:9
    |
486 |         struct TestAdapter;
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/src/hook_bridge.rs:487:9
    |
487 | /         impl HookAdapter for TestAdapter {
488 | |             type Context = Box<dyn std::any::Any>;
489 | |             type Result = Box<dyn std::any::Any>;
...   |
498 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/text_manipulator.rs:505:42
    |
505 |             let input = AgentInput::text(format!("test {}", operation))
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
505 -             let input = AgentInput::text(format!("test {}", operation))
505 +             let input = AgentInput::text(format!("test {operation}"))
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/text_manipulator.rs:514:21
    |
514 | /                     assert_eq!(
515 | |                         result_text, expected,
516 | |                         "Operation {} produced unexpected result",
517 | |                         operation
518 | |                     );
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/text_manipulator.rs:521:21
    |
521 |                     panic!("Operation {} failed with error: {}", operation, e);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
521 -                     panic!("Operation {} failed with error: {}", operation, e);
521 +                     panic!("Operation {operation} failed with error: {e}");
    |

warning: single-character string constant used as pattern
   --> llmspell-tools/src/util/uuid_generator.rs:616:29
    |
616 |         assert!(id.contains("_")); // Contains timestamp separator
    |                             ^^^ help: consider using a `char`: `'_'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/src/util/uuid_generator.rs:675:13
    |
675 |             assert!(result.is_ok(), "Format {} failed", format);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
675 -             assert!(result.is_ok(), "Format {} failed", format);
675 +             assert!(result.is_ok(), "Format {format} failed");
    |

warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers
  --> llmspell-tools/tests/hook_performance_test.rs:93:45
   |
93 |         let avg_no_hooks = total_no_hooks / ITERATIONS as u32;
   |                                             ^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
   |
93 -         let avg_no_hooks = total_no_hooks / ITERATIONS as u32;
93 +         let avg_no_hooks = total_no_hooks / u32::try_from(ITERATIONS);
   |

warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers
   --> llmspell-tools/tests/hook_performance_test.rs:106:49
    |
106 |         let avg_with_hooks = total_with_hooks / ITERATIONS as u32;
    |                                                 ^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
106 -         let avg_with_hooks = total_with_hooks / ITERATIONS as u32;
106 +         let avg_with_hooks = total_with_hooks / u32::try_from(ITERATIONS);
    |

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:109:31
    |
109 |         let overhead_micros = avg_with_hooks.as_micros() as f64 - avg_no_hooks.as_micros() as f64;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:109:67
    |
109 |         let overhead_micros = avg_with_hooks.as_micros() as f64 - avg_no_hooks.as_micros() as f64;
    |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:111:32
    |
111 |             (overhead_micros / avg_no_hooks.as_micros() as f64) * 100.0
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `i32` to `u32` may lose the sign of the value
   --> llmspell-tools/tests/hook_performance_test.rs:158:41
    |
158 |     let avg_duration = total_duration / iterations as u32;
    |                                         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: casting `i32` to `u32` may lose the sign of the value
   --> llmspell-tools/tests/hook_performance_test.rs:199:41
    |
199 |     let avg_duration = total_duration / iterations as u32;
    |                                         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:307:9
    |
307 |         duration_with_audit.as_millis() as f64 - duration_no_audit.as_millis() as f64;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:307:50
    |
307 |         duration_with_audit.as_millis() as f64 - duration_no_audit.as_millis() as f64;
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:309:28
    |
309 |         (overhead_millis / duration_no_audit.as_millis() as f64) * 100.0
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: empty String is being created manually
   --> llmspell-tools/src/web/web_scraper.rs:474:19
    |
474 |             text: "".to_string(),
    |                   ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

warning: empty String is being created manually
   --> llmspell-tools/src/web/web_scraper.rs:497:19
    |
497 |             text: "".to_string(),
    |                   ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

warning: `llmspell-tools` (test "hook_performance_test") generated 10 warnings
warning: calling `ProviderManagerConfig::default()` is more clear than this expression
  --> llmspell-bridge/tests/lua_hook_enhanced.rs:14:51
   |
14 |     let providers = Arc::new(ProviderManager::new(Default::default()).await.unwrap());
   |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-bridge/src/agents.rs:278:13
    |
278 |             eprintln!("Agent creation failed: {:?}", e);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
278 -             eprintln!("Agent creation failed: {:?}", e);
278 +             eprintln!("Agent creation failed: {e:?}");
    |

warning: `llmspell-bridge` (test "lua_hook_enhanced") generated 1 warning
warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:19:9
   |
19 | /         b.iter(|| {
20 | |             rt.block_on(async {
21 | |                 let params = json!({
22 | |                     "name": "test_workflow",
...  |
32 | |             })
33 | |         })
   | |__________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
   = note: `-W clippy::semicolon-if-nothing-returned` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::semicolon_if_nothing_returned)]`
help: add a `;` here
   |
19 ~         b.iter(|| {
20 +             rt.block_on(async {
21 +                 let params = json!({
22 +                     "name": "test_workflow",
23 +                     "steps": [
24 +                         {"name": "step1", "tool": "mock_tool"}
25 +                     ]
26 +                 });
27 +                 let id = bridge
28 +                     .create_workflow("sequential", black_box(params))
29 +                     .await
30 +                     .unwrap();
31 +                 black_box(id);
32 +             })
33 +         });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:20:13
   |
20 | /             rt.block_on(async {
21 | |                 let params = json!({
22 | |                     "name": "test_workflow",
23 | |                     "steps": [
...  |
31 | |                 black_box(id);
32 | |             })
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
20 ~             rt.block_on(async {
21 +                 let params = json!({
22 +                     "name": "test_workflow",
23 +                     "steps": [
24 +                         {"name": "step1", "tool": "mock_tool"}
25 +                     ]
26 +                 });
27 +                 let id = bridge
28 +                     .create_workflow("sequential", black_box(params))
29 +                     .await
30 +                     .unwrap();
31 +                 black_box(id);
32 +             });
   |

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/orchestration.rs:705:9
    |
705 |         assert_eq!(plan.success_criteria.min_success_rate, 0.8);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:37:9
   |
37 | /         b.iter(|| {
38 | |             rt.block_on(async {
39 | |                 let params = json!({
40 | |                     "name": "test_workflow",
...  |
51 | |             })
52 | |         })
   | |__________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
37 ~         b.iter(|| {
38 +             rt.block_on(async {
39 +                 let params = json!({
40 +                     "name": "test_workflow",
41 +                     "branches": [
42 +                         {"name": "branch1", "steps": []}
43 +                     ],
44 +                     "max_concurrency": 2
45 +                 });
46 +                 let id = bridge
47 +                     .create_workflow("parallel", black_box(params))
48 +                     .await
49 +                     .unwrap();
50 +                 black_box(id);
51 +             })
52 +         });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:38:13
   |
38 | /             rt.block_on(async {
39 | |                 let params = json!({
40 | |                     "name": "test_workflow",
41 | |                     "branches": [
...  |
50 | |                 black_box(id);
51 | |             })
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
38 ~             rt.block_on(async {
39 +                 let params = json!({
40 +                     "name": "test_workflow",
41 +                     "branches": [
42 +                         {"name": "branch1", "steps": []}
43 +                     ],
44 +                     "max_concurrency": 2
45 +                 });
46 +                 let id = bridge
47 +                     .create_workflow("parallel", black_box(params))
48 +                     .await
49 +                     .unwrap();
50 +                 black_box(id);
51 +             });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:62:9
   |
62 | /         b.iter(|| {
63 | |             rt.block_on(async {
64 | |                 let types = bridge.list_workflow_types();
65 | |                 black_box(types);
66 | |             })
67 | |         })
   | |__________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
62 ~         b.iter(|| {
63 +             rt.block_on(async {
64 +                 let types = bridge.list_workflow_types();
65 +                 black_box(types);
66 +             })
67 +         });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:63:13
   |
63 | /             rt.block_on(async {
64 | |                 let types = bridge.list_workflow_types();
65 | |                 black_box(types);
66 | |             })
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
63 ~             rt.block_on(async {
64 +                 let types = bridge.list_workflow_types();
65 +                 black_box(types);
66 +             });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:71:9
   |
71 | /         b.iter(|| {
72 | |             rt.block_on(async {
73 | |                 let info = bridge.get_workflow_info("sequential").unwrap();
74 | |                 black_box(info);
75 | |             })
76 | |         })
   | |__________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
71 ~         b.iter(|| {
72 +             rt.block_on(async {
73 +                 let info = bridge.get_workflow_info("sequential").unwrap();
74 +                 black_box(info);
75 +             })
76 +         });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:72:13
   |
72 | /             rt.block_on(async {
73 | |                 let info = bridge.get_workflow_info("sequential").unwrap();
74 | |                 black_box(info);
75 | |             })
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
72 ~             rt.block_on(async {
73 +                 let info = bridge.get_workflow_info("sequential").unwrap();
74 +                 black_box(info);
75 +             });
   |

warning: consider adding a `;` to the last statement for consistent formatting
  --> llmspell-bridge/benches/workflow_bridge_bench.rs:93:9
   |
93 | /         b.iter(|| {
94 | |             let params = json_to_workflow_params(black_box(json_params.clone())).unwrap();
95 | |             black_box(params);
96 | |         })
   | |__________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
   |
93 ~         b.iter(|| {
94 +             let params = json_to_workflow_params(black_box(json_params.clone())).unwrap();
95 +             black_box(params);
96 +         });
   |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:117:9
    |
117 | /         b.iter(|| {
118 | |             rt.block_on(async {
119 | |                 let input = json!({"test": "data"});
120 | |                 let result = bridge
...   |
125 | |             })
126 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
117 ~         b.iter(|| {
118 +             rt.block_on(async {
119 +                 let input = json!({"test": "data"});
120 +                 let result = bridge
121 +                     .execute_workflow(&workflow_id, black_box(input))
122 +                     .await
123 +                     .unwrap();
124 +                 black_box(result);
125 +             })
126 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:118:13
    |
118 | /             rt.block_on(async {
119 | |                 let input = json!({"test": "data"});
120 | |                 let result = bridge
121 | |                     .execute_workflow(&workflow_id, black_box(input))
...   |
124 | |                 black_box(result);
125 | |             })
    | |______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
118 ~             rt.block_on(async {
119 +                 let input = json!({"test": "data"});
120 +                 let result = bridge
121 +                     .execute_workflow(&workflow_id, black_box(input))
122 +                     .await
123 +                     .unwrap();
124 +                 black_box(result);
125 +             });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:137:9
    |
137 | /         b.iter(|| {
138 | |             rt.block_on(async {
139 | |                 // Complete cycle: create, execute, get status
140 | |                 let params = json!({
...   |
159 | |             })
160 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
137 ~         b.iter(|| {
138 +             rt.block_on(async {
139 +                 // Complete cycle: create, execute, get status
140 +                 let params = json!({
141 +                     "name": "overhead_test",
142 +                     "steps": [{"name": "step1", "tool": "mock"}]
143 +                 });
144 + 
145 +                 let start = std::time::Instant::now();
146 + 
147 +                 // Create workflow
148 +                 let id = bridge.create_workflow("sequential", params).await.unwrap();
149 + 
150 +                 // Execute workflow
151 +                 let result = bridge.execute_workflow(&id, json!({})).await.unwrap();
152 + 
153 +                 // Get execution history instead of status
154 +                 let history = bridge.get_execution_history().await;
155 + 
156 +                 let duration = start.elapsed();
157 + 
158 +                 black_box((id, result, history, duration));
159 +             })
160 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:138:13
    |
138 | /             rt.block_on(async {
139 | |                 // Complete cycle: create, execute, get status
140 | |                 let params = json!({
141 | |                     "name": "overhead_test",
...   |
158 | |                 black_box((id, result, history, duration));
159 | |             })
    | |______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
138 ~             rt.block_on(async {
139 +                 // Complete cycle: create, execute, get status
140 +                 let params = json!({
141 +                     "name": "overhead_test",
142 +                     "steps": [{"name": "step1", "tool": "mock"}]
143 +                 });
144 + 
145 +                 let start = std::time::Instant::now();
146 + 
147 +                 // Create workflow
148 +                 let id = bridge.create_workflow("sequential", params).await.unwrap();
149 + 
150 +                 // Execute workflow
151 +                 let result = bridge.execute_workflow(&id, json!({})).await.unwrap();
152 + 
153 +                 // Get execution history instead of status
154 +                 let history = bridge.get_execution_history().await;
155 + 
156 +                 let duration = start.elapsed();
157 + 
158 +                 black_box((id, result, history, duration));
159 +             });
    |

warning: this function has too many lines (140/100)
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:164:1
    |
164 | / fn benchmark_lua_workflow_api(c: &mut Criterion) {
165 | |     use llmspell_bridge::globals::{create_standard_registry, GlobalContext, GlobalInjector};
166 | |     use llmspell_bridge::providers::{ProviderManager, ProviderManagerConfig};
...   |
331 | |     });
332 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: redundant clone
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:176:55
    |
176 |     let context = Arc::new(GlobalContext::new(registry.clone(), providers));
    |                                                       ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:176:47
    |
176 |     let context = Arc::new(GlobalContext::new(registry.clone(), providers));
    |                                               ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone
    = note: `-W clippy::redundant-clone` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::redundant_clone)]`

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:184:9
    |
184 | /         b.iter(|| {
185 | |             let start = std::time::Instant::now();
186 | |
187 | |             lua.load(
...   |
202 | |             black_box(duration);
203 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
184 ~         b.iter(|| {
185 +             let start = std::time::Instant::now();
186 + 
187 +             lua.load(
188 +                 r#"
189 +                 local workflow = Workflow.sequential({
190 +                     name = "bench_sequential",
191 +                     steps = {
192 +                         {name = "step1", type = "tool", tool = "mock_tool", input = {value = 42}}
193 +                     }
194 +                 })
195 +                 return workflow
196 +             "#,
197 +             )
198 +             .eval::<mlua::Value>()
199 +             .unwrap();
200 + 
201 +             let duration = start.elapsed();
202 +             black_box(duration);
203 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:208:9
    |
208 | /         b.iter(|| {
209 | |             let start = std::time::Instant::now();
210 | |
211 | |             lua.load(
...   |
232 | |             black_box(duration);
233 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
208 ~         b.iter(|| {
209 +             let start = std::time::Instant::now();
210 + 
211 +             lua.load(
212 +                 r#"
213 +                 local workflow = Workflow.conditional({
214 +                     name = "bench_conditional",
215 +                     branches = {
216 +                         {
217 +                             name = "branch1",
218 +                             condition = {type = "always"},
219 +                             steps = {
220 +                                 {name = "step1", type = "tool", tool = "mock_tool", input = {}}
221 +                             }
222 +                         }
223 +                     }
224 +                 })
225 +                 return workflow
226 +             "#,
227 +             )
228 +             .eval::<mlua::Value>()
229 +             .unwrap();
230 + 
231 +             let duration = start.elapsed();
232 +             black_box(duration);
233 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:238:9
    |
238 | /         b.iter(|| {
239 | |             let start = std::time::Instant::now();
240 | |
241 | |             lua.load(
...   |
260 | |             black_box(duration);
261 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
238 ~         b.iter(|| {
239 +             let start = std::time::Instant::now();
240 + 
241 +             lua.load(
242 +                 r#"
243 +                 local workflow = Workflow.loop({
244 +                     name = "bench_loop",
245 +                     iterator = "range",
246 +                     start = 1,
247 +                     ["end"] = 10,
248 +                     step = 1,
249 +                     body = {
250 +                         {name = "step1", type = "tool", tool = "mock_tool", input = {}}
251 +                     }
252 +                 })
253 +                 return workflow
254 +             "#,
255 +             )
256 +             .eval::<mlua::Value>()
257 +             .unwrap();
258 + 
259 +             let duration = start.elapsed();
260 +             black_box(duration);
261 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:266:9
    |
266 | /         b.iter(|| {
267 | |             let start = std::time::Instant::now();
268 | |
269 | |             lua.load(
...   |
290 | |             black_box(duration);
291 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
266 ~         b.iter(|| {
267 +             let start = std::time::Instant::now();
268 + 
269 +             lua.load(
270 +                 r#"
271 +                 local workflow = Workflow.parallel({
272 +                     name = "bench_parallel",
273 +                     max_concurrency = 4,
274 +                     branches = {
275 +                         {
276 +                             name = "branch1",
277 +                             steps = {
278 +                                 {name = "step1", type = "tool", tool = "mock_tool", input = {}}
279 +                             }
280 +                         }
281 +                     }
282 +                 })
283 +                 return workflow
284 +             "#,
285 +             )
286 +             .eval::<mlua::Value>()
287 +             .unwrap();
288 + 
289 +             let duration = start.elapsed();
290 +             black_box(duration);
291 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:296:9
    |
296 | /         b.iter(|| {
297 | |             let start = std::time::Instant::now();
298 | |
299 | |             lua.load("return Workflow.list()")
...   |
304 | |             black_box(duration);
305 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
296 ~         b.iter(|| {
297 +             let start = std::time::Instant::now();
298 + 
299 +             lua.load("return Workflow.list()")
300 +                 .eval::<mlua::Value>()
301 +                 .unwrap();
302 + 
303 +             let duration = start.elapsed();
304 +             black_box(duration);
305 +         });
    |

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/benches/workflow_bridge_bench.rs:310:9
    |
310 | /         b.iter(|| {
311 | |             let start = std::time::Instant::now();
312 | |
313 | |             lua.load(
...   |
329 | |             black_box(duration);
330 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
help: add a `;` here
    |
310 ~         b.iter(|| {
311 +             let start = std::time::Instant::now();
312 + 
313 +             lua.load(
314 +                 r#"
315 +                 local workflow = Workflow.sequential({
316 +                     name = "bench_complete",
317 +                     steps = {
318 +                         {name = "step1", type = "tool", tool = "mock_tool", input = {data = "test"}}
319 +                     }
320 +                 })
321 +                 local result = workflow:execute({input = "test_data"})
322 +                 return result
323 +             "#,
324 +             )
325 +             .eval::<mlua::Value>()
326 +             .unwrap();
327 + 
328 +             let duration = start.elapsed();
329 +             black_box(duration);
330 +         });
    |

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-tools/tests/simple_performance_check.rs:57:23
   |
57 |     let overhead_ms = duration_with_hooks.as_millis() as f64 - duration_no_hooks.as_millis() as f64;
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-tools/tests/simple_performance_check.rs:57:64
   |
57 |     let overhead_ms = duration_with_hooks.as_millis() as f64 - duration_no_hooks.as_millis() as f64;
   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> llmspell-tools/tests/simple_performance_check.rs:59:24
   |
59 |         (overhead_ms / duration_no_hooks.as_millis() as f64) * 100.0
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: `llmspell-bridge` (bench "workflow_bridge_bench") generated 21 warnings (run `cargo clippy --fix --bench "workflow_bridge_bench"` to apply 20 suggestions)
warning: `llmspell-tools` (test "simple_performance_check") generated 3 warnings
error: this boolean expression contains a logic bug
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:429:17
    |
429 |         assert!(has_openai || !has_openai);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: it would look like the following: `true`
    |
help: this expression can be optimized out by applying boolean operations to the outer expression
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:429:17
    |
429 |         assert!(has_openai || !has_openai);
    |                 ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#overly_complex_bool_expr
    = note: `#[deny(clippy::overly_complex_bool_expr)]` on by default

error: this boolean expression contains a logic bug
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:430:17
    |
430 |         assert!(has_anthropic || !has_anthropic);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: it would look like the following: `true`
    |
help: this expression can be optimized out by applying boolean operations to the outer expression
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:430:17
    |
430 |         assert!(has_anthropic || !has_anthropic);
    |                 ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#overly_complex_bool_expr

warning: `llmspell-tools` (lib test) generated 79 warnings (25 duplicates) (run `cargo clippy --fix --lib -p llmspell-tools --tests` to apply 39 suggestions)
error: could not compile `llmspell-hooks` (test "mod") due to 2 previous errors
warning: variables can be used directly in the `format!` string
  --> llmspell-bridge/src/lua/globals/event.rs:95:17
   |
95 | /                 assert!(
96 | |                     outcome == "received_event" || outcome == "timeout",
97 | |                     "Should either receive event or timeout, got: {}",
98 | |                     outcome
99 | |                 );
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-bridge/src/lua/globals/event.rs:102:17
    |
102 |                 panic!("Event flow test failed: {}", e);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
102 -                 panic!("Event flow test failed: {}", e);
102 +                 panic!("Event flow test failed: {e}");
    |

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:423:13
    |
423 |             &vec!["agent1".to_string(), "agent2".to_string()],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can use a slice directly: `&["agent1".to_string(), "agent2".to_string()]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:434:13
    |
434 | /             &vec![
435 | |                 (
436 | |                     "agent1".to_string(),
437 | |                     "task1".to_string(),
...   |
444 | |                 ),
445 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
help: you can use a slice directly
    |
434 ~             &[(
435 +                     "agent1".to_string(),
436 +                     "task1".to_string(),
437 +                     serde_json::json!({}),
438 +                 ),
439 +                 (
440 +                     "agent2".to_string(),
441 +                     "task2".to_string(),
442 +                     serde_json::json!({}),
443 ~                 )],
    |

warning: unused `async` for function with no await statements
   --> llmspell-bridge/src/agents.rs:238:5
    |
238 | /     async fn create_test_provider_manager() -> Arc<llmspell_providers::ProviderManager> {
239 | |         Arc::new(llmspell_providers::ProviderManager::new())
240 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: `llmspell-bridge` (lib test) generated 121 warnings (108 duplicates) (run `cargo clippy --fix --lib -p llmspell-bridge --tests` to apply 5 suggestions)
