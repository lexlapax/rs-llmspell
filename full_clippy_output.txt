warning: this `map_or` can be simplified
   --> llmspell-state-persistence/src/migration/transforms.rs:641:20
    |
641 |                 if field_value.map_or(true, |v| v.is_null()) {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
    = note: `#[warn(clippy::unnecessary_map_or)]` on by default
help: use is_none_or instead
    |
641 -                 if field_value.map_or(true, |v| v.is_null()) {
641 +                 if field_value.is_none_or(|v| v.is_null()) {
    |

warning: `llmspell-state-persistence` (lib) generated 1 warning (run `cargo clippy --fix --lib -p llmspell-state-persistence` to apply 1 suggestion)
warning: this match arm has an identical body to the `_` wildcard arm
   --> llmspell-agents/src/tool_manager.rs:431:13
    |
431 | /             ContextMode::Full => {
...   |
435 | |             ContextMode::Previous => {
    | |____________^ help: try removing the arm
    |
    = help: or try changing either arm body
note: `_` wildcard arm here
   --> llmspell-agents/src/tool_manager.rs:445:13
    |
445 | /             _ => {
...   |
448 | |             }
    | |_____________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`

warning: `llmspell-agents` (lib) generated 1 warning
    Checking llmspell-core v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core)
    Checking llmspell-testing v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-testing)
    Checking llmspell-sessions v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-sessions)
    Checking llmspell-workflows v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-workflows)
warning: `llmspell-agents` (lib test) generated 1 warning (1 duplicate)
    Checking llmspell-tools v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-tools)
    Checking llmspell-agents v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents)
    Checking llmspell-bridge v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-bridge)
    Checking llmspell-state-persistence v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-state-persistence)
    Checking llmspell-hooks v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-hooks)
error: this boolean expression contains a logic bug
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:429:17
    |
429 |         assert!(has_openai || !has_openai);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: it would look like the following: `true`
    |
help: this expression can be optimized out by applying boolean operations to the outer expression
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:429:17
    |
429 |         assert!(has_openai || !has_openai);
    |                 ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#overly_complex_bool_expr
    = note: `#[deny(clippy::overly_complex_bool_expr)]` on by default

error: this boolean expression contains a logic bug
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:430:17
    |
430 |         assert!(has_anthropic || !has_anthropic);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: it would look like the following: `true`
    |
help: this expression can be optimized out by applying boolean operations to the outer expression
   --> llmspell-hooks/tests/provider_hook_integration/common.rs:430:17
    |
430 |         assert!(has_anthropic || !has_anthropic);
    |                 ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#overly_complex_bool_expr

error: could not compile `llmspell-hooks` (test "mod") due to 2 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0061]: this method takes 2 arguments but 0 arguments were supplied
   --> llmspell-workflows/benches/workflow_hook_overhead.rs:322:35
    |
322 |             let result = workflow.execute().await.unwrap();
    |                                   ^^^^^^^-- two arguments of type `llmspell_core::types::AgentInput` and `llmspell_core::ExecutionContext` are missing
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core/src/traits/base_agent.rs:93:14
    |
93  |     async fn execute(&self, input: AgentInput, context: ExecutionContext) -> Result<AgentOutput>;
    |              ^^^^^^^
help: provide the arguments
    |
322 -             let result = workflow.execute().await.unwrap();
322 +             let result = workflow.execute(/* llmspell_core::types::AgentInput */, /* llmspell_core::ExecutionContext */).await.unwrap();
    |

error[E0061]: this method takes 2 arguments but 0 arguments were supplied
   --> llmspell-workflows/benches/workflow_hook_overhead.rs:340:35
    |
340 |             let result = workflow.execute().await.unwrap();
    |                                   ^^^^^^^-- two arguments of type `llmspell_core::types::AgentInput` and `llmspell_core::ExecutionContext` are missing
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core/src/traits/base_agent.rs:93:14
    |
93  |     async fn execute(&self, input: AgentInput, context: ExecutionContext) -> Result<AgentOutput>;
    |              ^^^^^^^
help: provide the arguments
    |
340 -             let result = workflow.execute().await.unwrap();
340 +             let result = workflow.execute(/* llmspell_core::types::AgentInput */, /* llmspell_core::ExecutionContext */).await.unwrap();
    |

error[E0061]: this method takes 2 arguments but 0 arguments were supplied
   --> llmspell-workflows/benches/workflow_hook_overhead.rs:360:35
    |
360 |             let result = workflow.execute().await.unwrap();
    |                                   ^^^^^^^-- two arguments of type `llmspell_core::types::AgentInput` and `llmspell_core::ExecutionContext` are missing
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core/src/traits/base_agent.rs:93:14
    |
93  |     async fn execute(&self, input: AgentInput, context: ExecutionContext) -> Result<AgentOutput>;
    |              ^^^^^^^
help: provide the arguments
    |
360 -             let result = workflow.execute().await.unwrap();
360 +             let result = workflow.execute(/* llmspell_core::types::AgentInput */, /* llmspell_core::ExecutionContext */).await.unwrap();
    |

error[E0061]: this method takes 2 arguments but 0 arguments were supplied
   --> llmspell-workflows/benches/workflow_hook_overhead.rs:385:35
    |
385 |             let result = workflow.execute().await.unwrap();
    |                                   ^^^^^^^-- two arguments of type `llmspell_core::types::AgentInput` and `llmspell_core::ExecutionContext` are missing
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core/src/traits/base_agent.rs:93:14
    |
93  |     async fn execute(&self, input: AgentInput, context: ExecutionContext) -> Result<AgentOutput>;
    |              ^^^^^^^
help: provide the arguments
    |
385 -             let result = workflow.execute().await.unwrap();
385 +             let result = workflow.execute(/* llmspell_core::types::AgentInput */, /* llmspell_core::ExecutionContext */).await.unwrap();
    |

For more information about this error, try `rustc --explain E0061`.
error: could not compile `llmspell-workflows` (bench "workflow_hook_overhead") due to 4 previous errors
error[E0433]: failed to resolve: use of undeclared type `ProviderManagerConfig`
  --> llmspell-bridge/src/javascript/globals/event.rs:63:38
   |
63 |                 ProviderManager::new(ProviderManagerConfig::default())
   |                                      ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `ProviderManagerConfig`
   |
help: a struct with a similar name exists
   |
63 -                 ProviderManager::new(ProviderManagerConfig::default())
63 +                 ProviderManager::new(ProviderManager::default())
   |
help: consider importing this struct through its public re-export
   |
45 +     use crate::ProviderManagerConfig;
   |

error[E0433]: failed to resolve: use of undeclared type `ProviderManagerConfig`
  --> llmspell-bridge/src/javascript/globals/hook.rs:44:45
   |
44 |                 crate::ProviderManager::new(ProviderManagerConfig::default())
   |                                             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `ProviderManagerConfig`
   |
help: consider importing this struct through its public re-export
   |
37 +     use crate::ProviderManagerConfig;
   |

warning: `llmspell-state-persistence` (lib test) generated 1 warning (1 duplicate)
For more information about this error, try `rustc --explain E0433`.
error: could not compile `llmspell-bridge` (lib test) due to 2 previous errors
