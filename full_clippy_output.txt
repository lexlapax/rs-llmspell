warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/communication/database_connector.rs:392:37
    |
392 | / ...                   if let Ok(v) = row.try_get::<String, _>(i) {
393 | | ...                       serde_json::Value::String(v)
394 | | ...                   } else if let Ok(v) = row.try_get::<i64, _>(i) {
395 | | ...                       serde_json::Value::Number(v.into())
...   |
404 | | ...                       serde_json::Value::Null
405 | | ...                   };
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
392 ~                                     row.try_get::<String, _>(i).map_or_else(|_| if let Ok(v) = row.try_get::<i64, _>(i) {
393 +                                         serde_json::Value::Number(v.into())
394 +                                     } else if let Ok(v) = row.try_get::<f64, _>(i) {
395 +                                         serde_json::Value::Number(
396 +                                             serde_json::Number::from_f64(v)
397 +                                                 .unwrap_or(serde_json::Number::from(0)),
398 +                                         )
399 +                                     } else if let Ok(v) = row.try_get::<bool, _>(i) {
400 +                                         serde_json::Value::Bool(v)
401 +                                     } else {
402 +                                         serde_json::Value::Null
403 ~                                     }, |v| serde_json::Value::String(v));
    |

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/communication/database_connector.rs:399:50
    |
399 | ...                   .unwrap_or(serde_json::Number::from(0)),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| serde_json::Number::from(0))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: this function's return value is unnecessarily wrapped by `Result`
    --> llmspell-tools/src/data/csv_analyzer.rs:1084:5
     |
1084 | /     fn evaluate_expression(
1085 | |         expr: &str,
1086 | |         headers: &csv::StringRecord,
1087 | |         record: &csv::StringRecord,
...    |
1106 | |         Ok(expr.to_string())
1107 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
     = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
     |
1088 -     ) -> Result<String> {
1088 +     ) -> std::string::String {
     |
help: ...and then change returning expressions
     |
1100 ~                     return format!("{:.2}", left * right);
1101 |                 }
 ...
1105 |         // Default: return the expression as-is
1106 ~         expr.to_string()
     |

warning: the function has a cognitive complexity of (39/25)
   --> llmspell-tools/src/fs/archive_handler.rs:286:8
    |
286 |     fn extract_zip(
    |        ^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::cognitive_complexity)]`

warning: the function has a cognitive complexity of (35/25)
   --> llmspell-tools/src/fs/archive_handler.rs:378:8
    |
378 |     fn extract_tar(
    |        ^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: the function has a cognitive complexity of (35/25)
   --> llmspell-tools/src/fs/archive_handler.rs:446:8
    |
446 |     fn extract_tar_gz(
    |        ^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/fs/file_watcher.rs:183:13
    |
183 |             notify::EventKind::Other | _ => FileEventType::Other,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:378:25
    |
378 |                         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones
    = note: `-W clippy::assigning-clones` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::assigning_clones)]`

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:395:25
    |
395 |                         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: assigning the result of `Clone::clone()` may be inefficient
   --> llmspell-tools/src/lifecycle/hook_integration.rs:434:9
    |
434 |         audit_entry.resource_metrics = tool_context.resource_metrics.clone();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `audit_entry.resource_metrics.clone_from(&tool_context.resource_metrics)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/lifecycle/state_machine.rs:261:13
    |
261 |             (Terminated, _) | _ => false,
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> llmspell-tools/src/media/audio_processor.rs:555:37
    |
555 |                   let target_format = extract_optional_string(params, "target_format")
    |  _____________________________________^
556 | |                     .map(|s| match s.to_lowercase().as_str() {
557 | |                         "wav" => AudioFormat::Wav,
558 | |                         "mp3" => AudioFormat::Mp3,
559 | |                         _ => AudioFormat::Unknown,
560 | |                     })
561 | |                     .unwrap_or_else(|| AudioFormat::from_extension(Path::new(target_path)));
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> llmspell-tools/src/media/image_processor.rs:549:37
    |
549 |                   let target_format = extract_optional_string(params, "target_format")
    |  _____________________________________^
550 | |                     .map(|s| match s.to_lowercase().as_str() {
551 | |                         "png" => ImageFormat::Png,
552 | |                         "jpeg" | "jpg" => ImageFormat::Jpeg,
...   |
556 | |                     })
557 | |                     .unwrap_or_else(|| ImageFormat::from_extension(Path::new(output_path)));
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or

warning: use Option::map_or instead of an if let/else
   --> llmspell-tools/src/search/web_search.rs:473:27
    |
473 |           let max_results = if let Some(n) = params
    |  ___________________________^
474 | |             .get("max_results")
475 | |             .and_then(serde_json::Value::as_u64)
...   |
479 | |             self.config.max_results
480 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
473 ~         let max_results = params
474 +             .get("max_results")
475 ~             .and_then(serde_json::Value::as_u64).map_or(self.config.max_results, |n| usize::try_from(n).unwrap_or(usize::MAX));
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/search/web_search.rs:507:29
    |
507 |           let provider_used = if let Some(r) = results.first() {
    |  _____________________________^
508 | |             r.provider.clone()
509 | |         } else {
510 | |             "unknown".to_string()
511 | |         };
    | |_________^ help: try: `results.first().map_or_else(|| "unknown".to_string(), |r| r.provider.clone())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: the function has a cognitive complexity of (42/25)
   --> llmspell-tools/src/system/environment_reader.rs:129:8
    |
129 |     fn is_var_allowed(&self, var_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: the function has a cognitive complexity of (26/25)
   --> llmspell-tools/src/system/process_executor.rs:216:8
    |
216 |     fn is_executable_allowed(&self, executable: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function's return value is unnecessary
   --> llmspell-tools/src/util/data_validation.rs:268:5
    |
268 | /     fn validate_value(
269 | |         &self,
270 | |         field: &str,
271 | |         value: &Value,
...   |
293 | |         Ok(())
294 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove the return type...
    |
274 -     ) -> Result<()> {
274 +     ) -> () {
    |
help: ...and then remove returned values
    |
293 -         Ok(())
    |

warning: the function has a cognitive complexity of (31/25)
   --> llmspell-tools/src/util/data_validation.rs:298:8
    |
298 |     fn validate_rule(
    |        ^^^^^^^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this looks like a formatting argument but it is not part of a formatting macro
   --> llmspell-tools/src/util/data_validation.rs:569:32
    |
569 |             |msg| msg.replace("{field}", field),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#literal_string_with_formatting_args
    = note: `-W clippy::literal-string-with-formatting-args` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::literal_string_with_formatting_args)]`

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
   --> llmspell-tools/src/util/uuid_generator.rs:140:47
    |
140 |     fn format_uuid(&self, uuid: Uuid, format: &UuidFormat) -> String {
    |                                               ^^^^^^^^^^^ help: consider passing by value instead: `UuidFormat`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
    = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/web/api_tester.rs:212:44
    |
212 |                 "body": body_json.as_ref().unwrap_or(&json!(body_text)),
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &json!(body_text))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-tools/src/web/sitemap_crawler.rs:330:5
    |
330 | /     fn parse_sitemap(&self, xml_content: &str) -> Result<Vec<Value>> {
331 | |         let mut urls = Vec::new();
332 | |         let lines: Vec<&str> = xml_content.lines().collect();
...   |
405 | |         Ok(urls)
406 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
330 -     fn parse_sitemap(&self, xml_content: &str) -> Result<Vec<Value>> {
330 +     fn parse_sitemap(&self, xml_content: &str) -> std::vec::Vec<serde_json::Value> {
    |
help: ...and then change returning expressions
    |
405 -         Ok(urls)
405 +         urls
    |

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-tools/src/web/webhook_caller.rs:171:17
    |
171 |                 "POST" | _ => client.post(url), // Default to POST for unknown methods
    |                 ^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/web/webhook_caller.rs:228:56
    |
228 | ...                   "body": body_json.as_ref().unwrap_or(&json!(body_text)),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| &json!(body_text))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: `llmspell-tools` (lib) generated 25 warnings
    Checking llmspell-agents v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents)
warning: future cannot be sent between threads safely
   --> llmspell-agents/src/composition/tool_composition.rs:324:5
    |
324 | /     pub async fn execute<T>(
325 | |         &self,
326 | |         tool_provider: &T,
327 | |         initial_parameters: JsonValue,
...   |
330 | |     where
331 | |         T: ToolProvider,
    | |________________________^ future returned by `execute` is not `Send`
    |
note: future is not `Send` as this value is used across an await
   --> llmspell-agents/src/composition/tool_composition.rs:367:26
    |
326 |         tool_provider: &T,
    |         ------------- has type `&T` which is not `Send`
...
367 |                         .await
    |                          ^^^^^ await occurs here, with `tool_provider` maybe used later
    = note: `T` doesn't implement `std::marker::Sync`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#future_not_send
    = note: `-W clippy::future-not-send` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::future_not_send)]`

warning: parameter is only used in recursion
   --> llmspell-agents/src/composition/tool_composition.rs:510:10
    |
510 |         &self,
    |          ^^^^
    |
note: parameter used here
   --> llmspell-agents/src/composition/tool_composition.rs:536:36
    |
536 |                 let source_value = self.resolve_data_flow(source, context)?;
    |                                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion
    = note: `-W clippy::only-used-in-recursion` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::only_used_in_recursion)]`

warning: future cannot be sent between threads safely
   --> llmspell-agents/src/composition/tool_composition.rs:589:5
    |
589 | /     async fn execute_step<T>(
590 | |         &self,
591 | |         tool_provider: &T,
592 | |         step: &CompositionStep,
...   |
596 | |     where
597 | |         T: ToolProvider,
    | |________________________^ future returned by `execute_step` is not `Send`
    |
note: captured value is not `Send` because `&` references cannot be sent unless their referent is `Sync`
   --> llmspell-agents/src/composition/tool_composition.rs:591:9
    |
591 |         tool_provider: &T,
    |         ^^^^^^^^^^^^^ has type `&T` which is not `Send`, because `T` is not `Sync`
    = note: `T` doesn't implement `std::marker::Sync`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#future_not_send

warning: unused `self` argument
   --> llmspell-agents/src/composition/tool_composition.rs:606:9
    |
606 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: this could be a `const fn`
   --> llmspell-agents/src/composition/tool_composition.rs:605:5
    |
605 | /     fn handle_step_success(
606 | |         &self,
607 | |         _step_id: &str,
608 | |         output: JsonValue,
...   |
624 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
605 |     const fn handle_step_success(
    |     +++++

warning: this could be a `const fn`
  --> llmspell-agents/src/config/persistence_config.rs:51:5
   |
51 | /     pub fn save_on_pause(mut self, enabled: bool) -> Self {
52 | |         self.config.event_settings.save_on_pause = enabled;
53 | |         self
54 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
51 |     pub const fn save_on_pause(mut self, enabled: bool) -> Self {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-agents/src/config/persistence_config.rs:58:5
   |
58 | /     pub fn save_on_stop(mut self, enabled: bool) -> Self {
59 | |         self.config.event_settings.save_on_stop = enabled;
60 | |         self
61 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
58 |     pub const fn save_on_stop(mut self, enabled: bool) -> Self {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-agents/src/config/persistence_config.rs:65:5
   |
65 | /     pub fn restore_on_resume(mut self, enabled: bool) -> Self {
66 | |         self.config.event_settings.restore_on_resume = enabled;
67 | |         self
68 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
65 |     pub const fn restore_on_resume(mut self, enabled: bool) -> Self {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-agents/src/config/persistence_config.rs:72:5
   |
72 | /     pub fn non_blocking(mut self, enabled: bool) -> Self {
73 | |         self.config.event_settings.non_blocking = enabled;
74 | |         self
75 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
72 |     pub const fn non_blocking(mut self, enabled: bool) -> Self {
   |         +++++

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/lifecycle/middleware.rs:1:1
  |
1 | / //! ABOUTME: Lifecycle middleware system for intercepting and augmenting agent lifecycle transitions
2 | | //! ABOUTME: Provides composable middleware chain for logging, metrics, security, and custom lifecycle behavior
  | |_^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
  = note: `-W clippy::too-long-first-doc-paragraph` implied by `-W clippy::nursery`
  = help: to override `-W clippy::nursery` add `#[allow(clippy::too_long_first_doc_paragraph)]`

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:336:32
    |
336 |     /// Panics if creating Arc<RwLock<_>> fails (should never happen)
    |                                ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
336 -     /// Panics if creating Arc<RwLock<_>> fails (should never happen)
336 +     /// Panics if creating Arc<`RwLock`<_>> fails (should never happen)
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:353:23
    |
353 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
353 -     /// Panics if the RwLock is poisoned
353 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:362:23
    |
362 |     /// Panics if the RwLock is poisoned.
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
362 -     /// Panics if the RwLock is poisoned.
362 +     /// Panics if the `RwLock` is poisoned.
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:378:21
    |
378 |     /// Panics if a RwLock is poisoned
    |                     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
378 -     /// Panics if a RwLock is poisoned
378 +     /// Panics if a `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:528:23
    |
528 |     /// Panics if the RwLock is poisoned or if Duration conversion fails
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
528 -     /// Panics if the RwLock is poisoned or if Duration conversion fails
528 +     /// Panics if the `RwLock` is poisoned or if Duration conversion fails
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:545:23
    |
545 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
545 -     /// Panics if the RwLock is poisoned
545 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:564:23
    |
564 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
564 -     /// Panics if the RwLock is poisoned
564 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:592:23
    |
592 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
592 -     /// Panics if the RwLock is poisoned
592 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/alerts.rs:617:23
    |
617 |     /// Panics if the RwLock is poisoned.
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
617 -     /// Panics if the RwLock is poisoned.
617 +     /// Panics if the `RwLock` is poisoned.
    |

warning: manual `Debug` impl does not include all fields
   --> llmspell-agents/src/monitoring/events.rs:175:1
    |
175 | / impl std::fmt::Debug for EventLogger {
176 | |     /// # Panics
177 | |     ///
178 | |     /// Panics if the RwLock is poisoned
...   |
188 | | }
    | |_^
    |
note: this field is unused
   --> llmspell-agents/src/monitoring/events.rs:166:5
    |
166 |     buffer: Arc<RwLock<VecDeque<LogEvent>>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: consider including all fields in this `Debug` impl
    = help: consider calling `.finish_non_exhaustive()` if you intend to ignore fields
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_fields_in_debug
    = note: `-W clippy::missing-fields-in-debug` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_fields_in_debug)]`

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:178:23
    |
178 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
178 -     /// Panics if the RwLock is poisoned
178 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:208:23
    |
208 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
208 -     /// Panics if the RwLock is poisoned
208 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:217:23
    |
217 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
217 -     /// Panics if the RwLock is poisoned
217 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:240:23
    |
240 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
240 -     /// Panics if the RwLock is poisoned
240 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:373:23
    |
373 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
373 -     /// Panics if the RwLock is poisoned
373 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:383:23
    |
383 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
383 -     /// Panics if the RwLock is poisoned
383 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:397:23
    |
397 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
397 -     /// Panics if the RwLock is poisoned
397 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:411:23
    |
411 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
411 -     /// Panics if the RwLock is poisoned
411 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/events.rs:420:23
    |
420 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
420 -     /// Panics if the RwLock is poisoned
420 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/metrics.rs:422:23
    |
422 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
422 -     /// Panics if the RwLock is poisoned
422 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/metrics.rs:433:23
    |
433 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
433 -     /// Panics if the RwLock is poisoned
433 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/metrics.rs:443:23
    |
443 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
443 -     /// Panics if the RwLock is poisoned
443 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/performance.rs:391:23
    |
391 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
391 -     /// Panics if the RwLock is poisoned
391 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/performance.rs:407:23
    |
407 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
407 -     /// Panics if the RwLock is poisoned
407 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
  --> llmspell-agents/src/monitoring/tracing.rs:96:23
   |
96 |     /// Panics if the end_time calculation results in a negative duration
   |                       ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
96 -     /// Panics if the end_time calculation results in a negative duration
96 +     /// Panics if the `end_time` calculation results in a negative duration
   |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:214:23
    |
214 |     /// Panics if any RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
214 -     /// Panics if any RwLock is poisoned
214 +     /// Panics if any `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:252:23
    |
252 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
252 -     /// Panics if the RwLock is poisoned
252 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:271:23
    |
271 |     /// Panics if any RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
271 -     /// Panics if any RwLock is poisoned
271 +     /// Panics if any `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:298:23
    |
298 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
298 -     /// Panics if the RwLock is poisoned
298 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:308:23
    |
308 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
308 -     /// Panics if the RwLock is poisoned
308 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:324:23
    |
324 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
324 -     /// Panics if the RwLock is poisoned
324 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:342:23
    |
342 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
342 -     /// Panics if the RwLock is poisoned
342 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:359:23
    |
359 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
359 -     /// Panics if the RwLock is poisoned
359 +     /// Panics if the `RwLock` is poisoned
    |

warning: item in documentation is missing backticks
   --> llmspell-agents/src/monitoring/tracing.rs:376:23
    |
376 |     /// Panics if the RwLock is poisoned
    |                       ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
376 -     /// Panics if the RwLock is poisoned
376 +     /// Panics if the `RwLock` is poisoned
    |

warning: this could be rewritten as `let...else`
   --> llmspell-agents/src/registry/discovery.rs:218:9
    |
218 | /         let reference = match self.registry.get_metadata(agent_id).await? {
219 | |             Some(metadata) => metadata,
220 | |             None => anyhow::bail!("Agent '{}' not found", agent_id),
221 | |         };
    | |__________^ help: consider writing: `let Some(reference) = self.registry.get_metadata(agent_id).await? else { anyhow::bail!("Agent '{}' not found", agent_id) };`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else
    = note: `-W clippy::manual-let-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::manual_let_else)]`

warning: item in documentation is missing backticks
   --> llmspell-agents/src/registry/discovery.rs:249:19
    |
249 |     /// Panics if DateTime conversion fails
    |                   ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
249 -     /// Panics if DateTime conversion fails
249 +     /// Panics if `DateTime` conversion fails
    |

warning: it is more idiomatic to use `Option<&T>` instead of `&Option<T>`
   --> llmspell-agents/src/registry/discovery.rs:318:5
    |
318 |       fn sort_results(results: &mut [SearchResult], sort_by: &Option<SortField>, order: &SortOrder) {
    |       ^                                                      ------------------ help: change this to: `Option<&SortField>`
    |  _____|
    | |
319 | |         let field = sort_by.as_ref().unwrap_or(&SortField::Name);
320 | |
321 | |         results.sort_by(|a, b| {
...   |
349 | |         });
350 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_option
    = note: `-W clippy::ref-option` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::ref_option)]`

warning: using `clone` on type `StatePermission` which implements the `Copy` trait
   --> llmspell-agents/src/state/isolation.rs:309:25
    |
309 |                         permission.clone(),
    |                         ^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*permission`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::clone_on_copy)]`

warning: using `clone` on type `StatePermission` which implements the `Copy` trait
   --> llmspell-agents/src/state/isolation.rs:358:66
    |
358 |         access_control.grant_permission(agent_id, scope.clone(), permission.clone());
    |                                                                  ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `permission`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: the borrowed expression implements the required traits
   --> llmspell-agents/src/state/sharing.rs:443:38
    |
443 |                 serde_json::to_value(&stages)?,
    |                                      ^^^^^^^ help: change this to: `stages`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
    = note: `-W clippy::needless-borrows-for-generic-args` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrows_for_generic_args)]`

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:7:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
7 | / /// Base template trait and factory
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:13:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
13| / /// Orchestrator agent template  
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:16:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
16| / /// Monitor agent template
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:19:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
19| / /// Template customization API
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: first doc comment paragraph is too long
 --> llmspell-agents/src/templates/mod.rs:22:1
  |
2 | | //! ABOUTME: Provides schema, base traits, implementations, customization, and validation for agent templates
  | |_^
...
22| / /// Template validation utilities
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: unused `self` argument
   --> llmspell-agents/src/templates/validation.rs:336:9
    |
336 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this could be a `const fn`
   --> llmspell-agents/src/tool_context.rs:151:5
    |
151 | /     pub fn context_id(&self) -> &str {
152 | |         &self.context_id
153 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
151 |     pub const fn context_id(&self) -> &str {
    |         +++++

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-agents/src/tool_errors.rs:580:5
    |
580 | /     pub async fn handle_error(
581 | |         &self,
582 | |         error: ToolIntegrationError,
583 | |         context: &mut ErrorContext,
584 | |     ) -> Result<Option<JsonValue>> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: this could be rewritten as `let...else`
   --> llmspell-agents/src/tool_manager.rs:294:9
    |
294 | /         let registry_info = match self.registry.get_tool_info(tool_name).await {
295 | |             Some(info) => info,
296 | |             None => return Ok(None),
297 | |         };
    | |__________^ help: consider writing: `let Some(registry_info) = self.registry.get_tool_info(tool_name).await else { return Ok(None) };`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else

warning: item in documentation is missing backticks
   --> llmspell-agents/src/tool_manager.rs:317:31
    |
317 |     /// - Any step fails with ErrorStrategy::Fail
    |                               ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
317 -     /// - Any step fails with ErrorStrategy::Fail
317 +     /// - Any step fails with `ErrorStrategy::Fail`
    |

warning: used underscore-prefixed binding
   --> llmspell-agents/src/tool_manager.rs:371:56
    |
371 | ...                   return Err(_last_error);
    |                                  ^^^^^^^^^^^
    |
note: binding is defined here
   --> llmspell-agents/src/tool_manager.rs:350:33
    |
350 | ...                   let mut _last_error = error;
    |                           ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: unused `self` argument
   --> llmspell-agents/src/tool_manager.rs:415:9
    |
415 |         &self,
    |         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: this method could have a `#[must_use]` attribute
   --> llmspell-agents/src/testing/framework.rs:142:5
    |
142 |     pub fn new(config: TestConfig) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(config: TestConfig) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this argument is a mutable reference, but not used mutably
   --> llmspell-agents/src/tool_manager.rs:397:18
    |
397 |         context: &mut ExecutionContext,
    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider changing to: `&ExecutionContext`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_ref_mut
    = note: `-W clippy::needless-pass-by-ref-mut` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::needless_pass_by_ref_mut)]`

warning: `llmspell-agents` (lib) generated 64 warnings (run `cargo clippy --fix --lib -p llmspell-agents` to apply 45 suggestions)
    Checking llmspell-bridge v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-bridge)
warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/engine/factory.rs:391:25
    |
391 | static PLUGIN_REGISTRY: LazyLock<Arc<RwLock<HashMap<String, Box<dyn ScriptEnginePlugin>>>>> =
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
    = note: `-W clippy::type-complexity` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::type_complexity)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:394:5
    |
394 | /     pub fn javascript_config(mut self, config: JSConfig) -> Self {
395 | |         self.config.engines.javascript = config;
396 | |         self
397 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
394 |     pub const fn javascript_config(mut self, config: JSConfig) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:491:5
    |
491 | /     pub fn max_concurrent_scripts(mut self, max: usize) -> Self {
492 | |         self.config.max_concurrent_scripts = max;
493 | |         self
494 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
491 |     pub const fn max_concurrent_scripts(mut self, max: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:498:5
    |
498 | /     pub fn script_timeout_seconds(mut self, timeout: u64) -> Self {
499 | |         self.config.script_timeout_seconds = timeout;
500 | |         self
501 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
498 |     pub const fn script_timeout_seconds(mut self, timeout: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:505:5
    |
505 | /     pub fn enable_streaming(mut self, enable: bool) -> Self {
506 | |         self.config.enable_streaming = enable;
507 | |         self
508 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
505 |     pub const fn enable_streaming(mut self, enable: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:512:5
    |
512 | /     pub fn security(mut self, security: SecurityConfig) -> Self {
513 | |         self.config.security = security;
514 | |         self
515 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
512 |     pub const fn security(mut self, security: SecurityConfig) -> Self {
    |         +++++

warning: more than 3 bools in a struct
   --> llmspell-bridge/src/runtime.rs:575:1
    |
575 | / pub struct StatePersistenceConfig {
576 | |     /// Enable state persistence
577 | |     pub enabled: bool,
578 | |     /// Backend type for storage (memory, file, redis, etc.)
...   |
591 | |     pub backup: Option<BackupConfig>,
592 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
    = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/storage.rs:2:78
  |
2 | //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, RocksDB)
  |                                                                              ^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
2 - //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, RocksDB)
2 + //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, `RocksDB`)
  |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:252:58
    |
252 |     /// Performance optimization preset (fast, balanced, storage_optimized)
    |                                                          ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
252 -     /// Performance optimization preset (fast, balanced, storage_optimized)
252 +     /// Performance optimization preset (fast, balanced, `storage_optimized`)
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:269:34
    |
269 |     /// Create a new builder for StorageConfig
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
269 -     /// Create a new builder for StorageConfig
269 +     /// Create a new builder for `StorageConfig`
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:276:17
    |
276 | /// Builder for StorageConfig
    |                 ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
276 - /// Builder for StorageConfig
276 + /// Builder for `StorageConfig`
    |

warning: this could be a `const fn`
   --> llmspell-bridge/src/storage.rs:312:5
    |
312 | /     pub fn enable_compression(mut self, enable: bool) -> Self {
313 | |         self.config.enable_compression = enable;
314 | |         self
315 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
312 |     pub const fn enable_compression(mut self, enable: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/storage.rs:319:5
    |
319 | /     pub fn enable_encryption(mut self, enable: bool) -> Self {
320 | |         self.config.enable_encryption = enable;
321 | |         self
322 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
319 |     pub const fn enable_encryption(mut self, enable: bool) -> Self {
    |         +++++

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:358:25
    |
358 |     /// Build the final StorageConfig
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
358 -     /// Build the final StorageConfig
358 +     /// Build the final `StorageConfig`
    |

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-bridge/src/tools.rs:48:15
   |
48 |     registry: Arc<ComponentRegistry>,
   |               ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<ComponentRegistry>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
   = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/tools.rs:316:5
    |
316 | /     pub fn new(registry: Arc<ComponentRegistry>) -> Self {
317 | |         Self { registry }
318 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
316 |     pub const fn new(registry: Arc<ComponentRegistry>) -> Self {
    |         +++++

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/event_bridge.rs:53:29
   |
53 |     /// Returns an error if EventBridge initialization fails
   |                             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
53 -     /// Returns an error if EventBridge initialization fails
53 +     /// Returns an error if `EventBridge` initialization fails
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/event_bridge.rs:210:5
    |
210 |     pub fn get_stats(&self) -> serde_json::Value {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/globals/injection.rs:199:5
    |
199 | /     pub fn get_metrics(&self) -> &InjectionMetrics {
200 | |         self.registry.metrics()
201 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
199 |     pub const fn get_metrics(&self) -> &InjectionMetrics {
    |         +++++

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/globals/session_infrastructure.rs:16:1
   |
16 | / pub async fn get_or_create_session_infrastructure(
17 | |     context: &GlobalContext,
18 | |     config: &SessionConfig,
19 | | ) -> Result<SessionInfrastructure> {
   | |__________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: casting `u64` to `i64` may wrap around the value
  --> llmspell-bridge/src/globals/session_infrastructure.rs:42:13
   |
42 |             config.session_timeout_seconds as i64,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap
   = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_wrap)]`

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:99:1
    |
99  | / fn get_or_create_hook_registry(context: &GlobalContext) -> Result<Arc<HookRegistry>> {
100 | |     if let Some(registry) = context.get_bridge::<HookRegistry>("hook_registry") {
101 | |         return Ok(registry);
...   |
107 | |     Ok(registry)
108 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
99  - fn get_or_create_hook_registry(context: &GlobalContext) -> Result<Arc<HookRegistry>> {
99  + fn get_or_create_hook_registry(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookRegistry> {
    |
help: ...and then change returning expressions
    |
101 ~         return registry;
102 |     }
...
106 |     context.set_bridge("hook_registry", registry.clone());
107 ~     registry
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:111:1
    |
111 | / fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
112 | |     if let Some(executor) = context.get_bridge::<HookExecutor>("hook_executor") {
113 | |         return Ok(executor);
...   |
119 | |     Ok(executor)
120 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
111 - fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
111 + fn get_or_create_hook_executor(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookExecutor> {
    |
help: ...and then change returning expressions
    |
113 ~         return executor;
114 |     }
...
118 |     context.set_bridge("hook_executor", executor.clone());
119 ~     executor
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:123:1
    |
123 | / fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
124 | |     if let Some(event_bus) = context.get_bridge::<EventBus>("event_bus") {
125 | |         return Ok(event_bus);
...   |
131 | |     Ok(event_bus)
132 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
123 - fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
123 + fn get_or_create_event_bus(context: &GlobalContext) -> std::sync::Arc<llmspell_events::EventBus> {
    |
help: ...and then change returning expressions
    |
125 ~         return event_bus;
126 |     }
...
130 |     context.set_bridge("event_bus", event_bus.clone());
131 ~     event_bus
    |

warning: casting `u64` to `i64` may wrap around the value
   --> llmspell-bridge/src/globals/state_global.rs:663:37
    |
663 | / ...                   backup
664 | | ...                       .created_at
665 | | ...                       .duration_since(std::time::UNIX_EPOCH)
666 | | ...                       .unwrap()
667 | | ...                       .as_secs() as i64,
    | |___________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/globals/state_infrastructure.rs:21:1
   |
21 | / pub async fn get_or_create_state_infrastructure(
22 | |     context: &GlobalContext,
23 | |     config: &StatePersistenceConfig,
24 | | ) -> Result<StateInfrastructure> {
   | |________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/globals/state_infrastructure.rs:124:29
    |
124 |           let backup_config = if let Some(ref backup_cfg) = config.backup {
    |  _____________________________^
125 | |             // Convert from runtime BackupConfig to state-persistence BackupConfig
126 | |             llmspell_state_persistence::config::BackupConfig {
127 | |                 backup_dir: std::path::PathBuf::from(
...   |
147 | |             llmspell_state_persistence::config::BackupConfig::default()
148 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
124 ~         let backup_config = config.backup.as_ref().map_or_else(llmspell_state_persistence::config::BackupConfig::default, |backup_cfg| llmspell_state_persistence::config::BackupConfig {
125 +                 backup_dir: std::path::PathBuf::from(
126 +                     backup_cfg.backup_dir.as_deref().unwrap_or("./backups"),
127 +                 ),
128 +                 compression_enabled: backup_cfg.compression_enabled,
129 +                 compression_type: match backup_cfg.compression_type.as_str() {
130 +                     "gzip" => llmspell_state_persistence::config::CompressionType::Gzip,
131 +                     "lz4" => llmspell_state_persistence::config::CompressionType::Lz4,
132 +                     "brotli" => llmspell_state_persistence::config::CompressionType::Brotli,
133 +                     _ => llmspell_state_persistence::config::CompressionType::Zstd,
134 +                 },
135 +                 compression_level: backup_cfg.compression_level,
136 +                 encryption_enabled: false, // Not exposed in runtime config yet
137 +                 max_backups: backup_cfg.max_backups,
138 +                 max_backup_age: backup_cfg
139 +                     .max_backup_age
140 +                     .map(std::time::Duration::from_secs),
141 +                 incremental_enabled: backup_cfg.incremental_enabled,
142 +                 full_backup_interval: std::time::Duration::from_secs(86400), // 24 hours default
143 ~             });
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:188:1
    |
188 | / fn create_backend_type(config: &StatePersistenceConfig) -> Result<StorageBackendType> {
189 | |     match config.backend_type.as_str() {
190 | |         "memory" => {
191 | |             debug!("Creating in-memory storage backend type");
...   |
209 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
188 - fn create_backend_type(config: &StatePersistenceConfig) -> Result<StorageBackendType> {
188 + fn create_backend_type(config: &StatePersistenceConfig) -> llmspell_state_persistence::StorageBackendType {
    |
help: ...and then change returning expressions
    |
192 ~             StorageBackendType::Memory
193 |         }
...
197 |                 .unwrap_or_else(|_| "./llmspell_state".to_string());
198 ~             StorageBackendType::Sled(SledConfig {
199 +                 path: std::path::PathBuf::from(path),
200 +                 cache_capacity: 64 * 1024 * 1024, // 64MB
201 +                 use_compression: true,
202 +             })
203 |         }
204 |         backend => {
205 |             warn!("Unknown backend type '{}', falling back to memory", backend);
206 ~             StorageBackendType::Memory
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:212:1
    |
212 | / fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
213 | |     if let Some(event_bus) = context.get_bridge::<EventBus>("event_bus") {
214 | |         return Ok(event_bus);
...   |
220 | |     Ok(event_bus)
221 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
212 - fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
212 + fn get_or_create_event_bus(context: &GlobalContext) -> std::sync::Arc<llmspell_events::EventBus> {
    |
help: ...and then change returning expressions
    |
214 ~         return event_bus;
215 |     }
...
219 |     context.set_bridge("event_bus", event_bus.clone());
220 ~     event_bus
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:224:1
    |
224 | / fn get_or_create_correlation_tracker(
225 | |     context: &GlobalContext,
226 | | ) -> Result<Arc<EventCorrelationTracker>> {
227 | |     if let Some(tracker) = context.get_bridge::<EventCorrelationTracker>("correlation_tracker") {
...   |
234 | |     Ok(tracker)
235 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
226 - ) -> Result<Arc<EventCorrelationTracker>> {
226 + ) -> std::sync::Arc<llmspell_events::EventCorrelationTracker> {
    |
help: ...and then change returning expressions
    |
228 ~         return tracker;
229 |     }
...
233 |     context.set_bridge("correlation_tracker", tracker.clone());
234 ~     tracker
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:238:1
    |
238 | / fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
239 | |     if let Some(executor) = context.get_bridge::<HookExecutor>("hook_executor") {
240 | |         return Ok(executor);
...   |
246 | |     Ok(executor)
247 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
238 - fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
238 + fn get_or_create_hook_executor(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookExecutor> {
    |
help: ...and then change returning expressions
    |
240 ~         return executor;
241 |     }
...
245 |     context.set_bridge("hook_executor", executor.clone());
246 ~     executor
    |

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/globals/tool_api_standard.rs:79:9
   |
79 | //! ### ToolInfo
   |         ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
79 - //! ### ToolInfo
79 + //! ### `ToolInfo`
   |

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/globals/tool_api_standard.rs:89:9
   |
89 | //! ### ToolSchema
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
89 - //! ### ToolSchema
89 + //! ### `ToolSchema`
   |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/globals/tool_api_standard.rs:127:27
    |
127 | //! - Direct tool access (Tool.tool_name) uses lazy loading
    |                           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
127 - //! - Direct tool access (Tool.tool_name) uses lazy loading
127 + //! - Direct tool access (`Tool.tool_name`) uses lazy loading
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/globals/tool_api_standard.rs:172:23
    |
172 | /// Convert from core ToolSchema to standard schema
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
172 - /// Convert from core ToolSchema to standard schema
172 + /// Convert from core `ToolSchema` to standard schema
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/hook_bridge.rs:417:5
    |
417 | /     fn create_hook_event(
418 | |         hook_point: &HookPoint,
419 | |         status: &str,
420 | |         correlation_id: Uuid,
...   |
444 | |         Ok(event)
445 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
422 -     ) -> Result<UniversalEvent, LLMSpellError> {
422 +     ) -> llmspell_events::UniversalEvent {
    |
help: ...and then change returning expressions
    |
444 -         Ok(event)
444 +         event
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/agent_bridge.rs:108:5
    |
108 |     pub fn list_agent_types(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_agent_types(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/agent_bridge.rs:113:5
    |
113 |     pub fn list_templates(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_templates(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value
   --> llmspell-bridge/src/agent_bridge.rs:855:32
    |
855 |                     "elapsed": transition.duration.map(|d| d.as_secs_f64()).unwrap_or(0.0),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`
help: use `map_or(<a>, <f>)` instead
    |
855 -                     "elapsed": transition.duration.map(|d| d.as_secs_f64()).unwrap_or(0.0),
855 +                     "elapsed": transition.duration.map_or(0.0, |d| d.as_secs_f64()),
    |

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/agent_bridge.rs:1127:16
     |
1127 |         scope: serde_json::Value,
     |                ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/agent_bridge.rs:1143:16
     |
1143 |         scope: serde_json::Value,
     |                ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: use Option::map_or_else instead of an if let/else
    --> llmspell-bridge/src/agent_bridge.rs:1721:24
     |
1721 |           let agent_id = if let Some(agent) = self.get_agent(agent_name).await {
     |  ________________________^
1722 | |             agent.metadata().id.to_string()
1723 | |         } else {
...    |
1726 | |         };
     | |_________^ help: try: `(self.get_agent(agent_name).await).map_or_else(|| agent_name.to_string(), |agent| agent.metadata().id.to_string())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: use Option::map_or_else instead of an if let/else
    --> llmspell-bridge/src/agent_bridge.rs:1766:9
     |
1766 | /         match saved_agents {
1767 | |             Some(registry) => {
1768 | |                 // Parse the registry
1769 | |                 if let Some(agents) = registry.as_array() {
...    |
1778 | |             None => Ok(vec![]),
1779 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
     |
1766 ~         saved_agents.map_or_else(|| Ok(vec![]), |registry| if let Some(agents) = registry.as_array() {
1767 +                     Ok(agents
1768 +                         .iter()
1769 +                         .filter_map(|v| v.as_str().map(String::from))
1770 +                         .collect())
1771 +                 } else {
1772 +                     Ok(vec![])
1773 +                 })
     |

warning: use Option::map_or_else instead of an if let/else
    --> llmspell-bridge/src/agent_bridge.rs:1769:17
     |
1769 | /                 if let Some(agents) = registry.as_array() {
1770 | |                     Ok(agents
1771 | |                         .iter()
1772 | |                         .filter_map(|v| v.as_str().map(String::from))
...    |
1775 | |                     Ok(vec![])
1776 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
     |
1769 ~                 registry.as_array().map_or_else(|| Ok(vec![]), |agents| Ok(agents
1770 +                         .iter()
1771 +                         .filter_map(|v| v.as_str().map(String::from))
1772 +                         .collect()))
     |

warning: use Option::map_or_else instead of an if let/else
    --> llmspell-bridge/src/agent_bridge.rs:1798:17
     |
1798 | /                 if let Some(agents) = registry.as_array() {
1799 | |                     agents
1800 | |                         .iter()
1801 | |                         .filter_map(|v| v.as_str().map(String::from))
...    |
1804 | |                     vec![]
1805 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
     |
1798 ~                 registry.as_array().map_or_else(|| vec![], |agents| agents
1799 +                         .iter()
1800 +                         .filter_map(|v| v.as_str().map(String::from))
1801 +                         .collect::<Vec<_>>())
     |

warning: use Option::map_or_else instead of an if let/else
    --> llmspell-bridge/src/agent_bridge.rs:1847:17
     |
1847 | /                 if let Some(agents) = registry.as_array() {
1848 | |                     agents
1849 | |                         .iter()
1850 | |                         .filter_map(|v| v.as_str().map(String::from))
...    |
1854 | |                     vec![]
1855 | |                 }
     | |_________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
     |
1847 ~                 registry.as_array().map_or_else(|| vec![], |agents| agents
1848 +                         .iter()
1849 +                         .filter_map(|v| v.as_str().map(String::from))
1850 +                         .filter(|name| name != agent_name)
1851 +                         .collect::<Vec<_>>())
     |

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> llmspell-bridge/src/multi_agent.rs:94:41
   |
94 |     for (agent_id, task_name, input) in agent_tasks.iter() {
   |                                         ^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `agent_tasks`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-bridge/src/multi_agent.rs:100:54
    |
100 |                     agent_id: ComponentId::from_name(&agent_id),
    |                                                      ^^^^^^^^^ help: change this to: `agent_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `-W clippy::needless-borrow` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::needless_borrow)]`

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-bridge/src/multi_agent.rs:135:54
    |
135 |                     agent_id: ComponentId::from_name(&agent_id),
    |                                                      ^^^^^^^^^ help: change this to: `agent_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> llmspell-bridge/src/multi_agent.rs:202:46
    |
202 |             agent_id: ComponentId::from_name(&coordinator_agent),
    |                                              ^^^^^^^^^^^^^^^^^^ help: change this to: `coordinator_agent`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: casting `usize` to `i64` may wrap around the value on targets with 64-bit wide pointers
   --> llmspell-bridge/src/multi_agent.rs:227:66
    |
227 |         LoopWorkflowBuilder::new(name.to_string()).with_range(0, collaboration_rounds as i64, 1);
    |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: this could be a `const fn`
  --> llmspell-bridge/src/orchestration.rs:85:5
   |
85 | /     pub fn max_concurrent_workflows(mut self, max: usize) -> Self {
86 | |         self.limits.max_concurrent_workflows = max;
87 | |         self
88 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
85 |     pub const fn max_concurrent_workflows(mut self, max: usize) -> Self {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/orchestration.rs:92:5
   |
92 | /     pub fn max_agent_invocations(mut self, max: usize) -> Self {
93 | |         self.limits.max_agent_invocations = max;
94 | |         self
95 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
92 |     pub const fn max_agent_invocations(mut self, max: usize) -> Self {
   |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:99:5
    |
99  | /     pub fn max_memory_mb(mut self, max: usize) -> Self {
100 | |         self.limits.max_memory_mb = max;
101 | |         self
102 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
99  |     pub const fn max_memory_mb(mut self, max: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:106:5
    |
106 | /     pub fn build(self) -> ResourceLimits {
107 | |         self.limits
108 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
106 |     pub const fn build(self) -> ResourceLimits {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:154:5
    |
154 | /     pub fn strategy(mut self, strategy: OrchestrationStrategy) -> Self {
155 | |         self.config.strategy = strategy;
156 | |         self
157 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
154 |     pub const fn strategy(mut self, strategy: OrchestrationStrategy) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:161:5
    |
161 | /     pub fn max_depth(mut self, depth: usize) -> Self {
162 | |         self.config.max_depth = depth;
163 | |         self
164 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
161 |     pub const fn max_depth(mut self, depth: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:168:5
    |
168 | /     pub fn timeout_seconds(mut self, timeout: u64) -> Self {
169 | |         self.config.timeout_seconds = timeout;
170 | |         self
171 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
168 |     pub const fn timeout_seconds(mut self, timeout: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:175:5
    |
175 | /     pub fn allow_parallel(mut self, allow: bool) -> Self {
176 | |         self.config.allow_parallel = allow;
177 | |         self
178 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
175 |     pub const fn allow_parallel(mut self, allow: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:182:5
    |
182 | /     pub fn resource_limits(mut self, limits: ResourceLimits) -> Self {
183 | |         self.config.resource_limits = limits;
184 | |         self
185 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
182 |     pub const fn resource_limits(mut self, limits: ResourceLimits) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:189:5
    |
189 | /     pub fn build(self) -> OrchestrationConfig {
190 | |         self.config
191 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
189 |     pub const fn build(self) -> OrchestrationConfig {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:304:5
    |
304 | /     pub fn max_attempts(mut self, attempts: usize) -> Self {
305 | |         self.config.max_attempts = attempts;
306 | |         self
307 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
304 |     pub const fn max_attempts(mut self, attempts: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:311:5
    |
311 | /     pub fn backoff_ms(mut self, ms: u64) -> Self {
312 | |         self.config.backoff_ms = ms;
313 | |         self
314 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
311 |     pub const fn backoff_ms(mut self, ms: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:318:5
    |
318 | /     pub fn exponential_backoff(mut self, exponential: bool) -> Self {
319 | |         self.config.exponential_backoff = exponential;
320 | |         self
321 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
318 |     pub const fn exponential_backoff(mut self, exponential: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:325:5
    |
325 | /     pub fn build(self) -> RetryConfig {
326 | |         self.config
327 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
325 |     pub const fn build(self) -> RetryConfig {
    |         +++++

warning: unnecessary closure used to substitute value for `Option::None`
  --> llmspell-bridge/src/standardized_workflows.rs:38:20
   |
38 |           let name = params
   |  ____________________^
39 | |             .get("name")
40 | |             .and_then(|v| v.as_str())
41 | |             .unwrap_or_else(|| workflow_type)
   | |_____________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations
   = note: `-W clippy::unnecessary-lazy-evaluations` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::unnecessary_lazy_evaluations)]`
help: use `unwrap_or` instead
   |
41 -             .unwrap_or_else(|| workflow_type)
41 +             .unwrap_or(workflow_type)
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:47:9
   |
47 | /         params
48 | |             .get("timeout")
49 | |             .and_then(serde_json::Value::as_u64)
50 | |             .map(|timeout_ms| {
51 | |                 config.max_execution_time = Some(Duration::from_millis(timeout_ms));
52 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
   = note: `-W clippy::option-map-unit-fn` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::option_map_unit_fn)]`
help: try
   |
47 ~         if let Some(timeout_ms) = params
48 +             .get("timeout")
49 +             .and_then(serde_json::Value::as_u64) { config.max_execution_time = Some(Duration::from_millis(timeout_ms)); }
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:54:9
   |
54 | /         params
55 | |             .get("continue_on_error")
56 | |             .and_then(serde_json::Value::as_bool)
57 | |             .map(|continue_on_error| {
58 | |                 config.continue_on_error = continue_on_error;
59 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
help: try
   |
54 ~         if let Some(continue_on_error) = params
55 +             .get("continue_on_error")
56 +             .and_then(serde_json::Value::as_bool) { config.continue_on_error = continue_on_error; }
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:61:9
   |
61 | /         params
62 | |             .get("max_retry_attempts")
63 | |             .and_then(serde_json::Value::as_u64)
64 | |             .map(|max_retries| {
65 | |                 config.max_retry_attempts = max_retries as u32;
66 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
help: try
   |
61 ~         if let Some(max_retries) = params
62 +             .get("max_retry_attempts")
63 +             .and_then(serde_json::Value::as_u64) { config.max_retry_attempts = max_retries as u32; }
   |

warning: casting `u64` to `u32` may truncate the value
  --> llmspell-bridge/src/standardized_workflows.rs:65:45
   |
65 |                 config.max_retry_attempts = max_retries as u32;
   |                                             ^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
   |
65 -                 config.max_retry_attempts = max_retries as u32;
65 +                 config.max_retry_attempts = u32::try_from(max_retries);
   |

warning: this macro has been superceded by `std::sync::LazyLock`
  --> llmspell-bridge/src/workflow_performance.rs:12:1
   |
12 | / lazy_static! {
13 | |     /// Cache for workflow type information to avoid repeated discovery
14 | |     static ref WORKFLOW_TYPE_CACHE: Arc<RwLock<HashMap<String, WorkflowTypeInfo>>> =
15 | |         Arc::new(RwLock::new(HashMap::new()));
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_std_lazy_statics
   = note: `-W clippy::non-std-lazy-statics` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::non_std_lazy_statics)]`

warning: this function could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflow_performance.rs:221:1
    |
221 | pub fn get_workflow_info_cached(workflow_type: &str) -> Option<WorkflowTypeInfo> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_workflow_info_cached(workflow_type: &str) -> Option<WorkflowTypeInfo>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/workflows.rs:620:5
    |
620 | /     if let Some(collection) = config.get("collection").and_then(|v| v.as_array()) {
621 | |         Ok(LoopIterator::Collection {
622 | |             values: collection.clone(),
623 | |         })
...   |
651 | |         })
652 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
620 ~     config.get("collection").and_then(|v| v.as_array()).map_or_else(|| if let Some(range) = config.get("range").and_then(|v| v.as_object()) {
621 +         let start = range
622 +             .get("start")
623 +             .and_then(serde_json::Value::as_i64)
624 +             .unwrap_or(0);
625 +         let end = range
626 +             .get("end")
627 +             .and_then(serde_json::Value::as_i64)
628 +             .unwrap_or(10);
629 +         let step = range
630 +             .get("step")
631 +             .and_then(serde_json::Value::as_i64)
632 +             .unwrap_or(1);
633 +         Ok(LoopIterator::Range { start, end, step })
634 +     } else if let Some(condition) = config.get("while_condition").and_then(|v| v.as_str()) {
635 +         Ok(LoopIterator::WhileCondition {
636 +             condition: condition.to_string(),
637 +             max_iterations: config
638 +                 .get("max_iterations")
639 +                 .and_then(serde_json::Value::as_u64)
640 +                 .map(|v| usize::try_from(v).unwrap_or(usize::MAX))
641 +                 .unwrap_or(100),
642 +         })
643 +     } else {
644 +         Err(llmspell_core::LLMSpellError::Configuration {
645 +             message: "Iterator must have 'collection', 'range', or 'while_condition'".to_string(),
646 +             source: None,
647 +         })
648 +     }, |collection| Ok(LoopIterator::Collection {
649 +             values: collection.clone(),
650 +         }))
    |

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value
   --> llmspell-bridge/src/workflows.rs:641:29
    |
641 |               max_iterations: config
    |  _____________________________^
642 | |                 .get("max_iterations")
643 | |                 .and_then(serde_json::Value::as_u64)
644 | |                 .map(|v| usize::try_from(v).unwrap_or(usize::MAX))
645 | |                 .unwrap_or(100),
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
help: use `map_or(<a>, <f>)` instead
    |
644 -                 .map(|v| usize::try_from(v).unwrap_or(usize::MAX))
644 +                 .map_or(100, |v| usize::try_from(v).unwrap_or(usize::MAX)),
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:850:5
    |
850 |     pub fn list_workflow_types(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_workflow_types(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:855:5
    |
855 |     pub fn get_workflow_info(&self, workflow_type: &str) -> Option<WorkflowInfo> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_workflow_info(&self, workflow_type: &str) -> Option<WorkflowInfo>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:860:5
    |
860 |     pub fn get_all_workflow_info(&self) -> Vec<(String, WorkflowInfo)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_all_workflow_info(&self) -> Vec<(String, WorkflowInfo)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: all fields have the same prefix: `total`
    --> llmspell-bridge/src/workflows.rs:1266:1
     |
1266 | / struct RegistryMetrics {
1267 | |     /// Total workflows registered
1268 | |     total_registered: AtomicU64,
1269 | |     /// Total templates registered
...    |
1272 | |     total_executions: AtomicU64,
1273 | | }
     | |_^
     |
     = help: remove the prefixes
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_field_names
     = note: `-W clippy::struct-field-names` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_field_names)]`

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/lua/conversion.rs:104:13
    |
104 | /             if let Some(i) = n.as_i64() {
105 | |                 Ok(LuaValue::Integer(i))
106 | |             } else if let Some(f) = n.as_f64() {
107 | |                 Ok(LuaValue::Number(f))
108 | |             } else {
109 | |                 Ok(LuaValue::Nil)
110 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
104 ~             n.as_i64().map_or_else(|| if let Some(f) = n.as_f64() {
105 +                 Ok(LuaValue::Number(f))
106 +             } else {
107 +                 Ok(LuaValue::Nil)
108 +             }, |i| Ok(LuaValue::Integer(i)))
    |

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:140:51
    |
140 | pub fn lua_table_to_agent_input(lua: &Lua, table: Table) -> mlua::Result<AgentInput> {
    |                                                   ^^^^^ help: consider taking a reference instead: `&Table`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: binding to `_` prefixed variable with no side-effect
   --> llmspell-bridge/src/lua/conversion.rs:155:9
    |
155 |     let _context: Option<ExecutionContext> = None;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::no_effect_underscore_binding)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:207:43
    |
207 | fn parse_media_content(_lua: &Lua, table: Table) -> mlua::Result<MediaContent> {
    |                                           ^^^^^ help: consider taking a reference instead: `&Table`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: use Option::map_or instead of an if let/else
   --> llmspell-bridge/src/lua/conversion.rs:226:20
    |
226 |       let metadata = if let Ok(width) = table.get::<_, u32>("width") {
    |  ____________________^
227 | |         if let Ok(height) = table.get::<_, u32>("height") {
228 | |             let color_space = table
229 | |                 .get::<_, String>("color_space")
...   |
251 | |         None
252 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
226 ~     let metadata = table.get::<_, u32>("width").map_or(None, |width| if let Ok(height) = table.get::<_, u32>("height") {
227 +             let color_space = table
228 +                 .get::<_, String>("color_space")
229 +                 .ok()
230 +                 .and_then(|cs| match cs.as_str() {
231 +                     "rgb" => Some(ColorSpace::RGB),
232 +                     "rgba" => Some(ColorSpace::RGBA),
233 +                     "grayscale" => Some(ColorSpace::Grayscale),
234 +                     "cmyk" => Some(ColorSpace::CMYK),
235 +                     _ => None,
236 +                 })
237 +                 .unwrap_or(ColorSpace::RGB);
238 + 
239 +             Some(ImageMetadata {
240 +                 width,
241 +                 height,
242 +                 color_space,
243 +                 has_transparency: false,
244 +                 dpi: None,
245 +             })
246 +         } else {
247 +             None
248 ~         });
    |

warning: use Option::map_or instead of an if let/else
   --> llmspell-bridge/src/lua/conversion.rs:227:9
    |
227 | /         if let Ok(height) = table.get::<_, u32>("height") {
228 | |             let color_space = table
229 | |                 .get::<_, String>("color_space")
230 | |                 .ok()
...   |
248 | |             None
249 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
227 ~         table.get::<_, u32>("height").map_or(None, |height| {
228 +             let color_space = table
229 +                 .get::<_, String>("color_space")
230 +                 .ok()
231 +                 .and_then(|cs| match cs.as_str() {
232 +                     "rgb" => Some(ColorSpace::RGB),
233 +                     "rgba" => Some(ColorSpace::RGBA),
234 +                     "grayscale" => Some(ColorSpace::Grayscale),
235 +                     "cmyk" => Some(ColorSpace::CMYK),
236 +                     _ => None,
237 +                 })
238 +                 .unwrap_or(ColorSpace::RGB);
239 + 
240 +             Some(ImageMetadata {
241 +                 width,
242 +                 height,
243 +                 color_space,
244 +                 has_transparency: false,
245 +                 dpi: None,
246 +             })
247 +         })
    |

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:413:56
    |
413 | pub fn workflow_result_to_lua_table(lua: &Lua, result: serde_json::Value) -> mlua::Result<Table> {
    |                                                        ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this could be a `const fn`
   --> llmspell-bridge/src/lua/globals/agent.rs:854:5
    |
854 | /     fn new(bridge: Arc<AgentBridge>) -> Self {
855 | |         Self {
856 | |             bridge,
857 | |             name: None,
...   |
873 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
854 |     const fn new(bridge: Arc<AgentBridge>) -> Self {
    |     +++++

warning: redundant clone
    --> llmspell-bridge/src/lua/globals/agent.rs:1059:45
     |
1059 |             let agent_name_for_create = name.clone();
     |                                             ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> llmspell-bridge/src/lua/globals/agent.rs:1059:41
     |
1059 |             let agent_name_for_create = name.clone();
     |                                         ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone
     = note: `-W clippy::redundant-clone` implied by `-W clippy::nursery`
     = help: to override `-W clippy::nursery` add `#[allow(clippy::redundant_clone)]`

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/lua/globals/agent.rs:1095:13
     |
1095 |     bridge: Arc<AgentBridge>,
     |             ^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<AgentBridge>`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: redundant clone
    --> llmspell-bridge/src/lua/globals/agent.rs:1541:36
     |
1541 |     let bridge_for_builder = bridge.clone();
     |                                    ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> llmspell-bridge/src/lua/globals/agent.rs:1541:30
     |
1541 |     let bridge_for_builder = bridge.clone();
     |                              ^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/globals/hook.rs:235:22
    |
235 | fn parse_priority(s: Option<String>) -> Priority {
    |                      ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Option<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-bridge/src/lua/globals/hook.rs:247:1
    |
247 | / pub fn inject_hook_global(
248 | |     lua: &Lua,
249 | |     _context: &GlobalContext,
250 | |     hook_bridge: Arc<HookBridge>,
251 | | ) -> Result<()> {
    | |_______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/lua/globals/hook.rs:440:13
    |
440 | /             if let Ok(lua_handle) = handle.borrow::<LuaHookHandle>() {
441 | |                 block_on_async::<_, _, LLMSpellError>(
442 | |                     "hook_unregister_standalone",
443 | |                     async move {
...   |
455 | |                 Ok(false) // Invalid handle, return false instead of error
456 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
440 ~             handle.borrow::<LuaHookHandle>().map_or_else(|_| Ok(false), |lua_handle| block_on_async::<_, _, LLMSpellError>(
441 +                     "hook_unregister_standalone",
442 +                     async move {
443 +                         let mut handle_lock = lua_handle.handle.write().await;
444 +                         if let Some(h) = handle_lock.take() {
445 +                             lua_handle.hook_bridge.unregister_hook(&h).await?;
446 +                             Ok::<bool, LLMSpellError>(true)
447 +                         } else {
448 +                             Ok::<bool, LLMSpellError>(false)
449 +                         }
450 +                     },
451 +                     None,
452 +                 ))
    |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/lua/globals/json.rs:10:1
   |
10 | pub fn inject_json_global(lua: &Lua) -> Result<(), LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/replay.rs:156:48
    |
156 |                     arr.push(lua_value_to_json(_lua, v)?);
    |                                                ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/replay.rs:125:22
    |
125 | fn lua_value_to_json(_lua: &Lua, value: Value) -> LuaResult<serde_json::Value> {
    |                      ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/replay.rs:163:53
    |
163 |                     map.insert(k, lua_value_to_json(_lua, v)?);
    |                                                     ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/replay.rs:125:22
    |
125 | fn lua_value_to_json(_lua: &Lua, value: Value) -> LuaResult<serde_json::Value> {
    |                      ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/lua/globals/session.rs:16:5
   |
16 | /// SessionBuilder for creating sessions with method chaining
   |     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
16 - /// SessionBuilder for creating sessions with method chaining
16 + /// `SessionBuilder` for creating sessions with method chaining
   |

warning: this could be a `const fn`
  --> llmspell-bridge/src/lua/globals/session.rs:26:5
   |
26 | /     fn new(bridge: Arc<SessionBridge>) -> Self {
27 | |         Self {
28 | |             bridge,
29 | |             name: None,
...  |
33 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
26 |     const fn new(bridge: Arc<SessionBridge>) -> Self {
   |     +++++

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/globals/session.rs:101:21
    |
101 |     session_bridge: Arc<SessionBridge>,
    |                     ^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<SessionBridge>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: redundant clone
   --> llmspell-bridge/src/lua/globals/session.rs:420:44
    |
420 |     let bridge_for_builder = session_bridge.clone();
    |                                            ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> llmspell-bridge/src/lua/globals/session.rs:420:30
    |
420 |     let bridge_for_builder = session_bridge.clone();
    |                              ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/lua/globals/session.rs:164:29
    |
164 |           let session_query = if let Some(q) = query {
    |  _____________________________^
165 | |             // Convert Lua table to SessionQuery
166 | |             let mut query = SessionQuery::default();
...   |
182 | |             SessionQuery::default()
183 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
164 ~         let session_query = query.map_or_else(SessionQuery::default, |q| {
165 +             // Convert Lua table to SessionQuery
166 +             let mut query = SessionQuery::default();
167 + 
168 +             if let Ok(Some(_status)) = q.get::<_, Option<String>>("status") {
169 +                 // Parse status - implementation would need the actual status parsing
170 +             }
171 + 
172 +             if let Ok(Some(tags)) = q.get::<_, Option<Vec<String>>>("tags") {
173 +                 query.tags = tags;
174 +             }
175 + 
176 +             if let Ok(Some(limit)) = q.get::<_, Option<usize>>("limit") {
177 +                 query.limit = Some(limit);
178 +             }
179 + 
180 +             query
181 ~         });
    |

warning: all if blocks contain the same code at the end
  --> llmspell-bridge/src/lua/globals/streaming.rs:56:29
   |
56 | / ...                       Ok(value)
57 | | ...                   }
   | |_______________________^
   |
   = note: the end suggestion probably needs some adjustments to use the expression result correctly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
   = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::branches_sharing_code)]`
help: consider moving these statements after the if
   |
56 ~                             }
57 +                             Ok(value)
   |

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-bridge/src/lua/globals/workflow.rs:20:49
   |
20 | fn _parse_workflow_step(_lua: &Lua, step_table: Table) -> mlua::Result<WorkflowStep> {
   |                                                 ^^^^^ help: consider taking a reference instead: `&Table`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-bridge/src/lua/globals/workflow.rs:107:9
    |
107 |         "fail_fast" | "failfast" | _ => ErrorStrategy::FailFast,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:154:45
    |
154 |                         and_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items
    = note: `-W clippy::used-underscore-items` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_items)]`

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:154:62
    |
154 |                         and_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                                              ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:167:44
    |
167 |                         or_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:167:61
    |
167 |                         or_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                                             ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:177:45
    |
177 |                         condition: Box::new(_parse_condition(_lua, inner)?),
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:177:62
    |
177 |                         condition: Box::new(_parse_condition(_lua, inner)?),
    |                                                              ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/lua/globals/workflow.rs:443:5
    |
443 | /// WorkflowBuilder for creating workflows with method chaining
    |     ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
443 - /// WorkflowBuilder for creating workflows with method chaining
443 + /// `WorkflowBuilder` for creating workflows with method chaining
    |

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/lua/globals/workflow.rs:453:16
    |
453 |     condition: Option<Box<dyn Fn(&serde_json::Value) -> bool + Send + Sync>>,
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/lua/globals/workflow.rs:457:21
    |
457 |     loop_condition: Option<Box<dyn Fn(&serde_json::Value) -> bool + Send + Sync>>,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:530:24
    |
530 |             let step = _parse_workflow_step(lua, step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:548:24
    |
548 |             let step = _parse_workflow_step(lua, step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:554:24
    |
554 |             let step = _parse_workflow_step(lua, step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: redundant clone
   --> llmspell-bridge/src/lua/globals/workflow.rs:696:37
    |
696 |             let workflow_name = name.clone();
    |                                     ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> llmspell-bridge/src/lua/globals/workflow.rs:696:33
    |
696 |             let workflow_name = name.clone();
    |                                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/globals/workflow.rs:755:22
    |
755 |     workflow_bridge: Arc<WorkflowBridge>,
    |                      ^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<WorkflowBridge>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: redundant clone
    --> llmspell-bridge/src/lua/globals/workflow.rs:1409:45
     |
1409 |     let bridge_for_builder = workflow_bridge.clone();
     |                                             ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> llmspell-bridge/src/lua/globals/workflow.rs:1409:30
     |
1409 |     let bridge_for_builder = workflow_bridge.clone();
     |                              ^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/lua/hook_adapter.rs:74:68
   |
74 |     /// Returns an error if the Lua value cannot be converted to a HookResult
   |                                                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
74 -     /// Returns an error if the Lua value cannot be converted to a HookResult
74 +     /// Returns an error if the Lua value cannot be converted to a `HookResult`
   |

warning: the function has a cognitive complexity of (45/25)
  --> llmspell-bridge/src/lua/sync_utils.rs:77:37
   |
77 |         tokio::task::block_in_place(|| {
   |                                     ^^
   |
   = help: you could split it up into multiple smaller functions
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity
   = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::cognitive_complexity)]`

warning: the function has a cognitive complexity of (38/25)
   --> llmspell-bridge/src/lua/sync_utils.rs:180:37
    |
180 |         tokio::task::block_in_place(|| {
    |                                     ^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-bridge/src/lua/sync_utils.rs:194:21
    |
194 | /                     match tokio::time::timeout(duration, future).await {
195 | |                         Ok(result) => result,
196 | |                         Err(_) => Err(mlua::Error::RuntimeError(format!(
197 | |                             "{op_name} timed out after {duration:?}"
198 | |                         ))),
199 | |                     }
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
194 ~                     (tokio::time::timeout(duration, future).await).map_or_else(|_| Err(mlua::Error::RuntimeError(format!(
195 +                             "{op_name} timed out after {duration:?}"
196 +                         ))), |result| result)
    |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/mod.rs:1:57
  |
1 | //! ABOUTME: JavaScript script engine implementation of ScriptEngineBridge
  |                                                         ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JavaScript script engine implementation of ScriptEngineBridge
1 + //! ABOUTME: JavaScript script engine implementation of `ScriptEngineBridge`
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/engine.rs:1:14
  |
1 | //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
  |              ^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
1 + //! ABOUTME: `JSEngine` implementation of ScriptEngineBridge trait
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/engine.rs:1:41
  |
1 | //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
  |                                         ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
1 + //! ABOUTME: JSEngine implementation of `ScriptEngineBridge` trait
  |

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/engine.rs:31:5
   |
31 | /     pub fn engine_features() -> EngineFeatures {
32 | |         EngineFeatures {
33 | |             async_execution: true, // Native async/await
34 | |             streaming: true,       // Via async generators
...  |
41 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
31 |     pub const fn engine_features() -> EngineFeatures {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/agent.rs:13:1
   |
13 | / pub fn inject_agent_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
22 | |     Ok(())
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_agent_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/event.rs:18:1
   |
18 | / pub fn inject_event_global(
19 | |     _ctx: &mut Context,
20 | |     _context: &GlobalContext,
21 | | ) -> Result<(), LLMSpellError> {
...  |
27 | |     Ok(())
28 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
18 | pub const fn inject_event_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/hook.rs:13:1
   |
13 | / pub fn inject_hook_global(_ctx: &mut boa_engine::Context, _context: &GlobalContext) -> Result<()> {
...  |
19 | |     Ok(())
20 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_hook_global(_ctx: &mut boa_engine::Context, _context: &GlobalContext) -> Result<()> {
   |     +++++

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/globals/json.rs:9:41
  |
9 | /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
  |                                         ^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
9 - /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
9 + /// Note: JavaScript already has native `JSON.parse()` and JSON.stringify()
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/globals/json.rs:9:58
  |
9 | /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
  |                                                          ^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
9 - /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
9 + /// Note: JavaScript already has native JSON.parse() and `JSON.stringify()`
  |

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/json.rs:16:1
   |
16 | / pub fn inject_json_global(
17 | |     _ctx: &mut boa_engine::Context,
18 | |     _context: &GlobalContext,
19 | | ) -> Result<(), LLMSpellError> {
...  |
25 | |     Ok(())
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
16 | pub const fn inject_json_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/state.rs:13:1
   |
13 | / pub fn inject_state_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | |     _state_global: &StateGlobal,
...  |
25 | |     Ok(())
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_state_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/streaming.rs:13:1
   |
13 | / pub fn inject_streaming_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_streaming_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/tool.rs:13:1
   |
13 | / pub fn inject_tool_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_tool_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/workflow.rs:13:1
   |
13 | / pub fn inject_workflow_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_workflow_global(
   |     +++++

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:345:13
    |
345 | /             &vec![
346 | |                 "paper_reader_agent".to_string(),
347 | |                 "concept_extractor_agent".to_string(),
348 | |                 "critic_agent".to_string(),
349 | |                 "summary_writer_agent".to_string(),
350 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
    = note: `-W clippy::useless-vec` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::useless_vec)]`
help: you can use a slice directly
    |
345 ~             &["paper_reader_agent".to_string(),
346 +                 "concept_extractor_agent".to_string(),
347 +                 "critic_agent".to_string(),
348 ~                 "summary_writer_agent".to_string()],
    |

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:395:13
    |
395 | /             &vec![
396 | |                 "fundamental_analyst".to_string(),
397 | |                 "technical_analyst".to_string(),
398 | |                 "risk_analyst".to_string(),
399 | |                 "market_analyst".to_string(),
400 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
help: you can use a slice directly
    |
395 ~             &["fundamental_analyst".to_string(),
396 +                 "technical_analyst".to_string(),
397 +                 "risk_analyst".to_string(),
398 ~                 "market_analyst".to_string()],
    |

warning: unused `async` for function with no await statements
   --> llmspell-bridge/src/workflows.rs:229:5
    |
229 | /     pub async fn create_workflow(
230 | |         workflow_type: &str,
231 | |         params: serde_json::Value,
232 | |     ) -> Result<Box<dyn WorkflowExecutor>> {
...   |
255 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: `llmspell-bridge` (lib) generated 139 warnings (run `cargo clippy --fix --lib -p llmspell-bridge` to apply 76 suggestions)
    Checking llmspell-testing v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-testing)
    Checking llmspell-cli v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-cli)
warning: `assert!(true)` will be optimized out by the compiler
   --> llmspell-testing/src/macros.rs:169:9
    |
169 |         assert!(true);
    |         ^^^^^^^^^^^^^
    |
    = help: remove it
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants
    = note: `#[warn(clippy::assertions_on_constants)]` on by default

    Checking llmspell-state-persistence v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-state-persistence)
    Checking llmspell-tools v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-tools)
    Checking llmspell-core v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core)
    Checking llmspell-sessions v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-sessions)
warning: `llmspell-testing` (lib test) generated 1 warning
warning: `assert!(true)` will be optimized out by the compiler
  --> llmspell-testing/tests/unit/agents_tests.rs:12:9
   |
12 |         assert!(true);
   |         ^^^^^^^^^^^^^
   |
   = help: remove it
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants
   = note: `#[warn(clippy::assertions_on_constants)]` on by default

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/tools_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/workflows_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/bridge_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/state_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/hooks_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/events_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/storage_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/utils_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/security_validation_test.rs:154:9
    |
154 |         config.max_storage_size_bytes = 5 * 1024; // 5KB total
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::SessionManagerConfig { max_storage_size_bytes: 5 * 1024, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/security_validation_test.rs:150:9
    |
150 |         let mut config = SessionManagerConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
    = note: `#[warn(clippy::field_reassign_with_default)]` on by default

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/security_validation_test.rs:183:9
    |
183 |         config.max_storage_size_bytes = 10 * 1024;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::SessionManagerConfig { max_storage_size_bytes: 10 * 1024, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/security_validation_test.rs:181:9
    |
181 |         let mut config = SessionManagerConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: unused import: `StateManager as PersistentStateManager`
 --> llmspell-testing/tests/integration/component_state_integration.rs:5:34
  |
5 | use llmspell_state_persistence::{StateManager as PersistentStateManager, StateScope};
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::sync::Arc`
  --> llmspell-testing/tests/integration/component_state_integration.rs:10:5
   |
10 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: `llmspell-testing` (test "unit") generated 9 warnings
warning: item in documentation is missing backticks
 --> llmspell-tools/tests/calculator_dos_protection.rs:4:24
  |
4 | //! Security tests for CalculatorTool DoS protection
  |                        ^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
4 - //! Security tests for CalculatorTool DoS protection
4 + //! Security tests for `CalculatorTool` DoS protection
  |

warning: calling `FileOperationsConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_sandbox_escape_tests.rs:13:45
   |
13 |     let file_tool = FileOperationsTool::new(Default::default());
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: item in documentation is missing backticks
 --> llmspell-tools/tests/calculator_dos_protection.rs:4:39
  |
4 | //! Security tests for CalculatorTool DoS protection
  |                                       ^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
4 - //! Security tests for CalculatorTool DoS protection
4 + //! Security tests for CalculatorTool `DoS` protection
  |

warning: calling `FileOperationsConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_sandbox_escape_tests.rs:57:45
   |
57 |     let file_tool = FileOperationsTool::new(Default::default());
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: binding to `_` prefixed variable with no side-effect
  --> llmspell-agents/examples/multi_agent_coordinator.rs:54:9
   |
54 |     let _data_agent = data_agent_result.agent;
   |         ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding
   = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::no_effect_underscore_binding)]`

warning: binding to `_` prefixed variable with no side-effect
  --> llmspell-agents/examples/multi_agent_coordinator.rs:69:9
   |
69 |     let _analysis_agent = analysis_agent_result.agent;
   |         ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: binding to `_` prefixed variable with no side-effect
  --> llmspell-agents/examples/multi_agent_coordinator.rs:80:9
   |
80 |     let _monitor_agent = monitor_result.agent;
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_sandbox_escape_tests.rs:83:49
   |
83 |     let process_tool = ProcessExecutorTool::new(Default::default());
   |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: unnecessary hashes around raw string literal
   --> llmspell-tools/tests/csv_analyzer_integration.rs:168:23
    |
168 |       let csv_content = r#"id,email,age
    |  _______________________^
169 | | 1,john@example.com,25
170 | | 2,invalid-email,30
171 | | 3,mary@test.org,150
172 | | 4,bob@demo.net,-5
173 | | "#;
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_raw_string_hashes
    = note: `-W clippy::needless-raw-string-hashes` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_raw_string_hashes)]`
help: remove all the hashes around the string literal
    |
168 ~     let csv_content = r"id,email,age
169 | 1,john@example.com,25
...
172 | 4,bob@demo.net,-5
173 ~ ";
    |

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:136:43
    |
136 |     let search_tool = FileSearchTool::new(Default::default(), sandbox);
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: unnecessary hashes around raw string literal
   --> llmspell-tools/tests/csv_analyzer_integration.rs:207:23
    |
207 |       let csv_content = r#"product,price,quantity
    |  _______________________^
208 | | Apple,1.50,100
209 | | Banana,0.75,200
210 | | Orange,2.00,150
211 | | "#;
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_raw_string_hashes
help: remove all the hashes around the string literal
    |
207 ~     let csv_content = r"product,price,quantity
208 | Apple,1.50,100
209 | Banana,0.75,200
210 | Orange,2.00,150
211 ~ ";
    |

warning: `llmspell-sessions` (test "security_validation_test") generated 2 warnings
warning: unused `async` for function with no await statements
  --> llmspell-bridge/tests/sync_behavior_test.rs:12:1
   |
12 | / async fn create_test_registry() -> Arc<ComponentRegistry> {
13 | |     let registry = Arc::new(ComponentRegistry::new());
14 | |     registry
15 | |         .register_tool("calculator".to_string(), Arc::new(CalculatorTool::new()))
16 | |         .unwrap();
17 | |     registry
18 | | }
   | |_^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
   = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/calculator_dos_protection.rs:34:17
   |
34 | /                 if let Some(error) = output.get("error") {
35 | |                     if let Some(message) = error.get("message") {
36 | |                         Err(message.as_str().unwrap_or("Unknown error").to_string())
37 | |                     } else {
...  |
41 | |                     Err("Unknown error".to_string())
42 | |                 }
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
   = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
   |
34 ~                 output.get("error").map_or_else(|| Err("Unknown error".to_string()), |error| if let Some(message) = error.get("message") {
35 +                         Err(message.as_str().unwrap_or("Unknown error").to_string())
36 +                     } else {
37 +                         Err("Unknown error".to_string())
38 +                     })
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/calculator_dos_protection.rs:35:21
   |
35 | /                     if let Some(message) = error.get("message") {
36 | |                         Err(message.as_str().unwrap_or("Unknown error").to_string())
37 | |                     } else {
38 | |                         Err("Unknown error".to_string())
39 | |                     }
   | |_____________________^ help: try: `error.get("message").map_or_else(|| Err("Unknown error".to_string()), |message| Err(message.as_str().unwrap_or("Unknown error").to_string()))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:173:47
    |
173 |     let monitor_tool = SystemMonitorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: unused `async` for function with no await statements
  --> llmspell-bridge/tests/sync_behavior_test.rs:31:1
   |
31 | / async fn create_test_engine() -> LuaEngine {
32 | |     let config = LuaConfig::default();
33 | |     LuaEngine::new(&config).expect("Failed to create Lua engine")
34 | | }
   | |_^
   |
   = help: consider removing the `async` from this function
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:206:45
    |
206 |     let file_tool = FileOperationsTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_sandbox_escape_tests.rs:246:49
    |
246 |     let process_tool = ProcessExecutorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:19:74
   |
19 |                 {"name": "Alice", "department": "Engineering", "salary": 120000},
   |                                                                          ^^^^^^ help: consider: `120_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:21:76
   |
21 |                 {"name": "Charlie", "department": "Engineering", "salary": 110000}
   |                                                                            ^^^^^^ help: consider: `110_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:24:43
   |
24 |                 "Engineering": {"budget": 5000000, "head": "Alice"},
   |                                           ^^^^^^^ help: consider: `5_000_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> llmspell-tools/tests/json_processor_integration.rs:25:37
   |
25 |                 "Sales": {"budget": 2000000, "head": "David"}
   |                                     ^^^^^^^ help: consider: `2_000_000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/json_processor_integration.rs:355:31
    |
355 |                     "budget": 1000000
    |                               ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/json_processor_integration.rs:359:31
    |
359 |                     "budget": 500000
    |                               ^^^^^^ help: consider: `500_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: use of `format!` to build up a string from an iterator
  --> llmspell-tools/tests/calculator_dos_protection.rs:65:20
   |
65 |     let many_ops = (0..110).map(|i| format!("{i} + ")).collect::<String>() + "0";
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: call `fold` instead
  --> llmspell-tools/tests/calculator_dos_protection.rs:65:29
   |
65 |     let many_ops = (0..110).map(|i| format!("{i} + ")).collect::<String>() + "0";
   |                             ^^^
help: ... and use the `write!` macro here
  --> llmspell-tools/tests/calculator_dos_protection.rs:65:37
   |
65 |     let many_ops = (0..110).map(|i| format!("{i} + ")).collect::<String>() + "0";
   |                                     ^^^^^^^^^^^^^^^^^
   = note: this can be written more efficiently by appending to a `String` directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_collect
   = note: `-W clippy::format-collect` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_collect)]`

warning: this function has too many lines (102/100)
   --> llmspell-tools/tests/security_hardening_test.rs:13:7
    |
13  |   async fn test_calculator_dos_protection_comprehensive() {
    |  _______^
14  | |     let tool = CalculatorTool::new();
...   |
132 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: use Option::map_or instead of an if let/else
  --> llmspell-tools/tests/calculator_dos_protection.rs:77:13
   |
77 | /             if let Ok(ref output) = result {
78 | |                 output["result"]["result"].as_str() == Some("Infinity")
79 | |             } else {
80 | |                 false
81 | |             }
   | |_____________^ help: try: `result.as_ref().map_or(false, |output| output["result"]["result"].as_str() == Some("Infinity"))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: casts from `i32` to `f64` can be expressed infallibly using `From`
   --> llmspell-tools/tests/calculator_dos_protection.rs:135:41
    |
135 |         vars[format!("var{i}")] = json!(i as f64);
    |                                         ^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `f64::from` instead
    |
135 -         vars[format!("var{i}")] = json!(i as f64);
135 +         vars[format!("var{i}")] = json!(f64::from(i));
    |

warning: item in documentation is missing backticks
 --> llmspell-tools/tests/csv_analyzer_integration.rs:1:36
  |
1 | //! ABOUTME: Integration tests for CsvAnalyzerTool with real-world CSV scenarios
  |                                    ^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! ABOUTME: Integration tests for CsvAnalyzerTool with real-world CSV scenarios
1 + //! ABOUTME: Integration tests for `CsvAnalyzerTool` with real-world CSV scenarios
  |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/calculator_dos_protection.rs:186:18
    |
186 |         .map(|i| format!("sin({})", i))
    |                  ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
186 -         .map(|i| format!("sin({})", i))
186 +         .map(|i| format!("sin({i})"))
    |

warning: useless conversion to the same type: `llmspell_workflows::WorkflowStep`
   --> llmspell-testing/benches/integrated_overhead.rs:397:37
    |
397 |                         steps: vec![step.into()],
    |                                     ^^^^^^^^^^^ help: consider removing `.into()`: `step`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
    = note: `#[warn(clippy::useless_conversion)]` on by default

warning: item in documentation is missing backticks
 --> llmspell-tools/tests/json_processor_integration.rs:1:27
  |
1 | //! Integration tests for JsonProcessorTool
  |                           ^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! Integration tests for JsonProcessorTool
1 + //! Integration tests for `JsonProcessorTool`
  |

warning: `format!(..)` appended to existing `String`
   --> llmspell-tools/tests/csv_analyzer_integration.rs:135:9
    |
135 | /         csv_content.push_str(&format!(
136 | |             "{},value_{},{}\n",
137 | |             i,
138 | |             i,
139 | |             if i % 2 == 0 { "A" } else { "B" }
140 | |         ));
    | |__________^
    |
    = help: consider using `write!` to avoid the extra allocation
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string
    = note: `-W clippy::format-push-string` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_push_string)]`

warning: unused variable: `is_active`
   --> llmspell-testing/tests/integration/component_state_integration.rs:286:42
    |
286 |         for (scope_suffix, component_id, is_active) in &components {
    |                                          ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_active`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `state_manager`
  --> llmspell-testing/tests/integration/state_migration.rs:28:9
   |
28 |     let state_manager = Arc::new(
   |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_state_manager`

warning: unused variable: `temp_dir`
   --> llmspell-testing/tests/integration/backup_recovery.rs:192:45
    |
192 |         let (state_manager, backup_manager, temp_dir) =
    |                                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_temp_dir`

warning: unused variable: `temp_dir`
   --> llmspell-testing/tests/integration/backup_recovery.rs:282:45
    |
282 |         let (state_manager, backup_manager, temp_dir) =
    |                                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_temp_dir`

warning: `llmspell-agents` (example "multi_agent_coordinator") generated 3 warnings
warning: strict comparison of `f32` or `f64`
   --> llmspell-agents/tests/registry_basic.rs:266:5
    |
266 |     assert_eq!(updated.metrics.success_rate, 0.95);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-agents/tests/registry_basic.rs:267:5
    |
267 |     assert_eq!(updated.metrics.avg_execution_time_ms, 50.0);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `llmspell-bridge` (test "sync_behavior_test") generated 2 warnings
warning: long literal lacking separators
   --> llmspell-tools/tests/security/input_validation_tests.rs:277:37
    |
277 |                 "input": "A".repeat(100000),
    |                                     ^^^^^^ help: consider: `100_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
    = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
   --> llmspell-tools/tests/security/path_security_tests.rs:266:26
    |
266 |                 "bytes": 1000000
    |                          ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: `llmspell-tools` (test "security_sandbox_escape_tests") generated 7 warnings
warning: long literal lacking separators
   --> llmspell-tools/tests/security/rate_limit_tests.rs:146:35
    |
146 |                 "content_length": 1000000,
    |                                   ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/security/rate_limit_tests.rs:213:36
    |
213 |                 "collision_count": 1000000
    |                                    ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: this looks like a formatting argument but it is not part of a formatting macro
 --> llmspell-agents/tests/communication_tests.rs:1:56
  |
1 | //! ABOUTME: Integration tests for agent communication patterns and message passing
  |                                                        ^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#literal_string_with_formatting_args
  = note: `-W clippy::literal-string-with-formatting-args` implied by `-W clippy::nursery`
  = help: to override `-W clippy::nursery` add `#[allow(clippy::literal_string_with_formatting_args)]`

warning: this looks like a formatting argument but it is not part of a formatting macro
   --> llmspell-agents/tests/communication_tests.rs:168:45
    |
168 |         .with_response(None, "Preprocessed: {input}")
    |                                             ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#literal_string_with_formatting_args

warning: length comparison to one
   --> llmspell-testing/tests/integration/state_migration.rs:417:9
    |
417 |         plan.steps.len() >= 1,
    |         ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!plan.steps.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `#[warn(clippy::len_zero)]` on by default

warning: `llmspell-tools` (test "calculator_dos_protection") generated 8 warnings (run `cargo clippy --fix --test "calculator_dos_protection"` to apply 4 suggestions)
warning: `llmspell-tools` (test "security_hardening_test") generated 1 warning
warning: casting to the same type is unnecessary (`usize` -> `usize`)
   --> llmspell-testing/tests/integration/state_migration.rs:854:9
    |
854 |         num_items as usize,
    |         ^^^^^^^^^^^^^^^^^^ help: try: `{ num_items }`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
    = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: `llmspell-tools` (test "csv_analyzer_integration") generated 4 warnings (run `cargo clippy --fix --test "csv_analyzer_integration"` to apply 3 suggestions)
warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-agents/tests/lifecycle_tests.rs:188:5
    |
188 | /     use llmspell_agents::lifecycle::events::{
189 | |         LifecycleEvent, LifecycleEventData, LifecycleEventType,
190 | |     };
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-agents/tests/lifecycle_tests.rs:189:9
    |
189 |         LifecycleEvent, LifecycleEventData, LifecycleEventType,
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-agents/tests/lifecycle_tests.rs:189:25
    |
189 |         LifecycleEvent, LifecycleEventData, LifecycleEventType,
    |                         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-agents/tests/lifecycle_tests.rs:189:45
    |
189 |         LifecycleEvent, LifecycleEventData, LifecycleEventType,
    |                                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-agents/tests/lifecycle_tests.rs:191:5
    |
191 |     use llmspell_agents::lifecycle::state_machine::AgentState;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: `llmspell-testing` (bench "integrated_overhead") generated 1 warning (run `cargo clippy --fix --bench "integrated_overhead"` to apply 1 suggestion)
warning: `llmspell-tools` (test "json_processor_integration") generated 7 warnings (run `cargo clippy --fix --test "json_processor_integration"` to apply 1 suggestion)
warning: `llmspell-agents` (test "registry_basic") generated 2 warnings
warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-tools/tests/common/mod.rs:17:1
   |
17 | pub fn create_agent_input(params: Value) -> Result<AgentInput, LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-tools/tests/common/mod.rs:31:1
   |
31 | pub fn create_simple_input(input: &str) -> Result<AgentInput, LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-tools/tests/common/mod.rs:37:1
   |
37 | pub fn assert_success_output(output: &AgentOutput, expected_fields: &[&str]) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-tools/tests/common/mod.rs:38:31
   |
38 |     let output_value: Value = serde_json::from_str(&output.text).unwrap();
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-tools/tests/common/mod.rs:55:1
   |
55 | pub fn assert_error_output(output: &AgentOutput, error_pattern: &str) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-tools/tests/common/mod.rs:56:31
   |
56 |     let output_value: Value = serde_json::from_str(&output.text).unwrap();
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/common/mod.rs:64:21
   |
64 |       let error_msg = if let Some(error_str) = output_value["error"].as_str() {
   |  _____________________^
65 | |         // Simple string error format
66 | |         error_str.to_string()
67 | |     } else if let Some(error_obj) = output_value["error"].as_object() {
...  |
76 | |         panic!("Expected error field in output, got: {output_value}");
77 | |     };
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
   = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
   |
64 ~     let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
65 +         // Complex error object format - try message field first
66 +         if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
67 +             msg.to_string()
68 +         } else {
69 +             // Fallback to serializing the entire error object
70 +             serde_json::to_string(error_obj).unwrap_or_else(|_| format!("{error_obj:?}"))
71 +         }
72 +     } else {
73 +         panic!("Expected error field in output, got: {output_value}");
74 ~     }, |error_str| error_str.to_string());
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/common/mod.rs:69:9
   |
69 | /         if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
70 | |             msg.to_string()
71 | |         } else {
...  |
74 | |         }
   | |_________^ help: try: `error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj).unwrap_or_else(|_| format!("{error_obj:?}")), |msg| msg.to_string())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-tools/tests/common/mod.rs:148:1
    |
148 | pub fn assert_json_contains(actual: &Value, expected: &Value) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-tools/tests/common/mod.rs:152:17
    |
152 | /                 assert!(
153 | |                     actual_map.contains_key(key),
154 | |                     "Expected key '{key}' not found in actual JSON"
155 | |                 );
    | |_________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `llmspell-agents` (test "communication_tests") generated 2 warnings
warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/auth_tests.rs:494:14
    |
494 |             .collect();
    |              ^^^^^^^
...
497 |         assert!(auth_tests.len() > 15);
    |                 ---------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
    = note: `-W clippy::needless-collect` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::needless_collect)]`
help: take the original Iterator's count instead of collecting it and finding the length
    |
491 ~         
492 |
493 |         // Should have comprehensive authentication test coverage
494 ~         assert!(tests
495 +             .iter()
496 ~             .filter(|t| t.categories.contains(&TestCategory::Authentication)).count() > 15);
    |

warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/auth_tests.rs:505:14
    |
505 |             .collect();
    |              ^^^^^^^
...
508 |         assert!(authz_tests.len() > 5);
    |                 ----------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
502 ~         
503 |
504 |         // Should have authorization test coverage
505 ~         assert!(tests
506 +             .iter()
507 ~             .filter(|t| t.categories.contains(&TestCategory::Authorization)).count() > 5);
    |

warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/data_exposure_tests.rs:451:14
    |
451 |             .collect();
    |              ^^^^^^^
...
454 |         assert_eq!(disclosure_tests.len(), tests.len());
    |                    ---------------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
448 ~         
449 |
450 |         // All data exposure tests should be information disclosure
451 ~         assert_eq!(tests
452 +             .iter()
453 ~             .filter(|t| t.categories.contains(&TestCategory::InformationDisclosure)).count(), tests.len());
    |

warning: `llmspell-testing` (test "integration") generated 8 warnings (run `cargo clippy --fix --test "integration"` to apply 4 suggestions)
warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/input_validation_tests.rs:497:14
    |
497 |             .collect();
    |              ^^^^^^^
...
500 |         assert!(injection_tests.len() > 20);
    |                 --------------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
494 ~         
495 |
496 |         // Should have comprehensive injection test coverage
497 ~         assert!(tests
498 +             .iter()
499 ~             .filter(|t| t.categories.contains(&TestCategory::Injection)).count() > 20);
    |

warning: `llmspell-agents` (test "lifecycle_tests") generated 5 warnings
warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/rate_limit_tests.rs:422:14
    |
422 |             .collect();
    |              ^^^^^^^
...
425 |         assert_eq!(dos_tests.len(), tests.len());
    |                    --------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
419 ~         
420 |
421 |         // All rate limit tests should be DoS category
422 ~         assert_eq!(tests
423 +             .iter()
424 ~             .filter(|t| t.categories.contains(&TestCategory::DoS)).count(), tests.len());
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:53:5
   |
53 | /     pub fn with_attack_vector(mut self, vector: impl Into<String>) -> Self {
54 | |         self.attack_vector = vector.into();
55 | |         self
56 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
   = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:66:5
   |
66 | /     pub fn with_response(mut self, response: impl Into<String>) -> Self {
67 | |         self.response = Some(response.into());
68 | |         self
69 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:72:5
   |
72 | /     pub fn with_error(mut self, error: impl Into<String>) -> Self {
73 | |         self.error = Some(error.into());
74 | |         self
75 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:85:5
   |
85 | /     pub fn add_metadata(mut self, key: impl Into<String>, value: Value) -> Self {
86 | |         self.metadata.insert(key.into(), value);
87 | |         self
88 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:303:21
    |
303 |     fn create_input(&self, payload: &Value) -> Result<AgentInput> {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-tools/tests/security/test_framework.rs:303:5
    |
303 | /     fn create_input(&self, payload: &Value) -> Result<AgentInput> {
304 | |         let mut input = AgentInput::text("");
305 | |
306 | |         if let Value::Object(params) = payload {
...   |
314 | |         Ok(input)
315 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
303 -     fn create_input(&self, payload: &Value) -> Result<AgentInput> {
303 +     fn create_input(&self, payload: &Value) -> llmspell_core::types::AgentInput {
    |
help: ...and then change returning expressions
    |
314 -         Ok(input)
314 +         input
    |

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:318:25
    |
318 |     fn check_prevention(&self, output: &AgentOutput, expected: &ExpectedBehavior) -> bool {
    |                         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: temporary with significant `Drop` can be early dropped
   --> llmspell-tools/tests/security/test_framework.rs:335:17
    |
334 |       async fn update_stats(&self, result: &SecurityTestResult, test_case: &SecurityTestCase) {
    |  _____________________________________________________________________________________________-
335 | |         let mut stats = self.stats.lock().await;
    | |                 ^^^^^
336 | |         stats.total_tests += 1;
...   |
355 | |     }
    | |_____- temporary `stats` is currently being dropped at the end of its contained scope
    |
    = note: this might lead to unnecessary resource contention
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening
    = note: `-W clippy::significant-drop-tightening` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::significant_drop_tightening)]`
help: drop the temporary after the end of its last usage
    |
350 ~         let tool_stats = stats.by_tool.entry(result.tool_name.clone()).or_default();
351 +         drop(stats);
    |

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:374:21
    |
374 |     fn print_result(&self, result: &SecurityTestResult) {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:417:32
    |
417 |     fn extract_vulnerabilities(&self, results: &[SecurityTestResult]) -> Vec<Vulnerability> {
    |                                ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-tools/tests/security/test_framework.rs:464:1
    |
464 | pub fn create_params_input(params: Value) -> Result<AgentInput> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-tools/tests/security/test_framework.rs:464:36
    |
464 | pub fn create_params_input(params: Value) -> Result<AgentInput> {
    |                                    ^^^^^ help: consider taking a reference instead: `&Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: `llmspell-tools` (test "lib") generated 28 warnings
warning: binding's name is too similar to existing binding
   --> llmspell-bridge/src/event_bridge.rs:282:13
    |
282 |         let received = tokio::time::timeout(std::time::Duration::from_millis(100), receiver.recv())
    |             ^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-bridge/src/event_bridge.rs:266:26
    |
266 |         let (sub_id, mut receiver) = bridge
    |                          ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-bridge/src/registry.rs:214:34
    |
214 |             Ok(AgentOutput::text(format!("Error: {}", error)))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
214 -             Ok(AgentOutput::text(format!("Error: {}", error)))
214 +             Ok(AgentOutput::text(format!("Error: {error}")))
    |

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-sessions/tests/policy_performance_test.rs:152:9
    |
152 |         policy_config.composition_pattern = pattern;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `llmspell_sessions::policies::SessionPolicyConfig { composition_pattern: pattern, ..Default::default() }` and removing relevant reassignments
   --> llmspell-sessions/tests/policy_performance_test.rs:151:9
    |
151 |         let mut policy_config = SessionPolicyConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
    = note: `#[warn(clippy::field_reassign_with_default)]` on by default

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/event_bridge.rs:250:55
    |
250 |         let providers = Arc::new(ProviderManager::new(Default::default()).await.unwrap());
    |                                                       ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: `llmspell-sessions` (test "policy_performance_test") generated 1 warning
warning: calling `ProviderManagerConfig::default()` is more clear than this expression
  --> llmspell-bridge/src/globals/hook_global.rs:67:43
   |
67 |             Arc::new(ProviderManager::new(Default::default()).await.unwrap()),
   |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/globals/injection.rs:212:9
    |
212 |         assert_eq!(cache.hit_rate(), 0.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/globals/injection.rs:219:9
    |
219 |         assert_eq!(cache.hit_rate(), 0.7);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/globals/injection.rs:223:9
    |
223 |         assert_eq!(cache.hit_rate(), 0.0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/globals/session_infrastructure.rs:177:43
    |
177 |             Arc::new(ProviderManager::new(Default::default()).await.unwrap()),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:38:37
   |
38 |     let tool = FileWatcherTool::new(Default::default(), sandbox.clone());
   |                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `FileConverterConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:45:39
   |
45 |     let tool = FileConverterTool::new(Default::default(), sandbox.clone());
   |                                       ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:51:36
   |
51 |     let tool = FileSearchTool::new(Default::default(), sandbox);
   |                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:59:43
   |
59 |     let tool = EnvironmentReaderTool::new(Default::default());
   |                                           ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:65:41
   |
65 |     let tool = ProcessExecutorTool::new(Default::default());
   |                                         ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:71:40
   |
71 |     let tool = ServiceCheckerTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:77:39
   |
77 |     let tool = SystemMonitorTool::new(Default::default());
   |                                       ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `AudioProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:85:40
   |
85 |     let tool = AudioProcessorTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `AudioProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `VideoProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:91:40
   |
91 |     let tool = VideoProcessorTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `VideoProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ImageProcessorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/remaining_tools_basic.rs:97:40
   |
97 |     let tool = ImageProcessorTool::new(Default::default());
   |                                        ^^^^^^^^^^^^^^^^^^ help: try: `ImageProcessorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:104:35
    |
104 |     let tool = WebSearchTool::new(Default::default()).unwrap();
    |                                   ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:112:40
    |
112 |     let tool = HashCalculatorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:118:41
    |
118 |     let tool = TextManipulatorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:124:39
    |
124 |     let tool = UuidGeneratorTool::new(Default::default());
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:137:39
    |
137 |         Box::new(FileWatcherTool::new(Default::default(), sandbox.clone())),
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:138:41
    |
138 |         Box::new(FileConverterTool::new(Default::default(), sandbox.clone())),
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:139:38
    |
139 |         Box::new(FileSearchTool::new(Default::default(), sandbox)),
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:140:45
    |
140 |         Box::new(EnvironmentReaderTool::new(Default::default())),
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:141:43
    |
141 |         Box::new(ProcessExecutorTool::new(Default::default())),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:142:42
    |
142 |         Box::new(ServiceCheckerTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:143:41
    |
143 |         Box::new(SystemMonitorTool::new(Default::default())),
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `AudioProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:144:42
    |
144 |         Box::new(AudioProcessorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `AudioProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `VideoProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:145:42
    |
145 |         Box::new(VideoProcessorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `VideoProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ImageProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:146:42
    |
146 |         Box::new(ImageProcessorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `ImageProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:147:37
    |
147 |         Box::new(WebSearchTool::new(Default::default()).unwrap()),
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:148:42
    |
148 |         Box::new(HashCalculatorTool::new(Default::default())),
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:149:43
    |
149 |         Box::new(TextManipulatorTool::new(Default::default())),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:150:41
    |
150 |         Box::new(UuidGeneratorTool::new(Default::default())),
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:174:40
    |
174 |     let tool = HashCalculatorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:195:39
    |
195 |     let tool = UuidGeneratorTool::new(Default::default());
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:215:35
    |
215 |     let tool = WebSearchTool::new(Default::default()).unwrap();
    |                                   ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-bridge/src/globals/state_infrastructure.rs:269:9
    |
269 |         config.enabled = true;
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `runtime::StatePersistenceConfig { enabled: true, ..Default::default() }` and removing relevant reassignments
   --> llmspell-bridge/src/globals/state_infrastructure.rs:268:9
    |
268 |         let mut config = StatePersistenceConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default
    = note: `-W clippy::field-reassign-with-default` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::field_reassign_with_default)]`

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/globals/state_infrastructure.rs:265:43
    |
265 |             Arc::new(ProviderManager::new(Default::default()).await.unwrap()),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: field assignment outside of initializer for an instance created with Default::default()
   --> llmspell-bridge/src/globals/state_infrastructure.rs:295:9
    |
295 |         config.enabled = true;
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
note: consider initializing the variable with `runtime::StatePersistenceConfig { enabled: true, migration_enabled: true, ..Default::default() }` and removing relevant reassignments
   --> llmspell-bridge/src/globals/state_infrastructure.rs:294:9
    |
294 |         let mut config = StatePersistenceConfig::default();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/globals/state_infrastructure.rs:291:43
    |
291 |             Arc::new(ProviderManager::new(Default::default()).await.unwrap()),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:253:38
    |
253 |         let _ = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:254:40
    |
254 |         let _ = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:255:37
    |
255 |         let _ = FileSearchTool::new(Default::default(), sandbox);
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:256:44
    |
256 |         let _ = EnvironmentReaderTool::new(Default::default());
    |                                            ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:257:42
    |
257 |         let _ = ProcessExecutorTool::new(Default::default());
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:258:41
    |
258 |         let _ = ServiceCheckerTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:259:40
    |
259 |         let _ = SystemMonitorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `AudioProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:260:41
    |
260 |         let _ = AudioProcessorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `AudioProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `VideoProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:261:41
    |
261 |         let _ = VideoProcessorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `VideoProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ImageProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:262:41
    |
262 |         let _ = ImageProcessorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `ImageProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:263:36
    |
263 |         let _ = WebSearchTool::new(Default::default()).unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:264:41
    |
264 |         let _ = HashCalculatorTool::new(Default::default());
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:265:42
    |
265 |         let _ = TextManipulatorTool::new(Default::default());
    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/remaining_tools_basic.rs:266:40
    |
266 |         let _ = UuidGeneratorTool::new(Default::default());
    |                                        ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: this function has too many lines (717/100)
   --> llmspell-bridge/tests/simple_tool_integration_test.rs:5:7
    |
5   |   async fn test_simple_tool_integration() {
    |  _______^
6   | |     use llmspell_bridge::{
7   | |         engine::factory::{EngineFactory, LuaConfig},
8   | |         providers::{ProviderManager, ProviderManagerConfig},
...   |
875 | |     println!("\n✅ All integration tests passed!");
876 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/tests/simple_tool_integration_test.rs:161:13
    |
161 |             assert_eq!(obj.get("result").unwrap().as_f64().unwrap(), 14.0);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-W clippy::float-cmp` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::float_cmp)]`
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-bridge/tests/simple_tool_integration_test.rs:939:25
    |
939 |         let per_op_ms = elapsed.as_micros() as f64 / f64::from(iterations) / 1000.0;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/hook_bridge.rs:464:45
    |
464 |                 crate::ProviderManager::new(Default::default())
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/src/hook_bridge.rs:485:9
    |
485 |         struct TestAdapter;
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/src/hook_bridge.rs:486:9
    |
486 | /         impl HookAdapter for TestAdapter {
487 | |             type Context = Box<dyn std::any::Any>;
488 | |             type Result = Box<dyn std::any::Any>;
...   |
497 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/hook_bridge.rs:477:45
    |
477 |                 crate::ProviderManager::new(Default::default())
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
  --> llmspell-tools/benches/hook_performance.rs:19:9
   |
19 |         enable_hooks: false,
   |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

warning: `llmspell-tools` (test "remaining_tools_basic") generated 45 warnings
error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
  --> llmspell-tools/benches/hook_performance.rs:59:9
   |
59 |         enable_hooks: true,
   |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
  --> llmspell-tools/benches/hook_performance.rs:60:9
   |
60 |         enable_security_validation: true,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_audit_logging`
  --> llmspell-tools/benches/hook_performance.rs:61:9
   |
61 |         enable_audit_logging: true,
   |         ^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:101:9
    |
101 |         enable_hooks: false,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:107:9
    |
107 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:108:9
    |
108 |         enable_security_validation: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:196:9
    |
196 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `max_security_level`, `audit`

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_circuit_breaker`
   --> llmspell-tools/benches/hook_performance.rs:197:9
    |
197 |         enable_circuit_breaker: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `max_security_level`, `audit`

warning: `llmspell-bridge` (test "simple_tool_integration_test") generated 3 warnings
error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:243:17
    |
243 |                 enable_hooks: false,
    |                 ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

warning: calling `ResourceLimits::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:30:9
   |
30 |         Default::default(),
   |         ^^^^^^^^^^^^^^^^^^ help: try: `ResourceLimits::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:249:17
    |
249 |                 enable_hooks: true,
    |                 ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:250:17
    |
250 |                 enable_security_validation: true,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_audit_logging`
   --> llmspell-tools/benches/hook_performance.rs:251:17
    |
251 |                 enable_audit_logging: true,
    |                 ^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_circuit_breaker`
   --> llmspell-tools/benches/hook_performance.rs:252:17
    |
252 |                 enable_circuit_breaker: true,
    |                 ^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:76:48
   |
76 |             let tool = HashCalculatorTool::new(Default::default());
   |                                                ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: consider adding a `;` to the last statement for consistent formatting
   --> llmspell-bridge/tests/provider_enhancement_test.rs:113:5
    |
113 | /     assert!(
114 | |         result.is_ok(),
115 | |         "Script should handle provider errors gracefully"
116 | |     )
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned
    = note: `-W clippy::semicolon-if-nothing-returned` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::semicolon_if_nothing_returned)]`
help: add a `;` here
    |
113 ~     assert!(
114 +         result.is_ok(),
115 +         "Script should handle provider errors gracefully"
116 +     );
    |

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:90:49
   |
90 |             let tool = TextManipulatorTool::new(Default::default());
   |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:97:47
   |
97 |             let tool = UuidGeneratorTool::new(Default::default());
   |                                               ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:322:9
    |
322 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

warning: calling `CsvAnalyzerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:110:45
    |
110 |             let tool = CsvAnalyzerTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `CsvAnalyzerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:323:9
    |
323 |         enable_security_validation: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_audit_logging`
   --> llmspell-tools/benches/hook_performance.rs:324:9
    |
324 |         enable_audit_logging: true,
    |         ^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:371:9
    |
371 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:372:9
    |
372 |         enable_security_validation: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:117:47
    |
117 |             let tool = JsonProcessorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:125:39
    |
125 |                 GraphQLQueryTool::new(Default::default()).expect("Failed to create GraphQL tool");
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:133:38
    |
133 |                 HttpRequestTool::new(Default::default()).expect("Failed to create HTTP tool");
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: item in documentation is missing backticks
 --> llmspell-tools/tests/sitemap_crawler_integration.rs:1:36
  |
1 | //! ABOUTME: Integration tests for SitemapCrawlerTool
  |                                    ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
1 - //! ABOUTME: Integration tests for SitemapCrawlerTool
1 + //! ABOUTME: Integration tests for `SitemapCrawlerTool`
  |

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:154:47
    |
154 |             let tool = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:161:48
    |
161 |             let tool = FileOperationsTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:169:44
    |
169 |             let tool = FileSearchTool::new(Default::default(), sandbox.clone());
    |                                            ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:177:45
    |
177 |             let tool = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: empty String is being created manually
   --> llmspell-bridge/tests/provider_enhancement_test.rs:385:40
    |
385 |         assert_eq!(spec.provider, Some("".to_string()));
    |                                        ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new
    = note: `-W clippy::manual-string-new` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::manual_string_new)]`

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:190:51
    |
190 |             let tool = EnvironmentReaderTool::new(Default::default());
    |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:197:49
    |
197 |             let tool = ProcessExecutorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:204:48
    |
204 |             let tool = ServiceCheckerTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:211:47
    |
211 |             let tool = SystemMonitorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:224:43
    |
224 |             let tool = WebSearchTool::new(Default::default());
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:245:49
    |
245 |             let _hash = HashCalculatorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:247:50
    |
247 |             let _text = TextManipulatorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:248:48
    |
248 |             let _uuid = UuidGeneratorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `CsvAnalyzerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:251:45
    |
251 |             let _csv = CsvAnalyzerTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `CsvAnalyzerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:252:48
    |
252 |             let _json = JsonProcessorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:254:39
    |
254 |                 GraphQLQueryTool::new(Default::default()).expect("GraphQL creation failed");
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:255:46
    |
255 |             let _http = HttpRequestTool::new(Default::default()).expect("HTTP creation failed");
    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:259:53
    |
259 |             let _file_conv = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:260:53
    |
260 |             let _file_ops = FileOperationsTool::new(Default::default());
    |                                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:261:52
    |
261 |             let _file_search = FileSearchTool::new(Default::default(), sandbox.clone());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:262:52
    |
262 |             let _file_watch = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:265:51
    |
265 |             let _env = EnvironmentReaderTool::new(Default::default());
    |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:266:50
    |
266 |             let _proc = ProcessExecutorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:267:52
    |
267 |             let _service = ServiceCheckerTool::new(Default::default());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:268:50
    |
268 |             let _system = SystemMonitorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:271:50
    |
271 |             let _web_search = WebSearchTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

For more information about this error, try `rustc --explain E0560`.
warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/web_tools_error_scenarios.rs:37:33
   |
37 |                   let error_msg = if let Some(error_str) = output_value["error"].as_str() {
   |  _________________________________^
38 | |                     error_str.to_lowercase()
39 | |                 } else if let Some(error_obj) = output_value["error"].as_object() {
40 | |                     if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
...  |
55 | |                     String::new()
56 | |                 };
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
   |
37 ~                 let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
38 +                     if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
39 +                         msg.to_lowercase()
40 +                     } else {
41 +                         serde_json::to_string(error_obj)
42 +                             .unwrap_or_default()
43 +                             .to_lowercase()
44 +                     }
45 +                 } else if let Some(result) = output_value.get("result") {
46 +                     // Some tools put error in result.error
47 +                     if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
48 +                         err.to_lowercase()
49 +                     } else {
50 +                         String::new()
51 +                     }
52 +                 } else {
53 +                     String::new()
54 ~                 }, |error_str| error_str.to_lowercase());
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/web_tools_error_scenarios.rs:40:21
   |
40 | /                     if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
41 | |                         msg.to_lowercase()
42 | |                     } else {
43 | |                         serde_json::to_string(error_obj)
44 | |                             .unwrap_or_default()
45 | |                             .to_lowercase()
46 | |                     }
   | |_____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
   |
40 ~                     error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj)
41 +                             .unwrap_or_default()
42 +                             .to_lowercase(), |msg| msg.to_lowercase())
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/web_tools_error_scenarios.rs:49:21
   |
49 | /                     if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
50 | |                         err.to_lowercase()
51 | |                     } else {
52 | |                         String::new()
53 | |                     }
   | |_____________________^ help: try: `result.get("error").and_then(|e| e.as_str()).map_or_else(String::new, |err| err.to_lowercase())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
  --> llmspell-tools/tests/sitemap_crawler_integration.rs:23:5
   |
23 | /     match tool.execute(input, context).await {
24 | |         Ok(output) => {
25 | |             assert_success_output(&output, &["operation", "result"]);
...  |
40 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
   = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
   |
23 ~     if let Ok(output) = tool.execute(input, context).await {
24 +         assert_success_output(&output, &["operation", "result"]);
25 + 
26 +         let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
27 +         let result = &output_value["result"];
28 + 
29 +         // Should have URLs from sitemap
30 +         assert!(result["urls"].is_array() || result["pages"].is_array());
31 +         assert!(
32 +             result["url_count"].as_u64().unwrap_or(0) > 0
33 +                 || result["total_urls"].as_u64().unwrap_or(0) > 0
34 +         );
35 +     } else {
36 +         // Some sites might block automated access, which is okay for tests
37 +     }
   |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/web_tools_error_scenarios.rs:129:41
    |
129 |                           let error_msg = if let Some(error_str) = output_value["error"].as_str() {
    |  _________________________________________^
130 | |                             error_str.to_lowercase()
131 | |                         } else if let Some(error_obj) = output_value["error"].as_object() {
132 | |                             if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
...   |
140 | |                             String::new()
141 | |                         };
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
129 ~                         let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
130 +                             if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
131 +                                 msg.to_lowercase()
132 +                             } else {
133 +                                 serde_json::to_string(error_obj)
134 +                                     .unwrap_or_default()
135 +                                     .to_lowercase()
136 +                             }
137 +                         } else {
138 +                             String::new()
139 ~                         }, |error_str| error_str.to_lowercase());
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/web_tools_error_scenarios.rs:132:29
    |
132 | / ...                   if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
133 | | ...                       msg.to_lowercase()
134 | | ...                   } else {
135 | | ...                       serde_json::to_string(error_obj)
136 | | ...                           .unwrap_or_default()
137 | | ...                           .to_lowercase()
138 | | ...                   }
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
132 ~                             error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj)
133 +                                     .unwrap_or_default()
134 +                                     .to_lowercase(), |msg| msg.to_lowercase())
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
  --> llmspell-tools/tests/sitemap_crawler_integration.rs:83:5
   |
83 | /     match tool.execute(input, context).await {
84 | |         Ok(output) => {
85 | |             let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
86 | |             if output_value["success"].as_bool().unwrap() {
...  |
97 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try
   |
83 ~     if let Ok(output) = tool.execute(input, context).await {
84 +         let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
85 +         if output_value["success"].as_bool().unwrap() {
86 +             let result = &output_value["result"];
87 +             // If successful, check filters were applied
88 +             if let Some(urls) = result["urls"].as_array() {
89 +                 assert!(urls.len() <= 10);
90 +             }
91 +         }
92 +     } else {
93 +         // Site might not have sitemap or block access
94 +     }
   |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> llmspell-tools/tests/sitemap_crawler_integration.rs:113:5
    |
113 | /     match tool.execute(input, context).await {
114 | |         Ok(output) => {
115 | |             let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
...   |
122 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try
    |
113 ~     if let Ok(output) = tool.execute(input, context).await {
114 +         let output_value: serde_json::Value = serde_json::from_str(&output.text).unwrap();
115 +         // Should respect depth limit
116 +         assert!(output_value["success"].as_bool().is_some());
117 +     } else {
118 +         // Acceptable if no sitemap exists
119 +     }
    |

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/sitemap_crawler_integration.rs:185:13
    |
185 | /             assert!(
186 | |                 error_str.contains("timeout")
187 | |                     || error_str.contains("elapsed")
188 | |                     || error_str.contains("timed out")
...   |
193 | |                 error_str
194 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: casting `i32` to `u64` may lose the sign of the value
   --> llmspell-tools/tests/web_tools_error_scenarios.rs:293:39
    |
293 |             assert_eq!(actual_status, status as u64);
    |                                       ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

error: could not compile `llmspell-tools` (bench "hook_performance") due to 19 previous errors
warning: build failed, waiting for other jobs to finish...
warning: `llmspell-bridge` (test "provider_enhancement_test") generated 2 warnings (run `cargo clippy --fix --test "provider_enhancement_test"` to apply 2 suggestions)
warning: `llmspell-tools` (bench "tool_initialization") generated 33 warnings
warning: `llmspell-tools` (test "sitemap_crawler_integration") generated 7 warnings (2 duplicates) (run `cargo clippy --fix --test "sitemap_crawler_integration"` to apply 5 suggestions)
warning: `llmspell-tools` (test "web_tools_error_scenarios") generated 8 warnings (2 duplicates)
warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers
  --> llmspell-tools/tests/hook_performance_test.rs:93:45
   |
93 |         let avg_no_hooks = total_no_hooks / ITERATIONS as u32;
   |                                             ^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
   |
93 -         let avg_no_hooks = total_no_hooks / ITERATIONS as u32;
93 +         let avg_no_hooks = total_no_hooks / u32::try_from(ITERATIONS);
   |

warning: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers
   --> llmspell-tools/tests/hook_performance_test.rs:106:49
    |
106 |         let avg_with_hooks = total_with_hooks / ITERATIONS as u32;
    |                                                 ^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
106 -         let avg_with_hooks = total_with_hooks / ITERATIONS as u32;
106 +         let avg_with_hooks = total_with_hooks / u32::try_from(ITERATIONS);
    |

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:109:31
    |
109 |         let overhead_micros = avg_with_hooks.as_micros() as f64 - avg_no_hooks.as_micros() as f64;
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:109:67
    |
109 |         let overhead_micros = avg_with_hooks.as_micros() as f64 - avg_no_hooks.as_micros() as f64;
    |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:111:32
    |
111 |             (overhead_micros / avg_no_hooks.as_micros() as f64) * 100.0
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `i32` to `u32` may lose the sign of the value
   --> llmspell-tools/tests/hook_performance_test.rs:158:41
    |
158 |     let avg_duration = total_duration / iterations as u32;
    |                                         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: casting `i32` to `u32` may lose the sign of the value
   --> llmspell-tools/tests/hook_performance_test.rs:199:41
    |
199 |     let avg_duration = total_duration / iterations as u32;
    |                                         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:307:9
    |
307 |         duration_with_audit.as_millis() as f64 - duration_no_audit.as_millis() as f64;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:307:50
    |
307 |         duration_with_audit.as_millis() as f64 - duration_no_audit.as_millis() as f64;
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_performance_test.rs:309:28
    |
309 |         (overhead_millis / duration_no_audit.as_millis() as f64) * 100.0
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: `llmspell-tools` (test "hook_performance_test") generated 10 warnings
warning: redundant closure
    --> llmspell-bridge/src/agent_bridge.rs:2073:55
     |
2073 |             metrics.get("total_transitions").and_then(|v| v.as_u64()),
     |                                                       ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
     = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-bridge/src/agents.rs:278:13
    |
278 |             eprintln!("Agent creation failed: {:?}", e);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
278 -             eprintln!("Agent creation failed: {:?}", e);
278 +             eprintln!("Agent creation failed: {e:?}");
    |

warning: strict comparison of `f32` or `f64`
   --> llmspell-bridge/src/orchestration.rs:705:9
    |
705 |         assert_eq!(plan.success_criteria.min_success_rate, 0.8);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused import: `StateMessage`
 --> llmspell-testing/tests/agents/isolation_tests.rs:5:82
  |
5 |     IsolationBoundary, SharedScopeConfig, SharingPattern, StateIsolationManager, StateMessage,
  |                                                                                  ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `tokio::time::timeout`
  --> llmspell-testing/tests/agents/isolation_tests.rs:12:5
   |
12 | use tokio::time::timeout;
   |     ^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> llmspell-testing/tests/agents/isolation_tests.rs:97:50
   |
97 |         .create_shared_scope("shared_data", Some("admin".to_string()), shared_config)
   |                                             ---- ^^^^^^^^^^^^^^^^^^^ expected `&str`, found `String`
   |                                             |
   |                                             arguments to this enum variant are incorrect
   |
help: the type constructed contains `std::string::String` due to the type of the argument passed
  --> llmspell-testing/tests/agents/isolation_tests.rs:97:45
   |
97 |         .create_shared_scope("shared_data", Some("admin".to_string()), shared_config)
   |                                             ^^^^^-------------------^
   |                                                  |
   |                                                  this argument influences the type of `Some`
note: tuple variant defined here
  --> /private/tmp/rust-20250403-7454-rkwlec/rustc-1.86.0-src/library/core/src/option.rs:580:5
help: try removing the method call
   |
97 -         .create_shared_scope("shared_data", Some("admin".to_string()), shared_config)
97 +         .create_shared_scope("shared_data", Some("admin"), shared_config)
   |

warning: this function has too many lines (217/100)
   --> llmspell-agents/examples/decision_agent.rs:13:7
    |
13  |   async fn main() -> anyhow::Result<()> {
    |  _______^
14  | |     // Initialize logging
15  | |     tracing_subscriber::fmt().with_max_level(Level::INFO).init();
...   |
268 | |     Ok(())
269 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

error[E0308]: mismatched types
   --> llmspell-testing/tests/agents/isolation_tests.rs:97:72
    |
97  |         .create_shared_scope("shared_data", Some("admin".to_string()), shared_config)
    |          ------------------- arguments to this method are incorrect    ^^^^^^^^^^^^^ expected `&SharedScopeConfig`, found `SharedScopeConfig`
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents/src/state/isolation.rs:287:12
    |
287 |     pub fn create_shared_scope(
    |            ^^^^^^^^^^^^^^^^^^^
help: consider borrowing here
    |
97  |         .create_shared_scope("shared_data", Some("admin".to_string()), &shared_config)
    |                                                                        +

warning: single-character string constant used as pattern
  --> llmspell-tools/tests/hook_integration_tests.rs:52:34
   |
52 |     assert!(output.text.contains("4"));
   |                                  ^^^ help: consider using a `char`: `'4'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-W clippy::single-char-pattern` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_char_pattern)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:262:23
    |
262 |     let overhead_ms = duration_with_hooks.as_millis() as f64 - duration_no_hooks.as_millis() as f64;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:262:64
    |
262 |     let overhead_ms = duration_with_hooks.as_millis() as f64 - duration_no_hooks.as_millis() as f64;
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:264:24
    |
264 |         (overhead_ms / duration_no_hooks.as_millis() as f64) * 100.0
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:269:5
    |
269 | /     println!(
270 | |         "No hooks: {:?}, With hooks: {:?}, Overhead: {:.2}%",
271 | |         duration_no_hooks, duration_with_hooks, overhead_percent
272 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

error[E0308]: mismatched types
   --> llmspell-testing/tests/agents/isolation_tests.rs:257:54
    |
257 |     isolation_manager.grant_permission("contractor", scope.clone(), StatePermission::Write);
    |                       ----------------               ^^^^^^^^^^^^^ expected `&StateScope`, found `StateScope`
    |                       |
    |                       arguments to this method are incorrect
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents/src/state/isolation.rs:351:12
    |
351 |     pub fn grant_permission(
    |            ^^^^^^^^^^^^^^^^
help: consider borrowing here
    |
257 |     isolation_manager.grant_permission("contractor", &scope.clone(), StatePermission::Write);
    |                                                      +

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:275:5
    |
275 | /     assert!(
276 | |         overhead_percent < 20.0,
277 | |         "Hook overhead {:.2}% exceeds 20% threshold",
278 | |         overhead_percent
279 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:299:38
    |
299 |         let input = AgentInput::text(format!("Circuit breaker test {}", i)).with_parameter(
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
299 -         let input = AgentInput::text(format!("Circuit breaker test {}", i)).with_parameter(
299 +         let input = AgentInput::text(format!("Circuit breaker test {i}")).with_parameter(
    |

warning: this function has too many lines (129/100)
   --> llmspell-agents/examples/monitoring_agent.rs:15:7
    |
15  |   async fn main() -> anyhow::Result<()> {
    |  _______^
16  | |     // Initialize logging
17  | |     tracing_subscriber::fmt().with_max_level(Level::INFO).init();
...   |
193 | |     Ok(())
194 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: variables can be used directly in the `format!` string
   --> llmspell-tools/tests/hook_integration_tests.rs:353:38
    |
353 |         let input = AgentInput::text(format!("Test {}", name)).with_parameter("parameters", params);
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
353 -         let input = AgentInput::text(format!("Test {}", name)).with_parameter("parameters", params);
353 +         let input = AgentInput::text(format!("Test {name}")).with_parameter("parameters", params);
    |

warning: single-character string constant used as pattern
   --> llmspell-tools/tests/hook_integration_tests.rs:413:34
    |
413 |     assert!(output.text.contains("4"));
    |                                  ^^^ help: consider using a `char`: `'4'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

warning: `llmspell-agents` (example "decision_agent") generated 1 warning
error[E0308]: mismatched types
   --> llmspell-testing/tests/agents/isolation_tests.rs:265:56
    |
265 |     isolation_manager.revoke_permissions("contractor", scope.clone());
    |                       ------------------               ^^^^^^^^^^^^^ expected `&StateScope`, found `StateScope`
    |                       |
    |                       arguments to this method are incorrect
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents/src/state/isolation.rs:367:12
    |
367 |     pub fn revoke_permissions(&self, agent_id: &str, scope: &StateScope) {
    |            ^^^^^^^^^^^^^^^^^^
help: consider borrowing here
    |
265 |     isolation_manager.revoke_permissions("contractor", &scope.clone());
    |                                                        +

warning: `llmspell-agents` (example "monitoring_agent") generated 1 warning
error[E0308]: mismatched types
   --> llmspell-testing/tests/agents/isolation_tests.rs:331:43
    |
331 |         .create_pipeline("data_pipeline", stages.clone())
    |          ---------------                  ^^^^^^^^^^^^^^ expected `&[String]`, found `Vec<String>`
    |          |
    |          arguments to this method are incorrect
    |
    = note: expected reference `&[std::string::String]`
                  found struct `std::vec::Vec<std::string::String>`
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents/src/state/sharing.rs:421:12
    |
421 |     pub fn create_pipeline(
    |            ^^^^^^^^^^^^^^^
help: consider borrowing here
    |
331 |         .create_pipeline("data_pipeline", &stages.clone())
    |                                           +

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
  --> llmspell-bridge/src/lua/globals/event.rs:27:55
   |
27 |         let providers = Arc::new(ProviderManager::new(Default::default()).await.unwrap());
   |                                                       ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: variables can be used directly in the `format!` string
  --> llmspell-bridge/src/lua/globals/event.rs:91:17
   |
91 | /                 assert!(
92 | |                     outcome == "received_event" || outcome == "timeout",
93 | |                     "Should either receive event or timeout, got: {}",
94 | |                     outcome
95 | |                 );
   | |_________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

warning: variables can be used directly in the `format!` string
  --> llmspell-bridge/src/lua/globals/event.rs:98:17
   |
98 |                 panic!("Event flow test failed: {}", e);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
98 -                 panic!("Event flow test failed: {}", e);
98 +                 panic!("Event flow test failed: {e}");
   |

warning: `llmspell-tools` (test "hook_integration_tests") generated 9 warnings (run `cargo clippy --fix --test "hook_integration_tests"` to apply 6 suggestions)
warning: calling `ProviderManagerConfig::default()` is more clear than this expression
   --> llmspell-bridge/src/lua/globals/hook.rs:491:43
    |
491 |             Arc::new(ProviderManager::new(Default::default()).await.unwrap()),
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

error[E0308]: mismatched types
   --> llmspell-testing/tests/agents/isolation_tests.rs:374:55
    |
374 |         .create_shared_scope("concurrent_test", None, config)
    |          -------------------                          ^^^^^^ expected `&SharedScopeConfig`, found `SharedScopeConfig`
    |          |
    |          arguments to this method are incorrect
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents/src/state/isolation.rs:287:12
    |
287 |     pub fn create_shared_scope(
    |            ^^^^^^^^^^^^^^^^^^^
help: consider borrowing here
    |
374 |         .create_shared_scope("concurrent_test", None, &config)
    |                                                       +

error[E0308]: mismatched types
   --> llmspell-testing/tests/agents/isolation_tests.rs:452:48
    |
452 |         .create_shared_scope("writable", None, config)
    |          -------------------                   ^^^^^^ expected `&SharedScopeConfig`, found `SharedScopeConfig`
    |          |
    |          arguments to this method are incorrect
    |
note: method defined here
   --> /Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents/src/state/isolation.rs:287:12
    |
287 |     pub fn create_shared_scope(
    |            ^^^^^^^^^^^^^^^^^^^
help: consider borrowing here
    |
452 |         .create_shared_scope("writable", None, &config)
    |                                                +

For more information about this error, try `rustc --explain E0308`.
warning: `llmspell-testing` (test "agents") generated 2 warnings
error: could not compile `llmspell-testing` (test "agents") due to 7 previous errors; 2 warnings emitted
warning: calling `ProviderManagerConfig::default()` is more clear than this expression
  --> llmspell-bridge/src/javascript/globals/event.rs:59:59
   |
59 |             let providers = Arc::new(ProviderManager::new(Default::default()).await.unwrap());
   |                                                           ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProviderManagerConfig::default()` is more clear than this expression
  --> llmspell-bridge/src/javascript/globals/hook.rs:41:45
   |
41 |                 crate::ProviderManager::new(Default::default())
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `ProviderManagerConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:420:13
    |
420 |             &vec!["agent1".to_string(), "agent2".to_string()],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can use a slice directly: `&["agent1".to_string(), "agent2".to_string()]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:431:13
    |
431 | /             &vec![
432 | |                 (
433 | |                     "agent1".to_string(),
434 | |                     "task1".to_string(),
...   |
441 | |                 ),
442 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
help: you can use a slice directly
    |
431 ~             &[(
432 +                     "agent1".to_string(),
433 +                     "task1".to_string(),
434 +                     serde_json::json!({}),
435 +                 ),
436 +                 (
437 +                     "agent2".to_string(),
438 +                     "task2".to_string(),
439 +                     serde_json::json!({}),
440 ~                 )],
    |

warning: unused `async` for function with no await statements
   --> llmspell-bridge/src/agents.rs:238:5
    |
238 | /     async fn create_test_provider_manager() -> Arc<llmspell_providers::ProviderManager> {
239 | |         Arc::new(llmspell_providers::ProviderManager::new())
240 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async
    = note: `-W clippy::unused-async` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_async)]`

warning: unused `async` for function with no await statements
   --> llmspell-bridge/src/workflows.rs:229:5
    |
229 | /     pub async fn create_workflow(
230 | |         workflow_type: &str,
231 | |         params: serde_json::Value,
232 | |     ) -> Result<Box<dyn WorkflowExecutor>> {
...   |
255 | |     }
    | |_____^
    |
    = help: consider removing the `async` from this function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_async

warning: `llmspell-bridge` (lib test) generated 167 warnings (138 duplicates) (run `cargo clippy --fix --lib -p llmspell-bridge --tests` to apply 7 suggestions)
