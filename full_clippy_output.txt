    Checking llmspell-tools v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-tools)
warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/src/communication/database_connector.rs:392:37
    |
392 | / ...                   if let Ok(v) = row.try_get::<String, _>(i) {
393 | | ...                       serde_json::Value::String(v)
394 | | ...                   } else if let Ok(v) = row.try_get::<i64, _>(i) {
395 | | ...                       serde_json::Value::Number(v.into())
...   |
404 | | ...                       serde_json::Value::Null
405 | | ...                   };
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
392 ~                                     row.try_get::<String, _>(i).map_or_else(|_| if let Ok(v) = row.try_get::<i64, _>(i) {
393 +                                         serde_json::Value::Number(v.into())
394 +                                     } else if let Ok(v) = row.try_get::<f64, _>(i) {
395 +                                         serde_json::Value::Number(
396 +                                             serde_json::Number::from_f64(v)
397 +                                                 .unwrap_or(serde_json::Number::from(0)),
398 +                                         )
399 +                                     } else if let Ok(v) = row.try_get::<bool, _>(i) {
400 +                                         serde_json::Value::Bool(v)
401 +                                     } else {
402 +                                         serde_json::Value::Null
403 ~                                     }, |v| serde_json::Value::String(v));
    |

warning: function call inside of `unwrap_or`
   --> llmspell-tools/src/communication/database_connector.rs:399:50
    |
399 | ...                   .unwrap_or(serde_json::Number::from(0)),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| serde_json::Number::from(0))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: `llmspell-tools` (lib) generated 2 warnings
    Checking llmspell-agents v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-agents)
    Checking llmspell-bridge v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-bridge)
warning: unused import: `crate::providers::ProviderManagerConfig`
 --> llmspell-bridge/src/javascript/globals/event.rs:5:5
  |
5 | use crate::providers::ProviderManagerConfig;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::providers::ProviderManagerConfig`
 --> llmspell-bridge/src/javascript/globals/hook.rs:7:5
  |
7 | use crate::providers::ProviderManagerConfig;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/engine/factory.rs:391:25
    |
391 | static PLUGIN_REGISTRY: LazyLock<Arc<RwLock<HashMap<String, Box<dyn ScriptEnginePlugin>>>>> =
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
    = note: `-W clippy::type-complexity` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::type_complexity)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:394:5
    |
394 | /     pub fn javascript_config(mut self, config: JSConfig) -> Self {
395 | |         self.config.engines.javascript = config;
396 | |         self
397 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
394 |     pub const fn javascript_config(mut self, config: JSConfig) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:491:5
    |
491 | /     pub fn max_concurrent_scripts(mut self, max: usize) -> Self {
492 | |         self.config.max_concurrent_scripts = max;
493 | |         self
494 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
491 |     pub const fn max_concurrent_scripts(mut self, max: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:498:5
    |
498 | /     pub fn script_timeout_seconds(mut self, timeout: u64) -> Self {
499 | |         self.config.script_timeout_seconds = timeout;
500 | |         self
501 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
498 |     pub const fn script_timeout_seconds(mut self, timeout: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:505:5
    |
505 | /     pub fn enable_streaming(mut self, enable: bool) -> Self {
506 | |         self.config.enable_streaming = enable;
507 | |         self
508 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
505 |     pub const fn enable_streaming(mut self, enable: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/runtime.rs:512:5
    |
512 | /     pub fn security(mut self, security: SecurityConfig) -> Self {
513 | |         self.config.security = security;
514 | |         self
515 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
512 |     pub const fn security(mut self, security: SecurityConfig) -> Self {
    |         +++++

warning: more than 3 bools in a struct
   --> llmspell-bridge/src/runtime.rs:575:1
    |
575 | / pub struct StatePersistenceConfig {
576 | |     /// Enable state persistence
577 | |     pub enabled: bool,
578 | |     /// Backend type for storage (memory, file, redis, etc.)
...   |
591 | |     pub backup: Option<BackupConfig>,
592 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
    = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/storage.rs:2:78
  |
2 | //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, RocksDB)
  |                                                                              ^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
  = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
  |
2 - //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, RocksDB)
2 + //! ABOUTME: Provides discovery of available storage backends (Memory, Sled, `RocksDB`)
  |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:252:58
    |
252 |     /// Performance optimization preset (fast, balanced, storage_optimized)
    |                                                          ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
252 -     /// Performance optimization preset (fast, balanced, storage_optimized)
252 +     /// Performance optimization preset (fast, balanced, `storage_optimized`)
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:269:34
    |
269 |     /// Create a new builder for StorageConfig
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
269 -     /// Create a new builder for StorageConfig
269 +     /// Create a new builder for `StorageConfig`
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:276:17
    |
276 | /// Builder for StorageConfig
    |                 ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
276 - /// Builder for StorageConfig
276 + /// Builder for `StorageConfig`
    |

warning: this could be a `const fn`
   --> llmspell-bridge/src/storage.rs:312:5
    |
312 | /     pub fn enable_compression(mut self, enable: bool) -> Self {
313 | |         self.config.enable_compression = enable;
314 | |         self
315 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
312 |     pub const fn enable_compression(mut self, enable: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/storage.rs:319:5
    |
319 | /     pub fn enable_encryption(mut self, enable: bool) -> Self {
320 | |         self.config.enable_encryption = enable;
321 | |         self
322 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
319 |     pub const fn enable_encryption(mut self, enable: bool) -> Self {
    |         +++++

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/storage.rs:358:25
    |
358 |     /// Build the final StorageConfig
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
358 -     /// Build the final StorageConfig
358 +     /// Build the final `StorageConfig`
    |

warning: this argument is passed by value, but not consumed in the function body
  --> llmspell-bridge/src/tools.rs:48:15
   |
48 |     registry: Arc<ComponentRegistry>,
   |               ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Arc<ComponentRegistry>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
   = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/tools.rs:316:5
    |
316 | /     pub fn new(registry: Arc<ComponentRegistry>) -> Self {
317 | |         Self { registry }
318 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
316 |     pub const fn new(registry: Arc<ComponentRegistry>) -> Self {
    |         +++++

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/event_bridge.rs:53:29
   |
53 |     /// Returns an error if EventBridge initialization fails
   |                             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
53 -     /// Returns an error if EventBridge initialization fails
53 +     /// Returns an error if `EventBridge` initialization fails
   |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/event_bridge.rs:210:5
    |
210 |     pub fn get_stats(&self) -> serde_json::Value {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_stats(&self) -> serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this could be a `const fn`
   --> llmspell-bridge/src/globals/injection.rs:199:5
    |
199 | /     pub fn get_metrics(&self) -> &InjectionMetrics {
200 | |         self.registry.metrics()
201 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
199 |     pub const fn get_metrics(&self) -> &InjectionMetrics {
    |         +++++

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/globals/session_infrastructure.rs:16:1
   |
16 | / pub async fn get_or_create_session_infrastructure(
17 | |     context: &GlobalContext,
18 | |     config: &SessionConfig,
19 | | ) -> Result<SessionInfrastructure> {
   | |__________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:99:1
    |
99  | / fn get_or_create_hook_registry(context: &GlobalContext) -> Result<Arc<HookRegistry>> {
100 | |     if let Some(registry) = context.get_bridge::<HookRegistry>("hook_registry") {
101 | |         return Ok(registry);
...   |
107 | |     Ok(registry)
108 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
99  - fn get_or_create_hook_registry(context: &GlobalContext) -> Result<Arc<HookRegistry>> {
99  + fn get_or_create_hook_registry(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookRegistry> {
    |
help: ...and then change returning expressions
    |
101 ~         return registry;
102 |     }
...
106 |     context.set_bridge("hook_registry", registry.clone());
107 ~     registry
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:111:1
    |
111 | / fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
112 | |     if let Some(executor) = context.get_bridge::<HookExecutor>("hook_executor") {
113 | |         return Ok(executor);
...   |
119 | |     Ok(executor)
120 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
111 - fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
111 + fn get_or_create_hook_executor(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookExecutor> {
    |
help: ...and then change returning expressions
    |
113 ~         return executor;
114 |     }
...
118 |     context.set_bridge("hook_executor", executor.clone());
119 ~     executor
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/session_infrastructure.rs:123:1
    |
123 | / fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
124 | |     if let Some(event_bus) = context.get_bridge::<EventBus>("event_bus") {
125 | |         return Ok(event_bus);
...   |
131 | |     Ok(event_bus)
132 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
123 - fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
123 + fn get_or_create_event_bus(context: &GlobalContext) -> std::sync::Arc<llmspell_events::EventBus> {
    |
help: ...and then change returning expressions
    |
125 ~         return event_bus;
126 |     }
...
130 |     context.set_bridge("event_bus", event_bus.clone());
131 ~     event_bus
    |

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/globals/state_infrastructure.rs:21:1
   |
21 | / pub async fn get_or_create_state_infrastructure(
22 | |     context: &GlobalContext,
23 | |     config: &StatePersistenceConfig,
24 | | ) -> Result<StateInfrastructure> {
   | |________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:189:1
    |
189 | / fn create_backend_type(config: &StatePersistenceConfig) -> Result<StorageBackendType> {
190 | |     match config.backend_type.as_str() {
191 | |         "memory" => {
192 | |             debug!("Creating in-memory storage backend type");
...   |
210 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
189 - fn create_backend_type(config: &StatePersistenceConfig) -> Result<StorageBackendType> {
189 + fn create_backend_type(config: &StatePersistenceConfig) -> llmspell_state_persistence::StorageBackendType {
    |
help: ...and then change returning expressions
    |
193 ~             StorageBackendType::Memory
194 |         }
...
198 |                 .unwrap_or_else(|_| "./llmspell_state".to_string());
199 ~             StorageBackendType::Sled(SledConfig {
200 +                 path: std::path::PathBuf::from(path),
201 +                 cache_capacity: 64 * 1024 * 1024, // 64MB
202 +                 use_compression: true,
203 +             })
204 |         }
205 |         backend => {
206 |             warn!("Unknown backend type '{}', falling back to memory", backend);
207 ~             StorageBackendType::Memory
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:213:1
    |
213 | / fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
214 | |     if let Some(event_bus) = context.get_bridge::<EventBus>("event_bus") {
215 | |         return Ok(event_bus);
...   |
221 | |     Ok(event_bus)
222 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
213 - fn get_or_create_event_bus(context: &GlobalContext) -> Result<Arc<EventBus>> {
213 + fn get_or_create_event_bus(context: &GlobalContext) -> std::sync::Arc<llmspell_events::EventBus> {
    |
help: ...and then change returning expressions
    |
215 ~         return event_bus;
216 |     }
...
220 |     context.set_bridge("event_bus", event_bus.clone());
221 ~     event_bus
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:225:1
    |
225 | / fn get_or_create_correlation_tracker(
226 | |     context: &GlobalContext,
227 | | ) -> Result<Arc<EventCorrelationTracker>> {
228 | |     if let Some(tracker) = context.get_bridge::<EventCorrelationTracker>("correlation_tracker") {
...   |
235 | |     Ok(tracker)
236 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
227 - ) -> Result<Arc<EventCorrelationTracker>> {
227 + ) -> std::sync::Arc<llmspell_events::EventCorrelationTracker> {
    |
help: ...and then change returning expressions
    |
229 ~         return tracker;
230 |     }
...
234 |     context.set_bridge("correlation_tracker", tracker.clone());
235 ~     tracker
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/globals/state_infrastructure.rs:239:1
    |
239 | / fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
240 | |     if let Some(executor) = context.get_bridge::<HookExecutor>("hook_executor") {
241 | |         return Ok(executor);
...   |
247 | |     Ok(executor)
248 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
239 - fn get_or_create_hook_executor(context: &GlobalContext) -> Result<Arc<HookExecutor>> {
239 + fn get_or_create_hook_executor(context: &GlobalContext) -> std::sync::Arc<llmspell_hooks::HookExecutor> {
    |
help: ...and then change returning expressions
    |
241 ~         return executor;
242 |     }
...
246 |     context.set_bridge("hook_executor", executor.clone());
247 ~     executor
    |

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/globals/tool_api_standard.rs:79:9
   |
79 | //! ### ToolInfo
   |         ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
79 - //! ### ToolInfo
79 + //! ### `ToolInfo`
   |

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/globals/tool_api_standard.rs:89:9
   |
89 | //! ### ToolSchema
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
89 - //! ### ToolSchema
89 + //! ### `ToolSchema`
   |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/globals/tool_api_standard.rs:127:27
    |
127 | //! - Direct tool access (Tool.tool_name) uses lazy loading
    |                           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
127 - //! - Direct tool access (Tool.tool_name) uses lazy loading
127 + //! - Direct tool access (`Tool.tool_name`) uses lazy loading
    |

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/globals/tool_api_standard.rs:172:23
    |
172 | /// Convert from core ToolSchema to standard schema
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
172 - /// Convert from core ToolSchema to standard schema
172 + /// Convert from core `ToolSchema` to standard schema
    |

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-bridge/src/hook_bridge.rs:417:5
    |
417 | /     fn create_hook_event(
418 | |         hook_point: &HookPoint,
419 | |         status: &str,
420 | |         correlation_id: Uuid,
...   |
444 | |         Ok(event)
445 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
422 -     ) -> Result<UniversalEvent, LLMSpellError> {
422 +     ) -> llmspell_events::UniversalEvent {
    |
help: ...and then change returning expressions
    |
444 -         Ok(event)
444 +         event
    |

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/agent_bridge.rs:108:5
    |
108 |     pub fn list_agent_types(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_agent_types(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/agent_bridge.rs:113:5
    |
113 |     pub fn list_templates(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_templates(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/agent_bridge.rs:1127:16
     |
1127 |         scope: serde_json::Value,
     |                ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
    --> llmspell-bridge/src/agent_bridge.rs:1143:16
     |
1143 |         scope: serde_json::Value,
     |                ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> llmspell-bridge/src/multi_agent.rs:94:41
   |
94 |     for (agent_id, task_name, input) in agent_tasks.iter() {
   |                                         ^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `agent_tasks`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: this could be a `const fn`
  --> llmspell-bridge/src/orchestration.rs:85:5
   |
85 | /     pub fn max_concurrent_workflows(mut self, max: usize) -> Self {
86 | |         self.limits.max_concurrent_workflows = max;
87 | |         self
88 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
85 |     pub const fn max_concurrent_workflows(mut self, max: usize) -> Self {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/orchestration.rs:92:5
   |
92 | /     pub fn max_agent_invocations(mut self, max: usize) -> Self {
93 | |         self.limits.max_agent_invocations = max;
94 | |         self
95 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
92 |     pub const fn max_agent_invocations(mut self, max: usize) -> Self {
   |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:99:5
    |
99  | /     pub fn max_memory_mb(mut self, max: usize) -> Self {
100 | |         self.limits.max_memory_mb = max;
101 | |         self
102 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
99  |     pub const fn max_memory_mb(mut self, max: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:106:5
    |
106 | /     pub fn build(self) -> ResourceLimits {
107 | |         self.limits
108 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
106 |     pub const fn build(self) -> ResourceLimits {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:154:5
    |
154 | /     pub fn strategy(mut self, strategy: OrchestrationStrategy) -> Self {
155 | |         self.config.strategy = strategy;
156 | |         self
157 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
154 |     pub const fn strategy(mut self, strategy: OrchestrationStrategy) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:161:5
    |
161 | /     pub fn max_depth(mut self, depth: usize) -> Self {
162 | |         self.config.max_depth = depth;
163 | |         self
164 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
161 |     pub const fn max_depth(mut self, depth: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:168:5
    |
168 | /     pub fn timeout_seconds(mut self, timeout: u64) -> Self {
169 | |         self.config.timeout_seconds = timeout;
170 | |         self
171 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
168 |     pub const fn timeout_seconds(mut self, timeout: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:175:5
    |
175 | /     pub fn allow_parallel(mut self, allow: bool) -> Self {
176 | |         self.config.allow_parallel = allow;
177 | |         self
178 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
175 |     pub const fn allow_parallel(mut self, allow: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:182:5
    |
182 | /     pub fn resource_limits(mut self, limits: ResourceLimits) -> Self {
183 | |         self.config.resource_limits = limits;
184 | |         self
185 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
182 |     pub const fn resource_limits(mut self, limits: ResourceLimits) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:189:5
    |
189 | /     pub fn build(self) -> OrchestrationConfig {
190 | |         self.config
191 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
189 |     pub const fn build(self) -> OrchestrationConfig {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:304:5
    |
304 | /     pub fn max_attempts(mut self, attempts: usize) -> Self {
305 | |         self.config.max_attempts = attempts;
306 | |         self
307 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
304 |     pub const fn max_attempts(mut self, attempts: usize) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:311:5
    |
311 | /     pub fn backoff_ms(mut self, ms: u64) -> Self {
312 | |         self.config.backoff_ms = ms;
313 | |         self
314 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
311 |     pub const fn backoff_ms(mut self, ms: u64) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:318:5
    |
318 | /     pub fn exponential_backoff(mut self, exponential: bool) -> Self {
319 | |         self.config.exponential_backoff = exponential;
320 | |         self
321 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
318 |     pub const fn exponential_backoff(mut self, exponential: bool) -> Self {
    |         +++++

warning: this could be a `const fn`
   --> llmspell-bridge/src/orchestration.rs:325:5
    |
325 | /     pub fn build(self) -> RetryConfig {
326 | |         self.config
327 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
325 |     pub const fn build(self) -> RetryConfig {
    |         +++++

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:47:9
   |
47 | /         params
48 | |             .get("timeout")
49 | |             .and_then(serde_json::Value::as_u64)
50 | |             .map(|timeout_ms| {
51 | |                 config.max_execution_time = Some(Duration::from_millis(timeout_ms));
52 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
   = note: `-W clippy::option-map-unit-fn` implied by `-W clippy::all`
   = help: to override `-W clippy::all` add `#[allow(clippy::option_map_unit_fn)]`
help: try
   |
47 ~         if let Some(timeout_ms) = params
48 +             .get("timeout")
49 +             .and_then(serde_json::Value::as_u64) { config.max_execution_time = Some(Duration::from_millis(timeout_ms)); }
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:54:9
   |
54 | /         params
55 | |             .get("continue_on_error")
56 | |             .and_then(serde_json::Value::as_bool)
57 | |             .map(|continue_on_error| {
58 | |                 config.continue_on_error = continue_on_error;
59 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
help: try
   |
54 ~         if let Some(continue_on_error) = params
55 +             .get("continue_on_error")
56 +             .and_then(serde_json::Value::as_bool) { config.continue_on_error = continue_on_error; }
   |

warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`
  --> llmspell-bridge/src/standardized_workflows.rs:61:9
   |
61 | /         params
62 | |             .get("max_retry_attempts")
63 | |             .and_then(serde_json::Value::as_u64)
64 | |             .map(|max_retries| {
65 | |                 config.max_retry_attempts = u32::try_from(max_retries).unwrap_or(u32::MAX);
66 | |             });
   | |______________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn
help: try
   |
61 ~         if let Some(max_retries) = params
62 +             .get("max_retry_attempts")
63 +             .and_then(serde_json::Value::as_u64) { config.max_retry_attempts = u32::try_from(max_retries).unwrap_or(u32::MAX); }
   |

warning: this macro has been superceded by `std::sync::LazyLock`
  --> llmspell-bridge/src/workflow_performance.rs:12:1
   |
12 | / lazy_static! {
13 | |     /// Cache for workflow type information to avoid repeated discovery
14 | |     static ref WORKFLOW_TYPE_CACHE: Arc<RwLock<HashMap<String, WorkflowTypeInfo>>> =
15 | |         Arc::new(RwLock::new(HashMap::new()));
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_std_lazy_statics
   = note: `-W clippy::non-std-lazy-statics` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::non_std_lazy_statics)]`

warning: this function could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflow_performance.rs:221:1
    |
221 | pub fn get_workflow_info_cached(workflow_type: &str) -> Option<WorkflowTypeInfo> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_workflow_info_cached(workflow_type: &str) -> Option<WorkflowTypeInfo>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/workflows.rs:231:17
    |
231 |         params: serde_json::Value,
    |                 ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:850:5
    |
850 |     pub fn list_workflow_types(&self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn list_workflow_types(&self) -> Vec<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:855:5
    |
855 |     pub fn get_workflow_info(&self, workflow_type: &str) -> Option<WorkflowInfo> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_workflow_info(&self, workflow_type: &str) -> Option<WorkflowInfo>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> llmspell-bridge/src/workflows.rs:860:5
    |
860 |     pub fn get_all_workflow_info(&self) -> Vec<(String, WorkflowInfo)> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_all_workflow_info(&self) -> Vec<(String, WorkflowInfo)>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: all fields have the same prefix: `total`
    --> llmspell-bridge/src/workflows.rs:1266:1
     |
1266 | / struct RegistryMetrics {
1267 | |     /// Total workflows registered
1268 | |     total_registered: AtomicU64,
1269 | |     /// Total templates registered
...    |
1272 | |     total_executions: AtomicU64,
1273 | | }
     | |_^
     |
     = help: remove the prefixes
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_field_names
     = note: `-W clippy::struct-field-names` implied by `-W clippy::pedantic`
     = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_field_names)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:141:51
    |
141 | pub fn lua_table_to_agent_input(lua: &Lua, table: Table) -> mlua::Result<AgentInput> {
    |                                                   ^^^^^ help: consider taking a reference instead: `&Table`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: binding to `_` prefixed variable with no side-effect
   --> llmspell-bridge/src/lua/conversion.rs:156:9
    |
156 |     let _context: Option<ExecutionContext> = None;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::no_effect_underscore_binding)]`

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:208:43
    |
208 | fn parse_media_content(_lua: &Lua, table: Table) -> mlua::Result<MediaContent> {
    |                                           ^^^^^ help: consider taking a reference instead: `&Table`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/conversion.rs:414:56
    |
414 | pub fn workflow_result_to_lua_table(lua: &Lua, result: serde_json::Value) -> mlua::Result<Table> {
    |                                                        ^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&serde_json::Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: this could be a `const fn`
   --> llmspell-bridge/src/lua/globals/agent.rs:854:5
    |
854 | /     fn new(bridge: Arc<AgentBridge>) -> Self {
855 | |         Self {
856 | |             bridge,
857 | |             name: None,
...   |
873 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
854 |     const fn new(bridge: Arc<AgentBridge>) -> Self {
    |     +++++

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-bridge/src/lua/globals/hook.rs:235:22
    |
235 | fn parse_priority(s: Option<String>) -> Priority {
    |                      ^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Option<String>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-bridge/src/lua/globals/hook.rs:247:1
    |
247 | / pub fn inject_hook_global(
248 | |     lua: &Lua,
249 | |     _context: &GlobalContext,
250 | |     hook_bridge: Arc<HookBridge>,
251 | | ) -> Result<()> {
    | |_______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-bridge/src/lua/globals/json.rs:10:1
   |
10 | pub fn inject_json_global(lua: &Lua) -> Result<(), LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/replay.rs:156:48
    |
156 |                     arr.push(lua_value_to_json(_lua, v)?);
    |                                                ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/replay.rs:125:22
    |
125 | fn lua_value_to_json(_lua: &Lua, value: Value) -> LuaResult<serde_json::Value> {
    |                      ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/replay.rs:163:53
    |
163 |                     map.insert(k, lua_value_to_json(_lua, v)?);
    |                                                     ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/replay.rs:125:22
    |
125 | fn lua_value_to_json(_lua: &Lua, value: Value) -> LuaResult<serde_json::Value> {
    |                      ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/lua/globals/session.rs:16:5
   |
16 | /// SessionBuilder for creating sessions with method chaining
   |     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
16 - /// SessionBuilder for creating sessions with method chaining
16 + /// `SessionBuilder` for creating sessions with method chaining
   |

warning: this could be a `const fn`
  --> llmspell-bridge/src/lua/globals/session.rs:26:5
   |
26 | /     fn new(bridge: Arc<SessionBridge>) -> Self {
27 | |         Self {
28 | |             bridge,
29 | |             name: None,
...  |
33 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
26 |     const fn new(bridge: Arc<SessionBridge>) -> Self {
   |     +++++

warning: all if blocks contain the same code at the end
  --> llmspell-bridge/src/lua/globals/streaming.rs:56:29
   |
56 | / ...                       Ok(value)
57 | | ...                   }
   | |_______________________^
   |
   = note: the end suggestion probably needs some adjustments to use the expression result correctly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
   = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::branches_sharing_code)]`
help: consider moving these statements after the if
   |
56 ~                             }
57 +                             Ok(value)
   |

warning: wildcard pattern covers any other pattern as it will match anyway
   --> llmspell-bridge/src/lua/globals/workflow.rs:107:9
    |
107 |         "fail_fast" | "failfast" | _ => ErrorStrategy::FailFast,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider handling `_` separately
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns
    = note: `-W clippy::wildcard-in-or-patterns` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::wildcard_in_or_patterns)]`

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:154:45
    |
154 |                         and_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items
    = note: `-W clippy::used-underscore-items` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_items)]`

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:154:62
    |
154 |                         and_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                                              ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:167:44
    |
167 |                         or_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:167:61
    |
167 |                         or_conditions.push(_parse_condition(_lua, cond_value)?);
    |                                                             ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:177:45
    |
177 |                         condition: Box::new(_parse_condition(_lua, inner)?),
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:1
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed binding
   --> llmspell-bridge/src/lua/globals/workflow.rs:177:62
    |
177 |                         condition: Box::new(_parse_condition(_lua, inner)?),
    |                                                              ^^^^
    |
note: binding is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:113:21
    |
113 | fn _parse_condition(_lua: &Lua, condition_value: Value) -> mlua::Result<Condition> {
    |                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: item in documentation is missing backticks
   --> llmspell-bridge/src/lua/globals/workflow.rs:443:5
    |
443 | /// WorkflowBuilder for creating workflows with method chaining
    |     ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
443 - /// WorkflowBuilder for creating workflows with method chaining
443 + /// `WorkflowBuilder` for creating workflows with method chaining
    |

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/lua/globals/workflow.rs:453:16
    |
453 |     condition: Option<Box<dyn Fn(&serde_json::Value) -> bool + Send + Sync>>,
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: very complex type used. Consider factoring parts into `type` definitions
   --> llmspell-bridge/src/lua/globals/workflow.rs:457:21
    |
457 |     loop_condition: Option<Box<dyn Fn(&serde_json::Value) -> bool + Send + Sync>>,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:530:24
    |
530 |             let step = _parse_workflow_step(lua, &step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: &Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:548:24
    |
548 |             let step = _parse_workflow_step(lua, &step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: &Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: used underscore-prefixed item
   --> llmspell-bridge/src/lua/globals/workflow.rs:554:24
    |
554 |             let step = _parse_workflow_step(lua, &step_table)?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: item is defined here
   --> llmspell-bridge/src/lua/globals/workflow.rs:20:1
    |
20  | fn _parse_workflow_step(_lua: &Lua, step_table: &Table) -> mlua::Result<WorkflowStep> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_items

warning: item in documentation is missing backticks
  --> llmspell-bridge/src/lua/hook_adapter.rs:74:68
   |
74 |     /// Returns an error if the Lua value cannot be converted to a HookResult
   |                                                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
74 -     /// Returns an error if the Lua value cannot be converted to a HookResult
74 +     /// Returns an error if the Lua value cannot be converted to a `HookResult`
   |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/mod.rs:1:57
  |
1 | //! ABOUTME: JavaScript script engine implementation of ScriptEngineBridge
  |                                                         ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JavaScript script engine implementation of ScriptEngineBridge
1 + //! ABOUTME: JavaScript script engine implementation of `ScriptEngineBridge`
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/engine.rs:1:14
  |
1 | //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
  |              ^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
1 + //! ABOUTME: `JSEngine` implementation of ScriptEngineBridge trait
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/engine.rs:1:41
  |
1 | //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
  |                                         ^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
1 - //! ABOUTME: JSEngine implementation of ScriptEngineBridge trait
1 + //! ABOUTME: JSEngine implementation of `ScriptEngineBridge` trait
  |

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/engine.rs:31:5
   |
31 | /     pub fn engine_features() -> EngineFeatures {
32 | |         EngineFeatures {
33 | |             async_execution: true, // Native async/await
34 | |             streaming: true,       // Via async generators
...  |
41 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
31 |     pub const fn engine_features() -> EngineFeatures {
   |         +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/agent.rs:13:1
   |
13 | / pub fn inject_agent_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
22 | |     Ok(())
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_agent_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/event.rs:19:1
   |
19 | / pub fn inject_event_global(
20 | |     _ctx: &mut Context,
21 | |     _context: &GlobalContext,
22 | | ) -> Result<(), LLMSpellError> {
...  |
28 | |     Ok(())
29 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
19 | pub const fn inject_event_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/hook.rs:14:1
   |
14 | / pub fn inject_hook_global(_ctx: &mut boa_engine::Context, _context: &GlobalContext) -> Result<()> {
...  |
20 | |     Ok(())
21 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
14 | pub const fn inject_hook_global(_ctx: &mut boa_engine::Context, _context: &GlobalContext) -> Result<()> {
   |     +++++

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/globals/json.rs:9:41
  |
9 | /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
  |                                         ^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
9 - /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
9 + /// Note: JavaScript already has native `JSON.parse()` and JSON.stringify()
  |

warning: item in documentation is missing backticks
 --> llmspell-bridge/src/javascript/globals/json.rs:9:58
  |
9 | /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
  |                                                          ^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
  |
9 - /// Note: JavaScript already has native JSON.parse() and JSON.stringify()
9 + /// Note: JavaScript already has native JSON.parse() and `JSON.stringify()`
  |

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/json.rs:16:1
   |
16 | / pub fn inject_json_global(
17 | |     _ctx: &mut boa_engine::Context,
18 | |     _context: &GlobalContext,
19 | | ) -> Result<(), LLMSpellError> {
...  |
25 | |     Ok(())
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
16 | pub const fn inject_json_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/state.rs:13:1
   |
13 | / pub fn inject_state_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | |     _state_global: &StateGlobal,
...  |
25 | |     Ok(())
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_state_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/streaming.rs:13:1
   |
13 | / pub fn inject_streaming_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_streaming_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/tool.rs:13:1
   |
13 | / pub fn inject_tool_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_tool_global(
   |     +++++

warning: this could be a `const fn`
  --> llmspell-bridge/src/javascript/globals/workflow.rs:13:1
   |
13 | / pub fn inject_workflow_global(
14 | |     _ctx: &mut boa_engine::Context,
15 | |     _context: &GlobalContext,
16 | | ) -> Result<(), LLMSpellError> {
...  |
23 | |     Ok(())
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
13 | pub const fn inject_workflow_global(
   |     +++++

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:348:13
    |
348 | /             &vec![
349 | |                 "paper_reader_agent".to_string(),
350 | |                 "concept_extractor_agent".to_string(),
351 | |                 "critic_agent".to_string(),
352 | |                 "summary_writer_agent".to_string(),
353 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
    = note: `-W clippy::useless-vec` implied by `-W clippy::all`
    = help: to override `-W clippy::all` add `#[allow(clippy::useless_vec)]`
help: you can use a slice directly
    |
348 ~             &["paper_reader_agent".to_string(),
349 +                 "concept_extractor_agent".to_string(),
350 +                 "critic_agent".to_string(),
351 ~                 "summary_writer_agent".to_string()],
    |

warning: useless use of `vec!`
   --> llmspell-bridge/src/multi_agent.rs:398:13
    |
398 | /             &vec![
399 | |                 "fundamental_analyst".to_string(),
400 | |                 "technical_analyst".to_string(),
401 | |                 "risk_analyst".to_string(),
402 | |                 "market_analyst".to_string(),
403 | |             ],
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec
help: you can use a slice directly
    |
398 ~             &["fundamental_analyst".to_string(),
399 +                 "technical_analyst".to_string(),
400 +                 "risk_analyst".to_string(),
401 ~                 "market_analyst".to_string()],
    |

warning: `llmspell-bridge` (lib) generated 107 warnings (run `cargo clippy --fix --lib -p llmspell-bridge` to apply 67 suggestions)
    Checking llmspell-testing v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-testing)
    Checking llmspell-cli v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-cli)
    Checking llmspell-sessions v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-sessions)
    Checking llmspell-state-persistence v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-state-persistence)
    Checking llmspell-core v0.6.0 (/Users/spuri/projects/lexlapax/rs-llmspell/llmspell-core)
warning: `assert!(true)` will be optimized out by the compiler
  --> llmspell-testing/tests/unit/agents_tests.rs:12:9
   |
12 |         assert!(true);
   |         ^^^^^^^^^^^^^
   |
   = help: remove it
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants
   = note: `#[warn(clippy::assertions_on_constants)]` on by default

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/tools_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/workflows_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/bridge_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/state_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/hooks_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/events_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/storage_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `assert!(true)` will be optimized out by the compiler
 --> llmspell-testing/tests/unit/utils_tests.rs:8:9
  |
8 |         assert!(true);
  |         ^^^^^^^^^^^^^
  |
  = help: remove it
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants

warning: `llmspell-testing` (test "unit") generated 9 warnings
warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_injection_attack_tests.rs:122:31
    |
122 |         GraphQLQueryTool::new(Default::default()).expect("Failed to create GraphQL tool");
    |                               ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
    = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:183:52
    |
183 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
    = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:229:52
    |
229 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:323:52
    |
323 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: function call inside of `unwrap_or`
   --> llmspell-tools/tests/security_injection_attack_tests.rs:365:52
    |
365 |                 serde_json::from_str(&output.text).unwrap_or(json!({"success": false}));
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|_| json!({"success": false}))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: binding's name is too similar to existing binding
   --> llmspell-tools/tests/webpage_monitor_integration.rs:149:25
    |
149 |                     let output_value: serde_json::Value =
    |                         ^^^^^^^^^^^^
    |
note: existing binding defined here
   --> llmspell-tools/tests/webpage_monitor_integration.rs:135:17
    |
135 |             let output1_value: serde_json::Value = serde_json::from_str(&output1.text).unwrap();
    |                 ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-tools/tests/csv_analyzer_integration.rs:133:5
    |
133 |     use std::fmt::Write;
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: long literal lacking separators
   --> llmspell-tools/tests/security/input_validation_tests.rs:277:37
    |
277 |                 "input": "A".repeat(100000),
    |                                     ^^^^^^ help: consider: `100_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
    = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unreadable_literal)]`

warning: long literal lacking separators
   --> llmspell-tools/tests/security/path_security_tests.rs:266:26
    |
266 |                 "bytes": 1000000
    |                          ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/security/rate_limit_tests.rs:146:35
    |
146 |                 "content_length": 1000000,
    |                                   ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> llmspell-tools/tests/security/rate_limit_tests.rs:213:36
    |
213 |                 "collision_count": 1000000
    |                                    ^^^^^^^ help: consider: `1_000_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_basic.rs:16:47
   |
16 |             Box::new(TextManipulatorTool::new(Default::default())),
   |                                               ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_basic.rs:20:45
   |
20 |             Box::new(UuidGeneratorTool::new(Default::default())),
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_basic.rs:24:46
   |
24 |             Box::new(HashCalculatorTool::new(Default::default())),
   |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
  --> llmspell-tools/tests/security_basic.rs:93:45
   |
93 |             Box::new(UuidGeneratorTool::new(Default::default())) as Box<dyn Tool>,
   |                                             ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_basic.rs:101:46
    |
101 |             Box::new(HashCalculatorTool::new(Default::default())) as Box<dyn Tool>,
    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_basic.rs:134:47
    |
134 |             Box::new(TextManipulatorTool::new(Default::default())) as Box<dyn Tool>,
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_basic.rs:205:45
    |
205 |             Box::new(UuidGeneratorTool::new(Default::default())) as Box<dyn Tool>,
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/tests/security_basic.rs:265:45
    |
265 |             Box::new(UuidGeneratorTool::new(Default::default())) as Box<dyn Tool>,
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/common/mod.rs:64:21
   |
64 |       let error_msg = if let Some(error_str) = output_value["error"].as_str() {
   |  _____________________^
65 | |         // Simple string error format
66 | |         error_str.to_string()
67 | |     } else if let Some(error_obj) = output_value["error"].as_object() {
...  |
76 | |         panic!("Expected error field in output, got: {output_value}");
77 | |     };
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
   = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
   |
64 ~     let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
65 +         // Complex error object format - try message field first
66 +         if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
67 +             msg.to_string()
68 +         } else {
69 +             // Fallback to serializing the entire error object
70 +             serde_json::to_string(error_obj).unwrap_or_else(|_| format!("{error_obj:?}"))
71 +         }
72 +     } else {
73 +         panic!("Expected error field in output, got: {output_value}");
74 ~     }, |error_str| error_str.to_string());
   |

warning: use Option::map_or_else instead of an if let/else
  --> llmspell-tools/tests/common/mod.rs:69:9
   |
69 | /         if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
70 | |             msg.to_string()
71 | |         } else {
...  |
74 | |         }
   | |_________^ help: try: `error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj).unwrap_or_else(|_| format!("{error_obj:?}")), |msg| msg.to_string())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: `llmspell-tools` (test "security_injection_attack_tests") generated 5 warnings
warning: `llmspell-tools` (test "csv_analyzer_integration") generated 1 warning
warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:108:9
    |
108 |         use async_trait::async_trait;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:9
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:43
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |                                           ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:58
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |                                                          ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:109:72
    |
109 |         use llmspell_core::traits::tool::{SecurityLevel, ToolCategory, ToolSchema};
    |                                                                        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:110:9
    |
110 |         use llmspell_core::{BaseAgent, Tool};
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:110:29
    |
110 |         use llmspell_core::{BaseAgent, Tool};
    |                             ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:110:40
    |
110 |         use llmspell_core::{BaseAgent, Tool};
    |                                        ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:111:9
    |
111 |         use llmspell_core::{ComponentMetadata, ExecutionContext};
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:111:29
    |
111 |         use llmspell_core::{ComponentMetadata, ExecutionContext};
    |                             ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:111:48
    |
111 |         use llmspell_core::{ComponentMetadata, ExecutionContext};
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> llmspell-bridge/tests/globals_test.rs:114:9
    |
114 |         struct TestTool;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: this function has too many lines (101/100)
   --> llmspell-bridge/tests/globals_test.rs:218:11
    |
218 |       async fn test_workflow_global_lua() -> Result<()> {
    |  ___________^
219 | |         let lua = Lua::new();
220 | |         let context = setup_test_context().await;
221 | |         let registry = create_standard_registry(context.clone()).await?;
...   |
327 | |         Ok(())
328 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: `llmspell-tools` (test "security_basic") generated 8 warnings
warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-tools/tests/common/mod.rs:17:1
   |
17 | pub fn create_agent_input(params: Value) -> Result<AgentInput, LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: redundant closure
   --> llmspell-bridge/tests/workflow_tool_integration_test.rs:415:59
    |
415 |                 let success = res.get("success").and_then(|v| v.as_bool()).unwrap_or(true);
    |                                                           ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `serde_json::Value::as_bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> llmspell-tools/tests/common/mod.rs:31:1
   |
31 | pub fn create_simple_input(input: &str) -> Result<AgentInput, LLMSpellError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-tools/tests/common/mod.rs:37:1
   |
37 | pub fn assert_success_output(output: &AgentOutput, expected_fields: &[&str]) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-tools/tests/common/mod.rs:38:31
   |
38 |     let output_value: Value = serde_json::from_str(&output.text).unwrap();
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function which may panic missing `# Panics` section
  --> llmspell-tools/tests/common/mod.rs:55:1
   |
55 | pub fn assert_error_output(output: &AgentOutput, error_pattern: &str) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> llmspell-tools/tests/common/mod.rs:56:31
   |
56 |     let output_value: Value = serde_json::from_str(&output.text).unwrap();
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> llmspell-tools/tests/common/mod.rs:148:1
    |
148 | pub fn assert_json_contains(actual: &Value, expected: &Value) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> llmspell-tools/tests/common/mod.rs:152:17
    |
152 | /                 assert!(
153 | |                     actual_map.contains_key(key),
154 | |                     "Expected key '{key}' not found in actual JSON"
155 | |                 );
    | |_________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `llmspell-tools` (test "webpage_monitor_integration") generated 3 warnings
warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/auth_tests.rs:494:14
    |
494 |             .collect();
    |              ^^^^^^^
...
497 |         assert!(auth_tests.len() > 15);
    |                 ---------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
    = note: `-W clippy::needless-collect` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::needless_collect)]`
help: take the original Iterator's count instead of collecting it and finding the length
    |
491 ~         
492 |
493 |         // Should have comprehensive authentication test coverage
494 ~         assert!(tests
495 +             .iter()
496 ~             .filter(|t| t.categories.contains(&TestCategory::Authentication)).count() > 15);
    |

warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/auth_tests.rs:505:14
    |
505 |             .collect();
    |              ^^^^^^^
...
508 |         assert!(authz_tests.len() > 5);
    |                 ----------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
502 ~         
503 |
504 |         // Should have authorization test coverage
505 ~         assert!(tests
506 +             .iter()
507 ~             .filter(|t| t.categories.contains(&TestCategory::Authorization)).count() > 5);
    |

warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/data_exposure_tests.rs:451:14
    |
451 |             .collect();
    |              ^^^^^^^
...
454 |         assert_eq!(disclosure_tests.len(), tests.len());
    |                    ---------------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
448 ~         
449 |
450 |         // All data exposure tests should be information disclosure
451 ~         assert_eq!(tests
452 +             .iter()
453 ~             .filter(|t| t.categories.contains(&TestCategory::InformationDisclosure)).count(), tests.len());
    |

warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/input_validation_tests.rs:497:14
    |
497 |             .collect();
    |              ^^^^^^^
...
500 |         assert!(injection_tests.len() > 20);
    |                 --------------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
494 ~         
495 |
496 |         // Should have comprehensive injection test coverage
497 ~         assert!(tests
498 +             .iter()
499 ~             .filter(|t| t.categories.contains(&TestCategory::Injection)).count() > 20);
    |

warning: `llmspell-bridge` (test "globals_test") generated 13 warnings
warning: `llmspell-bridge` (test "workflow_tool_integration_test") generated 1 warning (run `cargo clippy --fix --test "workflow_tool_integration_test"` to apply 1 suggestion)
warning: avoid using `collect()` when not needed
   --> llmspell-tools/tests/security/rate_limit_tests.rs:422:14
    |
422 |             .collect();
    |              ^^^^^^^
...
425 |         assert_eq!(dos_tests.len(), tests.len());
    |                    --------------- the iterator could be used here instead
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect
help: take the original Iterator's count instead of collecting it and finding the length
    |
419 ~         
420 |
421 |         // All rate limit tests should be DoS category
422 ~         assert_eq!(tests
423 +             .iter()
424 ~             .filter(|t| t.categories.contains(&TestCategory::DoS)).count(), tests.len());
    |

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:53:5
   |
53 | /     pub fn with_attack_vector(mut self, vector: impl Into<String>) -> Self {
54 | |         self.attack_vector = vector.into();
55 | |         self
56 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use
   = note: `-W clippy::return-self-not-must-use` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::return_self_not_must_use)]`

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:66:5
   |
66 | /     pub fn with_response(mut self, response: impl Into<String>) -> Self {
67 | |         self.response = Some(response.into());
68 | |         self
69 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:72:5
   |
72 | /     pub fn with_error(mut self, error: impl Into<String>) -> Self {
73 | |         self.error = Some(error.into());
74 | |         self
75 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: missing `#[must_use]` attribute on a method returning `Self`
  --> llmspell-tools/tests/security/test_framework.rs:85:5
   |
85 | /     pub fn add_metadata(mut self, key: impl Into<String>, value: Value) -> Self {
86 | |         self.metadata.insert(key.into(), value);
87 | |         self
88 | |     }
   | |_____^
   |
   = help: consider adding the `#[must_use]` attribute to the method or directly to the `Self` type
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_self_not_must_use

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:303:21
    |
303 |     fn create_input(&self, payload: &Value) -> Result<AgentInput> {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self
    = note: `-W clippy::unused-self` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unused_self)]`

warning: this function's return value is unnecessarily wrapped by `Result`
   --> llmspell-tools/tests/security/test_framework.rs:303:5
    |
303 | /     fn create_input(&self, payload: &Value) -> Result<AgentInput> {
304 | |         let mut input = AgentInput::text("");
305 | |
306 | |         if let Value::Object(params) = payload {
...   |
314 | |         Ok(input)
315 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
303 -     fn create_input(&self, payload: &Value) -> Result<AgentInput> {
303 +     fn create_input(&self, payload: &Value) -> llmspell_core::types::AgentInput {
    |
help: ...and then change returning expressions
    |
314 -         Ok(input)
314 +         input
    |

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:318:25
    |
318 |     fn check_prevention(&self, output: &AgentOutput, expected: &ExpectedBehavior) -> bool {
    |                         ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: temporary with significant `Drop` can be early dropped
   --> llmspell-tools/tests/security/test_framework.rs:335:17
    |
334 |       async fn update_stats(&self, result: &SecurityTestResult, test_case: &SecurityTestCase) {
    |  _____________________________________________________________________________________________-
335 | |         let mut stats = self.stats.lock().await;
    | |                 ^^^^^
336 | |         stats.total_tests += 1;
...   |
355 | |     }
    | |_____- temporary `stats` is currently being dropped at the end of its contained scope
    |
    = note: this might lead to unnecessary resource contention
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#significant_drop_tightening
    = note: `-W clippy::significant-drop-tightening` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::significant_drop_tightening)]`
help: drop the temporary after the end of its last usage
    |
350 ~         let tool_stats = stats.by_tool.entry(result.tool_name.clone()).or_default();
351 +         drop(stats);
    |

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:374:21
    |
374 |     fn print_result(&self, result: &SecurityTestResult) {
    |                     ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: unused `self` argument
   --> llmspell-tools/tests/security/test_framework.rs:417:32
    |
417 |     fn extract_vulnerabilities(&self, results: &[SecurityTestResult]) -> Vec<Vulnerability> {
    |                                ^^^^^
    |
    = help: consider refactoring to an associated function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_self

warning: docs for function returning `Result` missing `# Errors` section
   --> llmspell-tools/tests/security/test_framework.rs:464:1
    |
464 | pub fn create_params_input(params: Value) -> Result<AgentInput> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this argument is passed by value, but not consumed in the function body
   --> llmspell-tools/tests/security/test_framework.rs:464:36
    |
464 | pub fn create_params_input(params: Value) -> Result<AgentInput> {
    |                                    ^^^^^ help: consider taking a reference instead: `&Value`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`

warning: `llmspell-tools` (test "lib") generated 28 warnings (2 duplicates)
warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/webhook_caller_integration.rs:142:29
    |
142 |               let error_msg = if let Some(error_str) = output_value["error"].as_str() {
    |  _____________________________^
143 | |                 error_str.to_lowercase()
144 | |             } else if let Some(error_obj) = output_value["error"].as_object() {
145 | |                 if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
...   |
159 | |                 String::new()
160 | |             };
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
142 ~             let error_msg = output_value["error"].as_str().map_or_else(|| if let Some(error_obj) = output_value["error"].as_object() {
143 +                 if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
144 +                     msg.to_lowercase()
145 +                 } else {
146 +                     serde_json::to_string(error_obj)
147 +                         .unwrap_or_default()
148 +                         .to_lowercase()
149 +                 }
150 +             } else if let Some(result) = output_value.get("result") {
151 +                 if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
152 +                     err.to_lowercase()
153 +                 } else {
154 +                     String::new()
155 +                 }
156 +             } else {
157 +                 String::new()
158 ~             }, |error_str| error_str.to_lowercase());
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/webhook_caller_integration.rs:145:17
    |
145 | /                 if let Some(msg) = error_obj.get("message").and_then(|m| m.as_str()) {
146 | |                     msg.to_lowercase()
147 | |                 } else {
148 | |                     serde_json::to_string(error_obj)
149 | |                         .unwrap_or_default()
150 | |                         .to_lowercase()
151 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
145 ~                 error_obj.get("message").and_then(|m| m.as_str()).map_or_else(|| serde_json::to_string(error_obj)
146 +                         .unwrap_or_default()
147 +                         .to_lowercase(), |msg| msg.to_lowercase())
    |

warning: use Option::map_or_else instead of an if let/else
   --> llmspell-tools/tests/webhook_caller_integration.rs:153:17
    |
153 | /                 if let Some(err) = result.get("error").and_then(|e| e.as_str()) {
154 | |                     err.to_lowercase()
155 | |                 } else {
156 | |                     String::new()
157 | |                 }
    | |_________________^ help: try: `result.get("error").and_then(|e| e.as_str()).map_or_else(String::new, |err| err.to_lowercase())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: `llmspell-tools` (test "webhook_caller_integration") generated 5 warnings (2 duplicates)
warning: `llmspell-tools` (test "sitemap_crawler_integration") generated 2 warnings (2 duplicates)
error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
  --> llmspell-tools/benches/hook_performance.rs:19:9
   |
19 |         enable_hooks: false,
   |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

warning: unexpected `cfg` condition value: `unit-tests`
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:186:16
    |
186 |     #[cfg_attr(feature = "unit-tests", ignore = "unit")]
    |                ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bridge-tests`, `default`, `integration-tests`, `javascript`, `lua`, and `workflow-tests`
    = help: consider adding `unit-tests` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:13:5
   |
13 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:12:5
   |
12 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: `#[warn(unused_attributes)]` on by default

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:14:5
   |
14 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:12:5
   |
12 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:15:5
   |
15 |     #[ignore = "Workflow factory integration not fully implemented - placeholder test"]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:12:5
   |
12 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:54:5
   |
54 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:53:5
   |
53 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:55:5
   |
55 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:53:5
   |
53 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:56:5
   |
56 |     #[ignore = "Workflow factory integration not fully implemented - placeholder test"]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:53:5
   |
53 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:92:5
   |
92 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:91:5
   |
91 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:93:5
   |
93 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:91:5
   |
91 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:94:5
   |
94 |     #[ignore = "Workflow factory integration not fully implemented - placeholder test"]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
   |
note: attribute also specified here
  --> llmspell-bridge/tests/standardized_workflows_tests.rs:91:5
   |
91 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:130:5
    |
130 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:129:5
    |
129 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:131:5
    |
131 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:129:5
    |
129 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:132:5
    |
132 |     #[ignore = "Workflow factory integration not fully implemented - placeholder test"]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:129:5
    |
129 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:188:5
    |
188 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:187:5
    |
187 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:202:5
    |
202 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:201:5
    |
201 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:203:5
    |
203 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:201:5
    |
201 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:231:5
    |
231 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:230:5
    |
230 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:232:5
    |
232 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:230:5
    |
230 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:252:5
    |
252 |     #[cfg_attr(feature = "bridge-tests", ignore = "bridge")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:251:5
    |
251 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:253:5
    |
253 |     #[cfg_attr(feature = "workflow-tests", ignore = "workflow")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:251:5
    |
251 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:254:5
    |
254 |     #[ignore = "Workflow factory integration not fully implemented - placeholder test"]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute
    |
note: attribute also specified here
   --> llmspell-bridge/tests/standardized_workflows_tests.rs:251:5
    |
251 |     #[cfg_attr(feature = "integration-tests", ignore = "integration")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
  --> llmspell-tools/benches/hook_performance.rs:59:9
   |
59 |         enable_hooks: true,
   |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
  --> llmspell-tools/benches/hook_performance.rs:60:9
   |
60 |         enable_security_validation: true,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_audit_logging`
  --> llmspell-tools/benches/hook_performance.rs:61:9
   |
61 |         enable_audit_logging: true,
   |         ^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
   |
   = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:101:9
    |
101 |         enable_hooks: false,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:107:9
    |
107 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:108:9
    |
108 |         enable_security_validation: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:196:9
    |
196 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `max_security_level`, `audit`

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_circuit_breaker`
   --> llmspell-tools/benches/hook_performance.rs:197:9
    |
197 |         enable_circuit_breaker: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `max_security_level`, `audit`

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:243:17
    |
243 |                 enable_hooks: false,
    |                 ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:249:17
    |
249 |                 enable_hooks: true,
    |                 ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:250:17
    |
250 |                 enable_security_validation: true,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_audit_logging`
   --> llmspell-tools/benches/hook_performance.rs:251:17
    |
251 |                 enable_audit_logging: true,
    |                 ^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_circuit_breaker`
   --> llmspell-tools/benches/hook_performance.rs:252:17
    |
252 |                 enable_circuit_breaker: true,
    |                 ^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:322:9
    |
322 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:323:9
    |
323 |         enable_security_validation: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_audit_logging`
   --> llmspell-tools/benches/hook_performance.rs:324:9
    |
324 |         enable_audit_logging: true,
    |         ^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_hooks`
   --> llmspell-tools/benches/hook_performance.rs:371:9
    |
371 |         enable_hooks: true,
    |         ^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

error[E0560]: struct `llmspell_tools::ToolLifecycleConfig` has no field named `enable_security_validation`
   --> llmspell-tools/benches/hook_performance.rs:372:9
    |
372 |         enable_security_validation: true,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ `llmspell_tools::ToolLifecycleConfig` does not have this field
    |
    = note: available fields are: `features`, `max_hook_execution_time`, `resource_limits`, `circuit_breaker_failure_threshold`, `circuit_breaker_recovery_time` ... and 2 others

For more information about this error, try `rustc --explain E0560`.
error: could not compile `llmspell-tools` (bench "hook_performance") due to 19 previous errors
warning: build failed, waiting for other jobs to finish...
warning: `llmspell-bridge` (test "standardized_workflows_tests") generated 21 warnings (run `cargo clippy --fix --test "standardized_workflows_tests"` to apply 20 suggestions)
warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:266:10
    |
266 |         ((overhead_ms as f64) / (no_hooks_ms as f64)) * 100.0
    |          ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
    = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: casting `u128` to `f64` causes a loss of precision (`u128` is 128 bits wide, but `f64`'s mantissa is only 52 bits wide)
   --> llmspell-tools/tests/hook_integration_tests.rs:266:33
    |
266 |         ((overhead_ms as f64) / (no_hooks_ms as f64)) * 100.0
    |                                 ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: `llmspell-tools` (test "hook_integration_tests") generated 2 warnings
warning: calling `ResourceLimits::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:30:9
   |
30 |         Default::default(),
   |         ^^^^^^^^^^^^^^^^^^ help: try: `ResourceLimits::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access
   = note: `-W clippy::default-trait-access` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::default_trait_access)]`

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:76:48
   |
76 |             let tool = HashCalculatorTool::new(Default::default());
   |                                                ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:90:49
   |
90 |             let tool = TextManipulatorTool::new(Default::default());
   |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
  --> llmspell-tools/benches/tool_initialization.rs:97:47
   |
97 |             let tool = UuidGeneratorTool::new(Default::default());
   |                                               ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `CsvAnalyzerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:110:45
    |
110 |             let tool = CsvAnalyzerTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `CsvAnalyzerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:117:47
    |
117 |             let tool = JsonProcessorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:125:39
    |
125 |                 GraphQLQueryTool::new(Default::default()).expect("Failed to create GraphQL tool");
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:133:38
    |
133 |                 HttpRequestTool::new(Default::default()).expect("Failed to create HTTP tool");
    |                                      ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:154:47
    |
154 |             let tool = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:161:48
    |
161 |             let tool = FileOperationsTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:169:44
    |
169 |             let tool = FileSearchTool::new(Default::default(), sandbox.clone());
    |                                            ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:177:45
    |
177 |             let tool = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:190:51
    |
190 |             let tool = EnvironmentReaderTool::new(Default::default());
    |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:197:49
    |
197 |             let tool = ProcessExecutorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:204:48
    |
204 |             let tool = ServiceCheckerTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:211:47
    |
211 |             let tool = SystemMonitorTool::new(Default::default());
    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:224:43
    |
224 |             let tool = WebSearchTool::new(Default::default());
    |                                           ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HashCalculatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:245:49
    |
245 |             let _hash = HashCalculatorTool::new(Default::default());
    |                                                 ^^^^^^^^^^^^^^^^^^ help: try: `HashCalculatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `TextManipulatorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:247:50
    |
247 |             let _text = TextManipulatorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `TextManipulatorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `UuidGeneratorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:248:48
    |
248 |             let _uuid = UuidGeneratorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `UuidGeneratorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `CsvAnalyzerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:251:45
    |
251 |             let _csv = CsvAnalyzerTool::new(Default::default());
    |                                             ^^^^^^^^^^^^^^^^^^ help: try: `CsvAnalyzerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `JsonProcessorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:252:48
    |
252 |             let _json = JsonProcessorTool::new(Default::default());
    |                                                ^^^^^^^^^^^^^^^^^^ help: try: `JsonProcessorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `GraphQLConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:254:39
    |
254 |                 GraphQLQueryTool::new(Default::default()).expect("GraphQL creation failed");
    |                                       ^^^^^^^^^^^^^^^^^^ help: try: `GraphQLConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `HttpRequestConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:255:46
    |
255 |             let _http = HttpRequestTool::new(Default::default()).expect("HTTP creation failed");
    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `HttpRequestConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileConverterConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:259:53
    |
259 |             let _file_conv = FileConverterTool::new(Default::default(), sandbox.clone());
    |                                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileConverterConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileOperationsConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:260:53
    |
260 |             let _file_ops = FileOperationsTool::new(Default::default());
    |                                                     ^^^^^^^^^^^^^^^^^^ help: try: `FileOperationsConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:261:52
    |
261 |             let _file_search = FileSearchTool::new(Default::default(), sandbox.clone());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `FileWatcherConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:262:52
    |
262 |             let _file_watch = FileWatcherTool::new(Default::default(), sandbox.clone());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `FileWatcherConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `EnvironmentReaderConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:265:51
    |
265 |             let _env = EnvironmentReaderTool::new(Default::default());
    |                                                   ^^^^^^^^^^^^^^^^^^ help: try: `EnvironmentReaderConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ProcessExecutorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:266:50
    |
266 |             let _proc = ProcessExecutorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `ProcessExecutorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `ServiceCheckerConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:267:52
    |
267 |             let _service = ServiceCheckerTool::new(Default::default());
    |                                                    ^^^^^^^^^^^^^^^^^^ help: try: `ServiceCheckerConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `SystemMonitorConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:268:50
    |
268 |             let _system = SystemMonitorTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `SystemMonitorConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: calling `WebSearchConfig::default()` is more clear than this expression
   --> llmspell-tools/benches/tool_initialization.rs:271:50
    |
271 |             let _web_search = WebSearchTool::new(Default::default());
    |                                                  ^^^^^^^^^^^^^^^^^^ help: try: `WebSearchConfig::default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_trait_access

warning: binding's name is too similar to existing binding
  --> llmspell-tools/tests/web_scraper_integration.rs:28:9
   |
28 |     let content = &output_value["result"]["content"];
   |         ^^^^^^^
   |
note: existing binding defined here
  --> llmspell-tools/tests/web_scraper_integration.rs:14:9
   |
14 |     let context = create_test_context();
   |         ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
   = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::similar_names)]`

warning: binding's name is too similar to existing binding
  --> llmspell-tools/tests/web_scraper_integration.rs:52:9
   |
52 |     let content = &output_value["result"]["content"];
   |         ^^^^^^^
   |
note: existing binding defined here
  --> llmspell-tools/tests/web_scraper_integration.rs:39:9
   |
39 |     let context = create_test_context();
   |         ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
  --> llmspell-tools/tests/web_scraper_integration.rs:74:9
   |
74 |     let content = &output_value["result"]["content"];
   |         ^^^^^^^
   |
note: existing binding defined here
  --> llmspell-tools/tests/web_scraper_integration.rs:61:9
   |
61 |     let context = create_test_context();
   |         ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
  --> llmspell-tools/tests/web_scraper_integration.rs:96:9
   |
96 |     let content = &output_value["result"]["content"];
   |         ^^^^^^^
   |
note: existing binding defined here
  --> llmspell-tools/tests/web_scraper_integration.rs:83:9
   |
83 |     let context = create_test_context();
   |         ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: `llmspell-tools` (bench "tool_initialization") generated 33 warnings
error[E0433]: failed to resolve: use of undeclared type `HashCalculatorConfig`
  --> llmspell-tools/tests/security_resource_exhaustion_tests.rs:15:45
   |
15 |     let hash_tool = HashCalculatorTool::new(HashCalculatorConfig::default());
   |                                             ^^^^^^^^^^^^^^^^^^^^ use of undeclared type `HashCalculatorConfig`
   |
help: a struct with a similar name exists
   |
15 -     let hash_tool = HashCalculatorTool::new(HashCalculatorConfig::default());
15 +     let hash_tool = HashCalculatorTool::new(HashCalculatorTool::default());
   |
help: consider importing this struct
   |
4  + use llmspell_tools::util::HashCalculatorConfig;
   |

error[E0433]: failed to resolve: use of undeclared type `JsonProcessorConfig`
  --> llmspell-tools/tests/security_resource_exhaustion_tests.rs:47:44
   |
47 |     let json_tool = JsonProcessorTool::new(JsonProcessorConfig::default());
   |                                            ^^^^^^^^^^^^^^^^^^^ use of undeclared type `JsonProcessorConfig`
   |
help: a struct with a similar name exists
   |
47 -     let json_tool = JsonProcessorTool::new(JsonProcessorConfig::default());
47 +     let json_tool = JsonProcessorTool::new(JsonProcessorTool::default());
   |
help: consider importing this struct
   |
4  + use llmspell_tools::data::json_processor::JsonProcessorConfig;
   |

error[E0433]: failed to resolve: use of undeclared type `TextManipulatorConfig`
  --> llmspell-tools/tests/security_resource_exhaustion_tests.rs:76:46
   |
76 |     let text_tool = TextManipulatorTool::new(TextManipulatorConfig::default());
   |                                              ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `TextManipulatorConfig`
   |
help: a struct with a similar name exists
   |
76 -     let text_tool = TextManipulatorTool::new(TextManipulatorConfig::default());
76 +     let text_tool = TextManipulatorTool::new(TextManipulatorTool::default());
   |
help: consider importing this struct
   |
4  + use llmspell_tools::util::TextManipulatorConfig;
   |

error[E0433]: failed to resolve: use of undeclared type `CsvAnalyzerConfig`
   --> llmspell-tools/tests/security_resource_exhaustion_tests.rs:152:41
    |
152 |     let csv_tool = CsvAnalyzerTool::new(CsvAnalyzerConfig::default());
    |                                         ^^^^^^^^^^^^^^^^^ use of undeclared type `CsvAnalyzerConfig`
    |
help: a struct with a similar name exists
    |
152 -     let csv_tool = CsvAnalyzerTool::new(CsvAnalyzerConfig::default());
152 +     let csv_tool = CsvAnalyzerTool::new(CsvAnalyzerTool::default());
    |
help: consider importing this struct
    |
4   + use llmspell_tools::data::csv_analyzer::CsvAnalyzerConfig;
    |

error[E0433]: failed to resolve: use of undeclared type `HashCalculatorConfig`
   --> llmspell-tools/tests/security_resource_exhaustion_tests.rs:231:54
    |
231 |     let hash_tool = Arc::new(HashCalculatorTool::new(HashCalculatorConfig::default()));
    |                                                      ^^^^^^^^^^^^^^^^^^^^ use of undeclared type `HashCalculatorConfig`
    |
help: a struct with a similar name exists
    |
231 -     let hash_tool = Arc::new(HashCalculatorTool::new(HashCalculatorConfig::default()));
231 +     let hash_tool = Arc::new(HashCalculatorTool::new(HashCalculatorTool::default()));
    |
help: consider importing this struct
    |
4   + use llmspell_tools::util::HashCalculatorConfig;
    |

warning: `llmspell-tools` (test "web_scraper_integration") generated 6 warnings (2 duplicates)
warning: `llmspell-tools` (test "url_analyzer_integration") generated 2 warnings (2 duplicates)
For more information about this error, try `rustc --explain E0433`.
error: could not compile `llmspell-tools` (test "security_resource_exhaustion_tests") due to 5 previous errors
