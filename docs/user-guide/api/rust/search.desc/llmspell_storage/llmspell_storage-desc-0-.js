searchState.loadedDescShard("llmspell_storage", 0, "Storage backends and persistence for rs-llmspell\nABOUTME: Storage backend implementations ABOUTME: Provides …\nABOUTME: Storage backend traits and types ABOUTME: Defines …\nABOUTME: In-memory storage backend implementation ABOUTME: …\nABOUTME: Sled storage backend implementation ABOUTME: …\nIn-memory storage backend\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate new in-memory backend\nSled storage backend\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate new sled backend with default path\nCreate temporary sled backend (for testing)\nCreate new sled backend with custom path\nIn-memory storage (for testing/development)\nRocksDB embedded database\nSled embedded database\nUnified storage backend trait\nType of storage backend\nStorage backend characteristics\nHelper trait for serialization/deserialization\nEstimated read latency in microseconds\nEstimated write latency in microseconds\nGet the backend type\nGet backend characteristics\nClear all data (use with caution)\nDelete a key\nDelete multiple keys\nCheck if a key exists\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a value by key\nGet multiple values by keys\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all keys with a given prefix\nWhether the backend persists data\nSet a key-value pair\nSet multiple key-value pairs\nWhether the backend supports atomic operations\nWhether the backend supports key prefix scanning\nWhether the backend supports transactions")