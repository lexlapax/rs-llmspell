searchState.loadedDescShard("llmspell_config", 0, "ABOUTME: Central configuration management system for …\nBackup configuration for state persistence\nConfiguration errors\nEvent export configuration\nEvent filtering configuration\nEvent system configuration\nGlobal runtime configuration\nBuilder for <code>GlobalRuntimeConfig</code>\nHook system configuration\nCentral LLMSpell configuration\nBuilder for <code>LLMSpellConfig</code>\nSecurity configuration\nSession management configuration\nState persistence configuration\nAllow file system access\nAllow network access\nAllow process spawning\nApply environment variable overrides (DEPRECATED - use …\nApply environment variable overrides using the centralized …\nArtifact compression threshold in bytes\nBackend type for storage (memory, file, redis, etc.)\nBackup configuration\nDirectory for backup storage\nEnable backup functionality (flattened from …\nAutomatic backup on migration (flattened from …\nEventBus buffer size for queuing events\nBuild the configuration\nBuild the configuration\nCreate a new builder for <code>LLMSpellConfig</code>\nCreate a new builder for <code>GlobalRuntimeConfig</code>\nCircuit breaker threshold\nEnable compression for backups\nCompression level (1-9)\nCompression type to use\nDebug configuration for llmspell\nSet the debug configuration\nDebug system configuration\nSet the default script engine\nDefault script engine to use\nDiscover configuration file in standard locations\nEnable debug-level events\nEnable state change events\nEnable timing/performance events\nEnable or disable streaming\nEnable streaming by default\nEnable state persistence (flattened from …\nEnable hook system\nEnable session management\nEnable event system globally\nABOUTME: Engine configuration definitions for llmspell …\nSet the engine configurations\nEngine-specific configurations\nABOUTME: Centralized environment variable registry for …\nABOUTME: Standard environment variable registrations for …\nSet the events configuration\nEvent system configuration\nComponent IDs to exclude (glob patterns)\nEvent types to exclude (glob patterns)\nEvent export configuration\nExport events to file\nEvent filtering configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse TOML content with environment variable overrides and …\nGet engine-specific configuration\nHook system configuration\nComponent IDs to include (glob patterns)\nEvent types to include (glob patterns)\nEnable incremental backups\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad configuration from TOML file with validation\nLoad configuration with automatic discovery\nMaximum artifacts per session\nMaximum age of backups in seconds\nMaximum number of backups to keep\nSet the maximum concurrent scripts\nMaximum concurrent scripts\nMaximum events per second (rate limiting)\nMaximum execution time in milliseconds\nMaximum memory usage in bytes\nMaximum number of concurrent sessions\nMaximum state size per key in bytes\nMerge values from JSON config (from registry) - exposed …\nEnable migration functionality (flattened from …\nCreate a new builder with default configuration\nCreate a new builder with default configuration\nPretty-print JSON output\nABOUTME: Provider configuration definitions for llmspell …\nSet the provider configuration\nProvider configurations\nRate limiting for hooks (executions per minute)\nSet the global runtime configuration\nGlobal runtime settings\nDirectory for schema definitions\nSet the script execution timeout in seconds\nScript execution timeout in seconds\nSet the security configuration\nSecurity settings\nSession timeout in seconds\nSet the session configuration\nSession management settings\nSet the state persistence configuration\nState persistence settings\nExport events to stdout (for debugging)\nStorage backend type (memory, sled)\nCheck if an engine is configured\nHook timeout in milliseconds\nABOUTME: Tool configuration definitions for llmspell …\nSet the tools configuration\nTool-specific configurations\nValidate configuration\nABOUTME: Configuration validation logic for llmspell …\nExport events to webhook\nBuffer configuration for debug capture\nDebug configuration\nDebug output configuration\nFile output configuration\nModule filter configuration\nPerformance profiling configuration\nStack trace configuration\nWhether to append to existing file\nAuto-report interval in seconds (0 = disabled)\nBuffer configuration for capturing debug output\nEnable colored output for stdout\nModules to disable (wildcards supported)\nWhether debugging is enabled\nWhether to enable buffer capture\nModules to enable (wildcards supported)\nEnable performance tracking\nEnable stack trace capture\nFile output configuration\nFormat for output (text, json, json_pretty)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate debug config from environment variables\nInclude child timers in reports\nInclude source file locations\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefault debug level (Off, Error, Warn, Info, Debug, Trace)\nPer-module level overrides\nMaximum stack depth to capture\nMaximum number of entries to buffer\nNumber of rotated files to keep\nMaximum file size before rotation (e.g., “10MB”)\nMerge with another config (other takes precedence)\nMinimum duration to include in reports (milliseconds)\nModule filters for targeted debugging\nCapture on error level messages\nOutput configuration\nPath to debug log file\nPerformance profiling settings\nStack trace settings\nEnable stdout output\nEngine configurations\nJavaScript engine configuration\nBuilder for <code>JSConfig</code>\nLua engine configuration\nBuilder for <code>LuaConfig</code>\nSecurity/access level for script execution\nStandard library access level\nBuild the configuration\nBuild the configuration\nCreate a new builder for <code>LuaConfig</code>\nCreate a new builder for <code>JSConfig</code>\nEnable or disable console API\nEnable console API\nEnable or disable debug features\nEnable debug features\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the maximum heap size\nMaximum heap size in bytes\nSet the maximum memory limit\nMaximum memory usage in bytes\nCreate a new builder with default configuration\nCreate a new builder with default configuration\nSet security level\nSet security level\nSecurity level\nSecurity level\nSet the standard library level\nStandard library access level\nEnable or disable strict mode\nEnable strict mode\nSet execution timeout\nSet execution timeout\nExecution timeout in milliseconds\nExecution timeout in milliseconds\nCategory of environment variable\nCentralized environment variable registry\nDefinition of an environment variable\nBuilder for EnvVarDef\nUse process environment (default)\nHook system configuration\nIgnore process env, use overrides only\nIsolation mode for environment variable handling\nOverrides on top of process env\nPath discovery configuration\nProvider-specific configuration\nCore runtime configuration\nSession management configuration\nState persistence configuration\nTenant-specific isolation\nTool configuration\nBuild the definition\nBuild configuration from environment values (only …\nSet category\nCategory for grouping\nClear all cached values (for reload)\nSet config path for automatic application\nConfig path for automatic application (e.g., “…\nSet default value\nDefault value if not set\nSet description\nHuman-readable description\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value of an environment variable\nGet all effective values (with priority: overrides &gt; …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a variable is registered\nCreate an isolated registry for library mode\nList all registered variables\nLoad all registered variables from the environment\nName of the environment variable\nCreate a new environment registry\nCreate a new builder\nRegister a new environment variable definition\nReload environment variables\nMark as sensitive\nWhether this contains sensitive data (for masking)\nValidate all loaded values\nSet validator function\nValidator function\nCreate a registry with specific isolation mode\nSet programmatic overrides\nRegister all standard LLMSpell environment variables\nIndividual provider configuration\nBuilder for <code>ProviderConfig</code>\nProvider manager configuration\nBuilder for <code>ProviderManagerConfig</code>\nRate limiting configuration\nRetry configuration\nAdd a provider configuration\nAdd a provider configuration\nSet the API key directly (not recommended for production)\nDirect API key (not recommended for production)\nSet the API key environment variable\nEnvironment variable name for API key\nEnable automatic retry on rate limit\nBackoff multiplier\nSet the base URL\nBase URL for the provider API\nBuild the configuration\nBuild the configuration\nCreate a new builder for <code>ProviderManagerConfig</code>\nCreate a new builder for <code>ProviderConfig</code>\nSet the default model (explicit name)\nDefault model to use (aliased from model for compatibility)\nSet the default provider\nDefault provider to use\nWhether this provider is enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the API key, either direct or from environment\nGet the default provider configuration\nGet a provider configuration by name\nCheck if this provider has valid credentials configured\nInitial delay in milliseconds\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum delay in milliseconds\nMaximum retries (shorthand, overrides retry.max_retries if …\nMaximum number of retries\nSet the maximum tokens\nMaximum tokens per request\nSet the default model\nProvider name identifier\nCreate a new builder with default configuration\nCreate a new builder\nAdd a custom option\nProvider-specific options\nSet the provider type\nProvider type (e.g., “openai”, “anthropic”, “…\nSet all providers at once\nProvider-specific configurations\nSet rate limiting configuration\nRate limiting configuration\nRemove a provider configuration\nRequests per minute\nSet retry configuration\nRetry configuration\nSet the timeout in seconds\nRequest timeout in seconds\nTokens per minute\nAcademic tools configuration\nData processing tools configuration\nDatabase tools configuration\nDocument processing tools configuration\nEmail tools configuration\nFile operations tool configuration\nBuilder for <code>FileOperationsConfig</code>\nHTTP request tool configuration\nBuilder for <code>HttpRequestConfig</code>\nMedia processing tools configuration\nNetwork configuration for tools\nSearch tools configuration\nSystem tools configuration\nTools configuration - Single source of truth for ALL tool …\nBuilder for <code>ToolsConfig</code>\nWeb search tool configuration\nBuilder for <code>WebSearchConfig</code>\nWeb tools configuration (scraping, monitoring, API testing)\nAcademic tools configuration\nAdd an allowed path\nAdd a custom tool configuration\nAdd a default header\nAllow process execution\nAllowed system commands (comma-separated)\nSet allowed domains\nAllowed domains (empty = all allowed)\nAllowed domains (comma-separated or list)\nEnvironment variables to pass through\nSet allowed file extensions\nAllowed file extensions (empty = all allowed)\nSet allowed hosts\nAllowed hosts (empty = all allowed)\nAllowed database hosts (comma-separated)\nSet allowed paths\nAllowed file paths for security\nSearch API key\nEnable or disable atomic writes\nEnable atomic write operations\nAudio processing sample rate\nSet blocked domains\nBlocked domains\nBlocked domains (comma-separated or list)\nSet blocked file extensions\nBlocked file extensions\nSet blocked hosts\nBlocked hosts\nBuild the configuration\nBuild the configuration\nBuild the configuration\nBuild the configuration\nCreate a new builder for <code>ToolsConfig</code>\nCreate a new builder for <code>FileOperationsConfig</code>\nCreate a new builder for <code>WebSearchConfig</code>\nCreate a new builder for <code>HttpRequestConfig</code>\nAPI key for citation services\nCommand timeout in seconds\nConnection timeout in seconds\nAdditional tool configurations (for custom/external tools)\nAdd custom tool configuration\nData processing tools configuration\nDatabase tools configuration\nDefault citation style (APA, MLA, Chicago, etc.)\nDefault search engine\nSet default headers\nDefault headers to include\nDocument processing tools configuration\nEmail tools configuration\nEnable DOI resolution\nOCR enable for scanned documents\nEnable query logging\nEnable TLS/SSL\nEnable data validation\nEnable tool system globally\nWhether file operations are enabled\nExtract images from documents\nExtract metadata\nSet file operations configuration\nFile operations tool configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDefault from address\nGet a custom tool configuration\nSet HTTP request configuration\nHTTP request tool configuration\nMaximum image dimensions (e.g., “4096x4096”)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a domain is allowed\nCheck if a file extension is allowed\nCheck if a host is allowed\nCheck if a path is allowed\nMaximum concurrent connections\nMaximum CSV file size\nSet maximum directory depth\nMaximum directory depth for traversal\nSet maximum file size\nMaximum file size in bytes\nMaximum file size for media processing\nMaximum JSON nesting depth\nMaximum output size in bytes\nMaximum pages to process\nMaximum PDF file size\nSet maximum redirects\nMaximum redirects to follow\nMaximum redirects to follow\nMaximum references to process\nSet maximum request size\nMaximum request size in bytes\nSet maximum results\nMaximum results per search\nMaximum results to return\nMaximum retries for network failures\nMaximum XML file size\nMedia processing tools configuration\nNetwork settings for tools\nCreate a new builder with default configuration\nCreate a new builder with default configuration\nCreate a new builder with default configuration\nCreate a new builder with default configuration\nProcessing timeout in seconds\nProcessing timeout in seconds\nQuery timeout in seconds\nSet rate limit per minute\nGlobal rate limit for tools (requests per minute)\nRate limit requests per minute\nRate limit (emails per minute)\nSafe search mode\nScraping rate limit\nSearch tools configuration\nSMTP server host\nSMTP password (should use env var)\nSMTP server port\nSMTP username\nSystem tools configuration\nSet timeout in seconds\nSet timeout in seconds\nDefault timeout for network operations in seconds\nRequest timeout in seconds\nRequest timeout in seconds\nSearch timeout in seconds\nSet user agent\nUser agent string\nUser agent string for web requests\nEnable or disable file type validation\nEnable file type validation\nEnable SSL verification\nVideo processing quality (0-100)\nSet web search configuration\nWeb search tool configuration\nWeb tools configuration (scraping, monitoring, etc.)\nValidate the entire configuration\nValidate security configuration for risky settings")