[package]
name = "llmspell-tools"
description = "Tool implementations for rs-llmspell"
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true

[dependencies]
llmspell-core = { path = "../llmspell-core" }
llmspell-utils = { path = "../llmspell-utils" }
llmspell-hooks = { path = "../llmspell-hooks" }
llmspell-state-persistence = { path = "../llmspell-state-persistence" }
llmspell-state-traits = { path = "../llmspell-state-traits" }
tokio.workspace = true
async-trait.workspace = true
serde.workspace = true
serde_json.workspace = true
chrono.workspace = true
anyhow.workspace = true
tracing.workspace = true
jsonschema.workspace = true
reqwest.workspace = true
csv = "1.3"
encoding_rs = "0.8"
chardetng = "0.1"

# Parquet support
arrow = "54.0"
parquet = "54.0"

# Excel support
calamine = "0.26"
xlsxwriter = "0.6"

# Base64 encoding
base64 = "0.22"

# File operations
tempfile = "3.20"

# Security dependencies
llmspell-security = { path = "../llmspell-security" }

# Random number generation for jitter
rand = { workspace = true }

# JSON processing with jq
jaq-core = "1.5"
jaq-interpret = "1.5"
jaq-parse = "1.0"
jaq-syn = "1.0"
jaq-std = "1.5"
indexmap = "2.10.0"

# Archive support
zip = "2.2"
tar = "0.4"
flate2 = "1.0"

# Template engines
tera = "1.20"
handlebars = "6.3"

# Validation dependencies
regex = "1.11"
url = "2.5"

# Web scraping
scraper = "0.22"

# UUID generation
uuid = { version = "1.17", features = ["v1", "v4", "v5", "serde"] }

# Hex encoding/decoding
hex = "0.4"

# Diff calculation
similar = { version = "2.6", features = ["text", "inline", "bytes"] }

# Expression evaluation
fasteval = "0.2"

# File watching
notify = "6.1"

# Lazy static initialization
once_cell = "1.20"

# Parking lot for RwLock
parking_lot.workspace = true

# Email support (optional)
lettre = { version = "0.11", optional = true, default-features = false, features = ["smtp-transport", "tokio1-rustls-tls", "hostname", "builder"] }
aws-sdk-ses = { version = "1.61", optional = true }
aws-config = { version = "1.5", optional = true }

# Database support (optional)
sqlx = { version = "0.8", optional = true, features = ["runtime-tokio-rustls", "postgres", "mysql", "sqlite", "chrono", "uuid"] }

# System monitoring (Unix)
[target.'cfg(unix)'.dependencies]
libc = "0.2"

# System monitoring (Windows)
[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["fileapi"] }

[features]
default = []
email = ["lettre"]
email-aws = ["aws-sdk-ses", "aws-config"]
database = ["sqlx"]
database-postgres = ["database", "sqlx/postgres"]
database-mysql = ["database", "sqlx/mysql"]
database-sqlite = ["database", "sqlx/sqlite"]
full = ["email", "email-aws", "database"]

[dev-dependencies]
tempfile = "3.20"
futures = "0.3"
criterion = { version = "0.5", features = ["html_reports"] }
llmspell-bridge = { path = "../llmspell-bridge" }

[[bench]]
name = "tool_initialization"
harness = false

[[bench]]
name = "tool_operations"
harness = false

[[bench]]
name = "hook_performance"
harness = false
