- allow security flags and configs to be set as environment variables or flags.. -e.g allow write to this directory.
- every script /example code when it was last working should have a version stamp of rust code that it worked with in the header and the last code commit signature.
- all lua bridges should be just wrappers to rust native bridge.. not doing json conversion etc in lua engine. we just fixed workflow bridge to be that way.
- all tool functions should be consistent for two word functions either like-this or like_this, but not both.
- security sandbox - add network access, add process execution access 
- workflow output collection should be rust code.. are there other things that should be rust code based on webapp-creator?
- agent, workflow, tool - BaseAgent, should probably have a save output, save output stream function at the rust level.
- in phase 7 we redid state 
- add postgres vector store backend in llmspell-storage, https://github.com/tensorchord/pgvecto.rs or https://github.com/tensorchord/VectorChord/ or pgvector
- remove invoke and just use execute in agent.
- debug for scripts not working
- remove custom steps or document it properly
- agent templates - ideally some of the agent templates use rag to embed more correct information for different domains, or even graphs

Ultrathink, analyze and confirm or deny or provide alternatives.
StatePersistence is already used or not used by ScriptRuntime based on the LLMSpellConfig passed to it.
StatePersistence , on disk or not should already be a field in the Config.
The kernel should not use a different statepersistent from ScriptRuntime.
The kernel should use the same config for persistence as is in the LLMSpellConfig.
ScriptRuntime needs to use the same persistence. 
There may be lock read/write issues between kernel and Script Runtime that needs to be fixed or looked at.
Why is the kernel using it's own kernel config. The LLMSpellConfig is a singular structure for all of llmspell.
All the kernel configs should be part of that config structure.
The code needs to be changed to accomodate that, including how the llmspell-kernel binary instantiates it.
for tests, you need to create a llmspell config structure with the right setup and pass it to the test.
Ultra think, analyze and tell me what needs to happen to do this. in detail.